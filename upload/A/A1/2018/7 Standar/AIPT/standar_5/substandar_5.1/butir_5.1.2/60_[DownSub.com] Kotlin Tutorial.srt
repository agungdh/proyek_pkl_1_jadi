1
00:00:00,240 --> 00:00:02,129
well hello internet<font color="#CCCCCC"> and welcome to my</font>

2
00:00:02,129 --> 00:00:03,959
Kotlin video tutorial in this<font color="#E5E5E5"> one</font>

3
00:00:03,959 --> 00:00:05,339
tutorial I'm going<font color="#E5E5E5"> to cover pretty much</font>

4
00:00:05,339 --> 00:00:07,290
<font color="#E5E5E5">what you</font><font color="#CCCCCC"> would find in a standard</font><font color="#E5E5E5"> 250</font>

5
00:00:07,290 --> 00:00:09,150
<font color="#E5E5E5">300 page book on cotton</font><font color="#CCCCCC"> 1 which means</font>

6
00:00:09,150 --> 00:00:10,950
<font color="#E5E5E5">the core syntax of the entire language</font>

7
00:00:10,950 --> 00:00:12,870
<font color="#CCCCCC">and like always in the description</font>

8
00:00:12,870 --> 00:00:15,389
underneath the video is<font color="#E5E5E5"> a link to all</font><font color="#CCCCCC"> of</font>

9
00:00:15,389 --> 00:00:17,150
<font color="#E5E5E5">the code from</font><font color="#CCCCCC"> this video as well</font><font color="#E5E5E5"> as</font>

10
00:00:17,150 --> 00:00:19,650
<font color="#E5E5E5">timestamps to all the individual parts</font>

11
00:00:19,650 --> 00:00:20,850
<font color="#E5E5E5">of the video so you can watch whatever</font>

12
00:00:20,850 --> 00:00:22,350
you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> or watch part of the video</font><font color="#E5E5E5"> and</font>

13
00:00:22,350 --> 00:00:24,180
<font color="#E5E5E5">come back to it</font><font color="#CCCCCC"> or do</font><font color="#E5E5E5"> whatever and also</font>

14
00:00:24,180 --> 00:00:25,140
<font color="#CCCCCC">I'm going to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> how to install</font>

15
00:00:25,140 --> 00:00:26,760
<font color="#E5E5E5">everything you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> need to</font>

16
00:00:26,760 --> 00:00:28,590
complete<font color="#E5E5E5"> this video and I have a lot to</font>

17
00:00:28,590 --> 00:00:30,869
<font color="#CCCCCC">do</font><font color="#E5E5E5"> so let's get into it alright I'm</font>

18
00:00:30,869 --> 00:00:32,549
guessing you already<font color="#E5E5E5"> have the Java</font>

19
00:00:32,549 --> 00:00:35,100
<font color="#E5E5E5">development kit installed</font><font color="#CCCCCC"> if you do not</font>

20
00:00:35,100 --> 00:00:37,020
then you're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to have to go just</font>

21
00:00:37,020 --> 00:00:38,670
type in Java development kit don't worry

22
00:00:38,670 --> 00:00:40,590
about<font color="#E5E5E5"> this and you're going</font><font color="#CCCCCC"> to come to a</font>

23
00:00:40,590 --> 00:00:42,719
page it<font color="#E5E5E5"> looks like this and you're going</font>

24
00:00:42,719 --> 00:00:44,460
to<font color="#E5E5E5"> find whatever operating</font><font color="#CCCCCC"> system you</font>

25
00:00:44,460 --> 00:00:47,399
are using Linux Mac OS windows whatever

26
00:00:47,399 --> 00:00:50,550
click on that and install that stuff<font color="#E5E5E5"> and</font>

27
00:00:50,550 --> 00:00:52,170
<font color="#E5E5E5">I'm going</font><font color="#CCCCCC"> to go pretty quickly here</font><font color="#E5E5E5"> then</font>

28
00:00:52,170 --> 00:00:54,059
you're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to need to go to JetBrains</font>

29
00:00:54,059 --> 00:00:58,440
<font color="#E5E5E5">comm</font><font color="#CCCCCC"> IDE 8 and download and more</font>

30
00:00:58,440 --> 00:01:00,329
specifically whether<font color="#E5E5E5"> you're on Windows</font>

31
00:01:00,329 --> 00:01:01,890
<font color="#CCCCCC">or Mac OS we're going to be using the</font>

32
00:01:01,890 --> 00:01:03,480
free<font color="#CCCCCC"> community version</font><font color="#E5E5E5"> so you're going</font>

33
00:01:03,480 --> 00:01:05,040
to<font color="#E5E5E5"> click on download</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if you're on</font>

34
00:01:05,040 --> 00:01:06,600
Mac OS<font color="#E5E5E5"> you're going to see this little</font>

35
00:01:06,600 --> 00:01:09,479
<font color="#E5E5E5">guy pop up down here dmg click on open</font>

36
00:01:09,479 --> 00:01:11,580
and<font color="#E5E5E5"> then you're going to the folder that</font>

37
00:01:11,580 --> 00:01:14,659
opens you're going to grab the<font color="#E5E5E5"> IntelliJ</font>

38
00:01:14,659 --> 00:01:16,920
application and drop it in<font color="#E5E5E5"> your</font>

39
00:01:16,920 --> 00:01:18,780
Applications folder<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> whenever</font>

40
00:01:18,780 --> 00:01:20,189
you do<font color="#CCCCCC"> that this guy's</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> open up</font>

41
00:01:20,189 --> 00:01:21,689
you're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to decide if you want a</font>

42
00:01:21,689 --> 00:01:23,400
white interface or a dark interface

43
00:01:23,400 --> 00:01:26,250
click on<font color="#CCCCCC"> keymaps</font><font color="#E5E5E5"> and click on I've</font><font color="#CCCCCC"> never</font>

44
00:01:26,250 --> 00:01:29,070
used<font color="#E5E5E5"> IDE a and click on launch or script</font>

45
00:01:29,070 --> 00:01:31,500
<font color="#E5E5E5">checkmark inside of here</font><font color="#CCCCCC"> and click on</font>

46
00:01:31,500 --> 00:01:33,780
<font color="#E5E5E5">default plugins and all this is fine</font>

47
00:01:33,780 --> 00:01:35,579
<font color="#E5E5E5">just click on featured plugins all</font>

48
00:01:35,579 --> 00:01:37,140
that's fine<font color="#E5E5E5"> click on start</font><font color="#CCCCCC"> using</font>

49
00:01:37,140 --> 00:01:39,299
IntelliJ<font color="#E5E5E5"> then to create your very first</font>

50
00:01:39,299 --> 00:01:41,520
<font color="#CCCCCC">cutland project</font><font color="#E5E5E5"> whenever this guy opens</font>

51
00:01:41,520 --> 00:01:43,920
up<font color="#E5E5E5"> click on create</font><font color="#CCCCCC"> new project come</font><font color="#E5E5E5"> over</font>

52
00:01:43,920 --> 00:01:44,939
<font color="#E5E5E5">here on the left side of the screen</font>

53
00:01:44,939 --> 00:01:48,450
<font color="#CCCCCC">click on Kotlin and click on Kotlin</font><font color="#E5E5E5"> JVM</font>

54
00:01:48,450 --> 00:01:50,970
and click on next<font color="#CCCCCC"> this guy is</font><font color="#E5E5E5"> going to</font>

55
00:01:50,970 --> 00:01:52,680
pop up<font color="#CCCCCC"> here give your project a name I</font>

56
00:01:52,680 --> 00:01:54,000
called mine Kotlin<font color="#CCCCCC"> tuts</font>

57
00:01:54,000 --> 00:01:55,740
it's this is automatically going to<font color="#E5E5E5"> open</font>

58
00:01:55,740 --> 00:01:57,000
<font color="#E5E5E5">up</font><font color="#CCCCCC"> like this you're going</font><font color="#E5E5E5"> to click on</font>

59
00:01:57,000 --> 00:01:59,549
project<font color="#E5E5E5"> SDK and you're going to</font><font color="#CCCCCC"> click on</font>

60
00:01:59,549 --> 00:02:02,430
this guy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> go and find whatever JVM</font>

61
00:02:02,430 --> 00:02:04,710
you want to use<font color="#E5E5E5"> come down here click on</font>

62
00:02:04,710 --> 00:02:06,659
finish whatever you do this is<font color="#E5E5E5"> going to</font>

63
00:02:06,659 --> 00:02:07,979
<font color="#CCCCCC">open up</font><font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> come over to</font>

64
00:02:07,979 --> 00:02:10,288
<font color="#CCCCCC">your source directory</font><font color="#E5E5E5"> right click on it</font>

65
00:02:10,288 --> 00:02:13,260
<font color="#CCCCCC">click on new</font><font color="#E5E5E5"> and then Kotlin file class</font>

66
00:02:13,260 --> 00:02:14,610
this<font color="#E5E5E5"> guy's going to pop up inside of</font>

67
00:02:14,610 --> 00:02:16,769
<font color="#E5E5E5">here give</font><font color="#CCCCCC"> it a name I called</font><font color="#E5E5E5"> nine Kotlin</font>

68
00:02:16,769 --> 00:02:17,939
<font color="#CCCCCC">tub again</font><font color="#E5E5E5"> call it whatever you want</font>

69
00:02:17,939 --> 00:02:20,129
<font color="#E5E5E5">click on</font><font color="#CCCCCC"> OK and</font><font color="#E5E5E5"> then you're going to</font>

70
00:02:20,129 --> 00:02:22,739
<font color="#E5E5E5">type the simple hello world</font><font color="#CCCCCC"> script</font>

71
00:02:22,739 --> 00:02:24,329
<font color="#E5E5E5">inside here</font><font color="#CCCCCC"> just to verify</font><font color="#E5E5E5"> everything</font>

72
00:02:24,329 --> 00:02:26,400
works<font color="#CCCCCC"> type</font><font color="#E5E5E5"> exactly what you see there</font>

73
00:02:26,400 --> 00:02:28,409
and you can click<font color="#CCCCCC"> on pause we want to</font>

74
00:02:28,409 --> 00:02:30,150
check<font color="#CCCCCC"> that</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> whenever you do</font><font color="#CCCCCC"> hello</font>

75
00:02:30,150 --> 00:02:31,620
world<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to print down here you're</font>

76
00:02:31,620 --> 00:02:32,730
probably more than<font color="#CCCCCC"> likely going to</font><font color="#E5E5E5"> see</font>

77
00:02:32,730 --> 00:02:34,379
<font color="#E5E5E5">this it's a bug</font>

78
00:02:34,379 --> 00:02:36,329
don't worry about<font color="#E5E5E5"> it it's your</font>

79
00:02:36,329 --> 00:02:37,769
applications are going<font color="#E5E5E5"> to compile</font>

80
00:02:37,769 --> 00:02:39,599
perfectly fine it's just a known bug

81
00:02:39,599 --> 00:02:41,909
<font color="#E5E5E5">that will go away</font><font color="#CCCCCC"> finally or eventually</font>

82
00:02:41,909 --> 00:02:44,849
<font color="#E5E5E5">and that's how you install both IntelliJ</font>

83
00:02:44,849 --> 00:02:48,420
and Kotlin on a<font color="#CCCCCC"> Mac o west computer and</font>

84
00:02:48,420 --> 00:02:49,680
now<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> show you how</font><font color="#E5E5E5"> to set</font><font color="#CCCCCC"> it up on</font>

85
00:02:49,680 --> 00:02:51,420
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> basically the same thing</font><font color="#CCCCCC"> alright</font>

86
00:02:51,420 --> 00:02:54,569
<font color="#CCCCCC">so you go to JetBrains comm ide a</font>

87
00:02:54,569 --> 00:02:56,519
download you're going to come<font color="#CCCCCC"> over</font><font color="#E5E5E5"> here</font>

88
00:02:56,519 --> 00:02:58,230
<font color="#E5E5E5">click on</font><font color="#CCCCCC"> Windows then I'm going to</font><font color="#E5E5E5"> click</font>

89
00:02:58,230 --> 00:03:00,420
<font color="#E5E5E5">on download</font><font color="#CCCCCC"> then this guy is</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

90
00:03:00,420 --> 00:03:01,709
pop up<font color="#E5E5E5"> down here you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> click</font>

91
00:03:01,709 --> 00:03:04,440
on<font color="#E5E5E5"> save this is going to pop up and</font>

92
00:03:04,440 --> 00:03:06,810
<font color="#E5E5E5">you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> click on</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> and this</font>

93
00:03:06,810 --> 00:03:08,790
<font color="#E5E5E5">is perfectly fine</font><font color="#CCCCCC"> click on next and</font>

94
00:03:08,790 --> 00:03:10,709
<font color="#E5E5E5">leave everything the</font><font color="#CCCCCC"> way it</font><font color="#E5E5E5"> is click on</font>

95
00:03:10,709 --> 00:03:12,750
next<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it is going to install</font>

96
00:03:12,750 --> 00:03:14,579
<font color="#CCCCCC">everything for you</font><font color="#E5E5E5"> after it's all done</font>

97
00:03:14,579 --> 00:03:16,769
<font color="#E5E5E5">installing you're going to see this guy</font>

98
00:03:16,769 --> 00:03:19,139
leave this run IntelliJ<font color="#E5E5E5"> Community</font>

99
00:03:19,139 --> 00:03:21,449
<font color="#E5E5E5">Edition checked and click on finish</font><font color="#CCCCCC"> and</font>

100
00:03:21,449 --> 00:03:23,099
what<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to do here is do</font><font color="#E5E5E5"> not</font>

101
00:03:23,099 --> 00:03:25,889
import settings and click<font color="#E5E5E5"> on OK and then</font>

102
00:03:25,889 --> 00:03:27,599
you're going<font color="#E5E5E5"> to check if you want a</font>

103
00:03:27,599 --> 00:03:29,340
white<font color="#E5E5E5"> or a black interface click on</font>

104
00:03:29,340 --> 00:03:31,079
default plugins<font color="#CCCCCC"> leave</font><font color="#E5E5E5"> everything the</font>

105
00:03:31,079 --> 00:03:32,910
<font color="#CCCCCC">same featured plug-in start</font><font color="#E5E5E5"> using</font>

106
00:03:32,910 --> 00:03:35,220
IntelliJ<font color="#CCCCCC"> click on that guy come in here</font>

107
00:03:35,220 --> 00:03:37,019
create a<font color="#E5E5E5"> new project</font><font color="#CCCCCC"> you're going to</font>

108
00:03:37,019 --> 00:03:39,239
come in and<font color="#E5E5E5"> click on Kotlin Kotlin JVM</font>

109
00:03:39,239 --> 00:03:41,519
come down here click<font color="#E5E5E5"> on next</font><font color="#CCCCCC"> come back</font>

110
00:03:41,519 --> 00:03:43,290
<font color="#E5E5E5">up inside</font><font color="#CCCCCC"> of here you're going</font><font color="#E5E5E5"> to click</font>

111
00:03:43,290 --> 00:03:45,510
on give your project a<font color="#CCCCCC"> name you're going</font>

112
00:03:45,510 --> 00:03:48,090
<font color="#E5E5E5">to click inside</font><font color="#CCCCCC"> of here</font><font color="#E5E5E5"> to select the</font>

113
00:03:48,090 --> 00:03:50,639
SDK you want to use and<font color="#E5E5E5"> you can see</font>

114
00:03:50,639 --> 00:03:52,829
<font color="#E5E5E5">right</font><font color="#CCCCCC"> there I</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> version 1.8 and then</font>

115
00:03:52,829 --> 00:03:54,299
I'm<font color="#E5E5E5"> going to click</font><font color="#CCCCCC"> on finish this</font><font color="#E5E5E5"> is</font>

116
00:03:54,299 --> 00:03:55,530
going to<font color="#CCCCCC"> open up you're</font><font color="#E5E5E5"> going to come</font>

117
00:03:55,530 --> 00:03:57,269
over<font color="#E5E5E5"> to source right click on it to</font>

118
00:03:57,269 --> 00:03:59,579
<font color="#E5E5E5">click on new and Kotlin file class</font>

119
00:03:59,579 --> 00:04:01,500
<font color="#E5E5E5">you're going to type in</font><font color="#CCCCCC"> exactly what I</font>

120
00:04:01,500 --> 00:04:03,359
typed in for I'll show you that<font color="#E5E5E5"> here in</font>

121
00:04:03,359 --> 00:04:04,919
<font color="#E5E5E5">a second</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> by the way if you want to</font>

122
00:04:04,919 --> 00:04:06,900
<font color="#E5E5E5">run and your code you're going to click</font>

123
00:04:06,900 --> 00:04:09,060
on run and run<font color="#E5E5E5"> and that's kind</font><font color="#CCCCCC"> of run it</font>

124
00:04:09,060 --> 00:04:11,430
for you<font color="#CCCCCC"> and whenever</font><font color="#E5E5E5"> you click on run in</font>

125
00:04:11,430 --> 00:04:13,019
Windows it's going to come up like this

126
00:04:13,019 --> 00:04:14,849
<font color="#E5E5E5">so you're going to click on demo Kotlin</font>

127
00:04:14,849 --> 00:04:16,918
<font color="#CCCCCC">Tots or whatever you call doors click</font><font color="#E5E5E5"> on</font>

128
00:04:16,918 --> 00:04:19,139
that<font color="#E5E5E5"> by the</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> here is</font><font color="#CCCCCC"> the simple hello</font>

129
00:04:19,139 --> 00:04:20,880
world<font color="#E5E5E5"> application I'm going</font><font color="#CCCCCC"> to use to</font>

130
00:04:20,880 --> 00:04:22,440
verify<font color="#CCCCCC"> that</font><font color="#E5E5E5"> everything is installed</font>

131
00:04:22,440 --> 00:04:24,690
properly<font color="#CCCCCC"> and after you run it you're</font>

132
00:04:24,690 --> 00:04:25,920
going<font color="#E5E5E5"> to see down</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> that hole</font>

133
00:04:25,920 --> 00:04:27,630
world prints out<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so now</font><font color="#CCCCCC"> you</font>

134
00:04:27,630 --> 00:04:29,640
have Kotlin and<font color="#E5E5E5"> IntelliJ</font><font color="#CCCCCC"> and all that</font>

135
00:04:29,640 --> 00:04:31,410
stuff installed now let's start writing

136
00:04:31,410 --> 00:04:33,390
<font color="#E5E5E5">some code all right so this should all</font>

137
00:04:33,390 --> 00:04:35,340
look familiar<font color="#E5E5E5"> because that's exactly</font>

138
00:04:35,340 --> 00:04:36,660
<font color="#CCCCCC">what you</font><font color="#E5E5E5"> have here oh by the way</font>

139
00:04:36,660 --> 00:04:38,100
everybody<font color="#E5E5E5"> always asked me how did I get</font>

140
00:04:38,100 --> 00:04:39,570
this<font color="#E5E5E5"> from the bottom to</font><font color="#CCCCCC"> the right</font><font color="#E5E5E5"> you're</font>

141
00:04:39,570 --> 00:04:41,250
going<font color="#CCCCCC"> to right-click on it</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that and</font>

142
00:04:41,250 --> 00:04:42,870
<font color="#E5E5E5">you're going to click on move to your</font>

143
00:04:42,870 --> 00:04:45,840
<font color="#CCCCCC">go-to top left bottom or right okay so</font>

144
00:04:45,840 --> 00:04:46,650
that's<font color="#E5E5E5"> how I did</font><font color="#CCCCCC"> that</font>

145
00:04:46,650 --> 00:04:48,240
<font color="#E5E5E5">all</font><font color="#CCCCCC"> right so let's write some code first</font>

146
00:04:48,240 --> 00:04:49,980
thing I want<font color="#E5E5E5"> to talk about are variables</font>

147
00:04:49,980 --> 00:04:51,960
<font color="#E5E5E5">by the way this is where all</font><font color="#CCCCCC"> your</font>

148
00:04:51,960 --> 00:04:53,880
<font color="#E5E5E5">application is your main function</font><font color="#CCCCCC"> this</font>

149
00:04:53,880 --> 00:04:55,890
<font color="#CCCCCC">is where everything</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> execute</font>

150
00:04:55,890 --> 00:04:58,110
<font color="#E5E5E5">and then right here</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see is how</font>

151
00:04:58,110 --> 00:05:00,510
you print<font color="#E5E5E5"> out</font><font color="#CCCCCC"> to screen</font><font color="#E5E5E5"> very first I'm</font>

152
00:05:00,510 --> 00:05:02,730
going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> our variables</font><font color="#CCCCCC"> now</font>

153
00:05:02,730 --> 00:05:04,020
there are different types<font color="#CCCCCC"> of variables</font>

154
00:05:04,020 --> 00:05:06,890
<font color="#CCCCCC">there are mutable and immutable and</font>

155
00:05:06,890 --> 00:05:09,240
immutable sometimes referred to as

156
00:05:09,240 --> 00:05:12,330
read-only<font color="#E5E5E5"> variables and you create an</font>

157
00:05:12,330 --> 00:05:17,040
immutable<font color="#CCCCCC"> or an unchangeable variable by</font>

158
00:05:17,040 --> 00:05:19,710
typing in Val and then let's say name is

159
00:05:19,710 --> 00:05:22,830
<font color="#CCCCCC">equal to Derek okay there you go</font>

160
00:05:22,830 --> 00:05:24,750
you<font color="#CCCCCC"> just created yourself a read only</font>

161
00:05:24,750 --> 00:05:26,790
variable<font color="#CCCCCC"> you can also create mutable</font>

162
00:05:26,790 --> 00:05:29,130
variables inside of Kotlin<font color="#E5E5E5"> by changing</font>

163
00:05:29,130 --> 00:05:31,710
Val into variable<font color="#E5E5E5"> and I'll say</font><font color="#CCCCCC"> something</font>

164
00:05:31,710 --> 00:05:35,820
<font color="#E5E5E5">like my age is equal</font><font color="#CCCCCC"> to 42 okay my name</font>

165
00:05:35,820 --> 00:05:37,410
hopefully is never going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> change</font><font color="#E5E5E5"> and</font>

166
00:05:37,410 --> 00:05:40,260
my age more<font color="#E5E5E5"> than likely</font><font color="#CCCCCC"> will so that is</font>

167
00:05:40,260 --> 00:05:41,670
the difference between<font color="#E5E5E5"> those</font><font color="#CCCCCC"> two guys</font>

168
00:05:41,670 --> 00:05:44,220
<font color="#E5E5E5">now Kotlin uses what is</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> type</font>

169
00:05:44,220 --> 00:05:46,530
inference<font color="#E5E5E5"> so whenever</font><font color="#CCCCCC"> I put a string</font>

170
00:05:46,530 --> 00:05:48,360
inside of here Kotlin knows that this is

171
00:05:48,360 --> 00:05:50,580
a<font color="#E5E5E5"> string and it refers to it as a string</font>

172
00:05:50,580 --> 00:05:52,470
likewise here it's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to refer to my</font>

173
00:05:52,470 --> 00:05:55,050
<font color="#E5E5E5">age as an integer and those squiggly</font>

174
00:05:55,050 --> 00:05:57,060
<font color="#E5E5E5">lines are there</font><font color="#CCCCCC"> because I'm you</font><font color="#E5E5E5"> can see</font>

175
00:05:57,060 --> 00:05:59,880
right<font color="#CCCCCC"> here</font><font color="#E5E5E5"> variable my age is never used</font>

176
00:05:59,880 --> 00:06:02,070
all right IntelliJ<font color="#CCCCCC"> is a very verbose</font>

177
00:06:02,070 --> 00:06:04,290
with warnings<font color="#E5E5E5"> so what I want to do here</font>

178
00:06:04,290 --> 00:06:07,110
<font color="#E5E5E5">is even</font><font color="#CCCCCC"> though it will figure</font><font color="#E5E5E5"> out what</font>

179
00:06:07,110 --> 00:06:09,900
the type<font color="#E5E5E5"> is on its own</font><font color="#CCCCCC"> you can also come</font>

180
00:06:09,900 --> 00:06:11,610
in<font color="#CCCCCC"> and define your type so let's say</font><font color="#E5E5E5"> I</font>

181
00:06:11,610 --> 00:06:13,050
want to come in here<font color="#E5E5E5"> and I want to</font>

182
00:06:13,050 --> 00:06:15,900
create<font color="#E5E5E5"> a mutable or changeable variable</font>

183
00:06:15,900 --> 00:06:18,960
<font color="#E5E5E5">I'm going to</font><font color="#CCCCCC"> call this big int</font><font color="#E5E5E5"> and I</font>

184
00:06:18,960 --> 00:06:21,090
want this<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> an integer well you may</font>

185
00:06:21,090 --> 00:06:23,100
<font color="#E5E5E5">ask yourself well</font><font color="#CCCCCC"> how big</font><font color="#E5E5E5"> of an integer</font>

186
00:06:23,100 --> 00:06:24,690
<font color="#E5E5E5">can</font><font color="#CCCCCC"> I store inside of</font><font color="#E5E5E5"> there</font>

187
00:06:24,690 --> 00:06:27,720
well I can go and<font color="#E5E5E5"> call max value and it</font>

188
00:06:27,720 --> 00:06:30,060
will tell me<font color="#CCCCCC"> exactly that and we're</font>

189
00:06:30,060 --> 00:06:32,130
going<font color="#CCCCCC"> to find out what that is</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font>

190
00:06:32,130 --> 00:06:35,340
<font color="#CCCCCC">we can go and tell this small intz</font><font color="#E5E5E5"> like</font>

191
00:06:35,340 --> 00:06:38,139
that<font color="#E5E5E5"> and I will just change this</font><font color="#CCCCCC"> to</font>

192
00:06:38,139 --> 00:06:40,719
in value and I'll be able<font color="#E5E5E5"> to get that</font>

193
00:06:40,719 --> 00:06:43,479
value<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> I can then come</font><font color="#E5E5E5"> in and go</font>

194
00:06:43,479 --> 00:06:46,060
<font color="#E5E5E5">print line and I'll say</font><font color="#CCCCCC"> something like</font>

195
00:06:46,060 --> 00:06:51,669
<font color="#CCCCCC">biggest int and we can go and put the</font>

196
00:06:51,669 --> 00:06:53,409
information in here and<font color="#E5E5E5"> multiple</font>

197
00:06:53,409 --> 00:06:54,909
<font color="#E5E5E5">different ways</font><font color="#CCCCCC"> one thing we can do is</font>

198
00:06:54,909 --> 00:06:56,499
<font color="#CCCCCC">just put a plus sign inside of there and</font>

199
00:06:56,499 --> 00:07:00,520
<font color="#E5E5E5">then put big int like that or we could</font>

200
00:07:00,520 --> 00:07:03,939
also come in and we could<font color="#E5E5E5"> say small list</font>

201
00:07:03,939 --> 00:07:07,210
<font color="#CCCCCC">means</font><font color="#E5E5E5"> small list int and this is</font>

202
00:07:07,210 --> 00:07:08,560
obviously going to<font color="#CCCCCC"> be big in</font><font color="#E5E5E5"> but I'm</font>

203
00:07:08,560 --> 00:07:09,819
gonna<font color="#E5E5E5"> get rid of that all together and</font>

204
00:07:09,819 --> 00:07:11,590
I'm<font color="#E5E5E5"> gonna put that guy right there</font><font color="#CCCCCC"> and</font>

205
00:07:11,590 --> 00:07:13,000
you can<font color="#CCCCCC"> use what it's called string</font>

206
00:07:13,000 --> 00:07:15,340
interpolation which is going<font color="#E5E5E5"> to allow me</font>

207
00:07:15,340 --> 00:07:17,710
<font color="#CCCCCC">to put</font><font color="#E5E5E5"> small int inside of there and how</font>

208
00:07:17,710 --> 00:07:21,279
I do that<font color="#CCCCCC"> is I come in and I put a</font>

209
00:07:21,279 --> 00:07:24,550
dollar sign followed<font color="#CCCCCC"> by whatever the</font>

210
00:07:24,550 --> 00:07:27,969
name<font color="#CCCCCC"> is for my variable and you can see</font>

211
00:07:27,969 --> 00:07:29,379
it<font color="#E5E5E5"> gives you all sorts of</font><font color="#CCCCCC"> different</font>

212
00:07:29,379 --> 00:07:30,849
information here<font color="#E5E5E5"> all right so we got</font>

213
00:07:30,849 --> 00:07:32,589
that all set<font color="#E5E5E5"> up and if I want to run it</font>

214
00:07:32,589 --> 00:07:35,020
<font color="#E5E5E5">come in and run it and it's going to</font>

215
00:07:35,020 --> 00:07:37,330
<font color="#E5E5E5">print all</font><font color="#CCCCCC"> of that out and here you can</font>

216
00:07:37,330 --> 00:07:39,400
see the biggest<font color="#E5E5E5"> integer I can have is</font>

217
00:07:39,400 --> 00:07:40,990
<font color="#E5E5E5">that big number and the smallest integer</font>

218
00:07:40,990 --> 00:07:42,759
<font color="#E5E5E5">is that number and there's two different</font>

219
00:07:42,759 --> 00:07:45,550
<font color="#E5E5E5">ways</font><font color="#CCCCCC"> to place that information or print</font>

220
00:07:45,550 --> 00:07:47,830
that information out<font color="#E5E5E5"> on my screen</font><font color="#CCCCCC"> don't</font>

221
00:07:47,830 --> 00:07:49,569
<font color="#E5E5E5">worry about all</font><font color="#CCCCCC"> of the warnings they're</font>

222
00:07:49,569 --> 00:07:51,099
just telling<font color="#CCCCCC"> me I'm not using</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> in</font>

223
00:07:51,099 --> 00:07:52,360
that<font color="#E5E5E5"> all right let's get rid of that so</font>

224
00:07:52,360 --> 00:07:54,189
that warnings go away now there are of

225
00:07:54,189 --> 00:07:56,710
course<font color="#E5E5E5"> many other different variable</font>

226
00:07:56,710 --> 00:07:57,159
types

227
00:07:57,159 --> 00:07:59,589
you're going to have integers which are

228
00:07:59,589 --> 00:08:03,460
referred<font color="#CCCCCC"> to</font><font color="#E5E5E5"> using int you are also going</font>

229
00:08:03,460 --> 00:08:05,949
to<font color="#E5E5E5"> have Long's</font><font color="#CCCCCC"> and here in a second I</font>

230
00:08:05,949 --> 00:08:08,080
<font color="#CCCCCC">will show you how big or how small along</font>

231
00:08:08,080 --> 00:08:09,580
<font color="#E5E5E5">can be you're going</font><font color="#CCCCCC"> to have doubles</font>

232
00:08:09,580 --> 00:08:12,490
<font color="#E5E5E5">you're also going to have floats</font><font color="#CCCCCC"> you're</font>

233
00:08:12,490 --> 00:08:16,389
also going to have volumes<font color="#E5E5E5"> boolean and</font>

234
00:08:16,389 --> 00:08:19,419
as per numbers you can have shorts which

235
00:08:19,419 --> 00:08:22,089
are<font color="#E5E5E5"> going to be 16 bytes</font><font color="#CCCCCC"> or you can have</font>

236
00:08:22,089 --> 00:08:24,399
bytes which are going<font color="#CCCCCC"> to be 8 bytes</font><font color="#E5E5E5"> and</font>

237
00:08:24,399 --> 00:08:27,159
let's go in here<font color="#E5E5E5"> and oh well so you'll</font>

238
00:08:27,159 --> 00:08:28,449
have characters I'm going to show<font color="#E5E5E5"> you</font>

239
00:08:28,449 --> 00:08:29,830
examples<font color="#E5E5E5"> of all these different</font><font color="#CCCCCC"> guys</font>

240
00:08:29,830 --> 00:08:32,260
though all<font color="#E5E5E5"> right all right so I went in</font>

241
00:08:32,260 --> 00:08:33,969
<font color="#E5E5E5">here I already showed you I typed in the</font>

242
00:08:33,969 --> 00:08:36,219
<font color="#CCCCCC">how</font><font color="#E5E5E5"> to find out the biggest int and the</font>

243
00:08:36,219 --> 00:08:38,019
smallest<font color="#E5E5E5"> int I then went in and created</font>

244
00:08:38,019 --> 00:08:41,019
<font color="#CCCCCC">the largest long and the smallest long</font>

245
00:08:41,019 --> 00:08:43,750
the largest<font color="#CCCCCC"> doubles and so forth</font><font color="#E5E5E5"> and so</font>

246
00:08:43,750 --> 00:08:45,339
on<font color="#CCCCCC"> and floats and all that fun stuff</font>

247
00:08:45,339 --> 00:08:47,199
<font color="#E5E5E5">we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> run it and</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> going</font>

248
00:08:47,199 --> 00:08:48,310
to<font color="#E5E5E5"> say over here on the right side of</font>

249
00:08:48,310 --> 00:08:49,779
the<font color="#E5E5E5"> screen all of that look how big</font>

250
00:08:49,779 --> 00:08:51,140
Long's are these are

251
00:08:51,140 --> 00:08:53,630
<font color="#E5E5E5">all right and there</font><font color="#CCCCCC"> is the biggest</font>

252
00:08:53,630 --> 00:08:56,660
<font color="#E5E5E5">double and the smallest and all of those</font>

253
00:08:56,660 --> 00:08:58,820
different things<font color="#CCCCCC"> now one thing that</font><font color="#E5E5E5"> is</font>

254
00:08:58,820 --> 00:09:01,340
<font color="#E5E5E5">important</font><font color="#CCCCCC"> to be aware of</font><font color="#E5E5E5"> however is</font>

255
00:09:01,340 --> 00:09:05,060
there is a loss of precision<font color="#CCCCCC"> whenever</font>

256
00:09:05,060 --> 00:09:06,590
you are<font color="#E5E5E5"> working with</font><font color="#CCCCCC"> floating-point</font>

257
00:09:06,590 --> 00:09:08,750
numbers and let me go and give you an

258
00:09:08,750 --> 00:09:10,940
example of what I<font color="#CCCCCC"> mean</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> let's go</font>

259
00:09:10,940 --> 00:09:15,590
and create<font color="#E5E5E5"> a variable and double num1</font>

260
00:09:15,590 --> 00:09:18,740
<font color="#E5E5E5">and this is going to be a double is</font>

261
00:09:18,740 --> 00:09:21,170
equal to and I'm going<font color="#CCCCCC"> to go 1</font><font color="#E5E5E5"> and what</font>

262
00:09:21,170 --> 00:09:22,430
you're going<font color="#CCCCCC"> to do here is you're going</font>

263
00:09:22,430 --> 00:09:23,960
to<font color="#E5E5E5"> with your doubles you're going to</font>

264
00:09:23,960 --> 00:09:26,120
have a precision up to 15 digits<font color="#E5E5E5"> so even</font>

265
00:09:26,120 --> 00:09:27,920
though they can be gigantic<font color="#CCCCCC"> they're</font>

266
00:09:27,920 --> 00:09:29,780
<font color="#E5E5E5">really not so what you want to be aware</font>

267
00:09:29,780 --> 00:09:31,700
of is I'm going to go<font color="#E5E5E5"> okay so there is</font>

268
00:09:31,700 --> 00:09:34,460
<font color="#E5E5E5">15 digits let's add 16 on there and then</font>

269
00:09:34,460 --> 00:09:36,110
we're going<font color="#E5E5E5"> to come in here and we're</font>

270
00:09:36,110 --> 00:09:38,240
going<font color="#CCCCCC"> to copy that paste that inside of</font>

271
00:09:38,240 --> 00:09:40,700
<font color="#E5E5E5">there change this to double</font><font color="#CCCCCC"> num2 and</font>

272
00:09:40,700 --> 00:09:42,110
then I'm going<font color="#E5E5E5"> to print out the</font>

273
00:09:42,110 --> 00:09:44,990
difference or the<font color="#CCCCCC"> sum let's do a sum and</font>

274
00:09:44,990 --> 00:09:46,760
then you'll be<font color="#CCCCCC"> able to see how it fails</font>

275
00:09:46,760 --> 00:09:49,310
up<font color="#CCCCCC"> fails</font><font color="#E5E5E5"> whenever I'm working with it so</font>

276
00:09:49,310 --> 00:09:50,780
you can also come<font color="#E5E5E5"> in</font><font color="#CCCCCC"> here go plus sign</font>

277
00:09:50,780 --> 00:09:52,550
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> and you could go and perform</font>

278
00:09:52,550 --> 00:09:54,740
<font color="#E5E5E5">your arithmetic directly inside</font><font color="#CCCCCC"> of here</font>

279
00:09:54,740 --> 00:09:58,850
double<font color="#CCCCCC"> Nam 1</font><font color="#E5E5E5"> and double num2 like that</font>

280
00:09:58,850 --> 00:10:00,590
<font color="#E5E5E5">no you probably have noticed there</font><font color="#CCCCCC"> are</font>

281
00:10:00,590 --> 00:10:03,050
<font color="#E5E5E5">no semicolons inside of Kotlin let's run</font>

282
00:10:03,050 --> 00:10:04,610
that<font color="#E5E5E5"> and you're going to see that</font>

283
00:10:04,610 --> 00:10:06,320
everything added up perfectly fine<font color="#CCCCCC"> a</font>

284
00:10:06,320 --> 00:10:07,880
<font color="#E5E5E5">whole bunch of ones until it got right</font>

285
00:10:07,880 --> 00:10:09,560
<font color="#CCCCCC">here to the sixteenth digit and it</font>

286
00:10:09,560 --> 00:10:10,940
messed up<font color="#CCCCCC"> so just want</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> you aware</font>

287
00:10:10,940 --> 00:10:14,540
<font color="#CCCCCC">that precision falls apart</font><font color="#E5E5E5"> after 15</font>

288
00:10:14,540 --> 00:10:16,310
digits<font color="#E5E5E5"> of course you should always</font>

289
00:10:16,310 --> 00:10:18,590
<font color="#E5E5E5">verify that on your own computer though</font>

290
00:10:18,590 --> 00:10:21,590
<font color="#E5E5E5">now to take a look</font><font color="#CCCCCC"> at bouillon bouillon</font>

291
00:10:21,590 --> 00:10:25,040
can either have a value<font color="#CCCCCC"> of true</font><font color="#E5E5E5"> or false</font>

292
00:10:25,040 --> 00:10:27,830
<font color="#CCCCCC">that is it</font><font color="#E5E5E5"> let's go into a real simple</font>

293
00:10:27,830 --> 00:10:31,690
example<font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> going to say if true and</font>

294
00:10:31,690 --> 00:10:34,730
what you can do here is<font color="#E5E5E5"> you can use the</font>

295
00:10:34,730 --> 00:10:38,540
phrase or keyword<font color="#E5E5E5"> is to see if a</font>

296
00:10:38,540 --> 00:10:41,960
variable<font color="#E5E5E5"> is a integer or</font><font color="#CCCCCC"> a double or a</font>

297
00:10:41,960 --> 00:10:44,270
float or a boolean<font color="#E5E5E5"> and that's what I'm</font>

298
00:10:44,270 --> 00:10:47,120
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> right here</font><font color="#E5E5E5"> so I'm saying is true a</font>

299
00:10:47,120 --> 00:10:50,000
boolean yes I can do<font color="#E5E5E5"> that and then I can</font>

300
00:10:50,000 --> 00:10:51,470
<font color="#CCCCCC">command you</font><font color="#E5E5E5"> can also come in here</font><font color="#CCCCCC"> and</font>

301
00:10:51,470 --> 00:10:54,430
put print like<font color="#CCCCCC"> this and go true</font><font color="#E5E5E5"> is</font>

302
00:10:54,430 --> 00:10:57,500
boolean<font color="#E5E5E5"> and then what this is going to</font>

303
00:10:57,500 --> 00:10:59,060
do is print<font color="#E5E5E5"> out the screen but not add a</font>

304
00:10:59,060 --> 00:11:01,190
new line<font color="#E5E5E5"> but you can go in here</font><font color="#CCCCCC"> and put</font>

305
00:11:01,190 --> 00:11:03,190
a new line in there for<font color="#CCCCCC"> yourself and do</font>

306
00:11:03,190 --> 00:11:05,080
that and it's going<font color="#CCCCCC"> to come back</font><font color="#E5E5E5"> as true</font>

307
00:11:05,080 --> 00:11:07,000
true is<font color="#E5E5E5"> bullying</font><font color="#CCCCCC"> all right good stuff</font>

308
00:11:07,000 --> 00:11:10,510
<font color="#CCCCCC">and let's do</font><font color="#E5E5E5"> one more example here with</font>

309
00:11:10,510 --> 00:11:12,850
variables before<font color="#E5E5E5"> I get into casting</font><font color="#CCCCCC"> a</font>

310
00:11:12,850 --> 00:11:15,010
couple other a lot of other things<font color="#CCCCCC"> let's</font>

311
00:11:15,010 --> 00:11:16,810
go and<font color="#CCCCCC"> create a character how we do that</font>

312
00:11:16,810 --> 00:11:19,990
is let's<font color="#E5E5E5"> say something like letter grade</font>

313
00:11:19,990 --> 00:11:23,920
<font color="#E5E5E5">and we go character like this is equal</font>

314
00:11:23,920 --> 00:11:25,450
<font color="#E5E5E5">to a character is going to be surrounded</font>

315
00:11:25,450 --> 00:11:27,310
<font color="#E5E5E5">with single digits and there you go</font>

316
00:11:27,310 --> 00:11:30,040
there is a character and I could come<font color="#E5E5E5"> in</font>

317
00:11:30,040 --> 00:11:32,380
<font color="#E5E5E5">here</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> to verify</font><font color="#CCCCCC"> that this indeed is</font>

318
00:11:32,380 --> 00:11:36,210
a character by saying a is a and

319
00:11:36,210 --> 00:11:37,840
character whoops

320
00:11:37,840 --> 00:11:40,000
<font color="#E5E5E5">spell character right there we are</font><font color="#CCCCCC"> and</font>

321
00:11:40,000 --> 00:11:43,110
we can come in and<font color="#CCCCCC"> go a plus</font><font color="#E5E5E5"> and</font>

322
00:11:43,110 --> 00:11:45,880
<font color="#E5E5E5">actually you do something else I can go</font>

323
00:11:45,880 --> 00:11:47,710
and<font color="#E5E5E5"> put form this without using</font><font color="#CCCCCC"> that</font>

324
00:11:47,710 --> 00:11:49,780
plus sign I can go a dollar sign<font color="#E5E5E5"> and put</font>

325
00:11:49,780 --> 00:11:51,610
two curly brackets in there<font color="#E5E5E5"> and then I</font>

326
00:11:51,610 --> 00:11:55,660
can go letter grade is a character and

327
00:11:55,660 --> 00:11:58,540
<font color="#E5E5E5">that is all</font><font color="#CCCCCC"> legit and</font><font color="#E5E5E5"> we can run it and</font>

328
00:11:58,540 --> 00:12:00,340
<font color="#CCCCCC">you can see that</font><font color="#E5E5E5"> indeed it's going to</font>

329
00:12:00,340 --> 00:12:02,410
come<font color="#CCCCCC"> back a as a character and true is</font>

330
00:12:02,410 --> 00:12:05,080
indeed true so<font color="#E5E5E5"> that is how another way</font>

331
00:12:05,080 --> 00:12:07,150
we can<font color="#E5E5E5"> use string interpolation and I</font>

332
00:12:07,150 --> 00:12:09,250
want to show you<font color="#E5E5E5"> briefly</font><font color="#CCCCCC"> how casting</font>

333
00:12:09,250 --> 00:12:11,710
works now if you want to cast<font color="#E5E5E5"> from one</font>

334
00:12:11,710 --> 00:12:13,420
value<font color="#E5E5E5"> in another let's go</font><font color="#CCCCCC"> and just get</font>

335
00:12:13,420 --> 00:12:15,550
rid of<font color="#E5E5E5"> that all</font><font color="#CCCCCC"> together right there</font><font color="#E5E5E5"> you</font>

336
00:12:15,550 --> 00:12:17,950
can it's quite easy<font color="#CCCCCC"> so let's paste this</font>

337
00:12:17,950 --> 00:12:19,540
in here<font color="#CCCCCC"> and</font><font color="#E5E5E5"> let's just change what this</font>

338
00:12:19,540 --> 00:12:23,860
is<font color="#E5E5E5"> so let's say we wanted to go 3.14 two</font>

339
00:12:23,860 --> 00:12:27,040
and integer<font color="#E5E5E5"> so we can cast from a double</font>

340
00:12:27,040 --> 00:12:29,380
to an integer<font color="#E5E5E5"> well I could then come in</font>

341
00:12:29,380 --> 00:12:32,530
and<font color="#E5E5E5"> go 3.14</font><font color="#CCCCCC"> if you want to cast a double</font>

342
00:12:32,530 --> 00:12:34,420
or a float to<font color="#CCCCCC"> an integer</font>

343
00:12:34,420 --> 00:12:37,480
you just put a dot and<font color="#CCCCCC"> two int followed</font>

344
00:12:37,480 --> 00:12:40,150
<font color="#E5E5E5">by</font><font color="#CCCCCC"> parentheses</font><font color="#E5E5E5"> and it is automatically</font>

345
00:12:40,150 --> 00:12:41,680
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this where it looks</font><font color="#CCCCCC"> forgot</font>

346
00:12:41,680 --> 00:12:43,090
to put the plus sign<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so</font>

347
00:12:43,090 --> 00:12:44,800
there's that that's how we can<font color="#E5E5E5"> convert</font>

348
00:12:44,800 --> 00:12:48,100
from<font color="#E5E5E5"> a double to an integer and let's go</font>

349
00:12:48,100 --> 00:12:51,100
and convert from a letter grade<font color="#E5E5E5"> just</font><font color="#CCCCCC"> to</font>

350
00:12:51,100 --> 00:12:52,960
<font color="#E5E5E5">so something weird it works with any of</font>

351
00:12:52,960 --> 00:12:54,370
them so just<font color="#CCCCCC"> go</font><font color="#E5E5E5"> in there and play</font><font color="#CCCCCC"> around</font>

352
00:12:54,370 --> 00:12:56,620
on<font color="#E5E5E5"> your own and you'll see so let's</font>

353
00:12:56,620 --> 00:13:00,130
convert<font color="#E5E5E5"> an</font><font color="#CCCCCC"> A into an integer see how</font>

354
00:13:00,130 --> 00:13:01,240
<font color="#E5E5E5">that works out</font>

355
00:13:01,240 --> 00:13:04,750
so I'm going to go letter grade<font color="#CCCCCC"> that</font>

356
00:13:04,750 --> 00:13:06,910
I've deleted<font color="#E5E5E5"> the letter grade yeah so</font>

357
00:13:06,910 --> 00:13:08,470
let's just<font color="#E5E5E5"> get rid of it and we'll just</font>

358
00:13:08,470 --> 00:13:11,620
<font color="#CCCCCC">go I can put put it directly inside</font><font color="#E5E5E5"> here</font>

359
00:13:11,620 --> 00:13:14,050
<font color="#E5E5E5">surrounded</font><font color="#CCCCCC"> with single quotes</font><font color="#E5E5E5"> and then</font>

360
00:13:14,050 --> 00:13:16,750
go to ends<font color="#E5E5E5"> Kotlin doesn't care</font>

361
00:13:16,750 --> 00:13:19,620
<font color="#E5E5E5">all that's cool</font><font color="#CCCCCC"> and then we command and</font>

362
00:13:19,620 --> 00:13:23,230
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> going to do</font><font color="#CCCCCC"> it the next</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> oh well</font>

363
00:13:23,230 --> 00:13:25,660
we can get<font color="#E5E5E5"> that value</font><font color="#CCCCCC"> right there we'll</font>

364
00:13:25,660 --> 00:13:29,680
say 65<font color="#CCCCCC"> to character and see what that</font>

365
00:13:29,680 --> 00:13:32,380
works<font color="#E5E5E5"> out</font><font color="#CCCCCC"> to be so we'll put 65 inside</font>

366
00:13:32,380 --> 00:13:34,960
<font color="#E5E5E5">out of there</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we'll say</font><font color="#CCCCCC"> to character</font>

367
00:13:34,960 --> 00:13:37,510
<font color="#E5E5E5">like that and we can</font><font color="#CCCCCC"> run all</font><font color="#E5E5E5"> those guys</font>

368
00:13:37,510 --> 00:13:40,240
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see that all of</font><font color="#CCCCCC"> those work</font>

369
00:13:40,240 --> 00:13:43,210
and<font color="#E5E5E5"> that's how casting works inside of</font>

370
00:13:43,210 --> 00:13:45,850
<font color="#E5E5E5">caught</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and now I'm going to jump</font>

371
00:13:45,850 --> 00:13:47,440
<font color="#CCCCCC">over and</font><font color="#E5E5E5"> show you a whole bunch</font><font color="#CCCCCC"> of</font>

372
00:13:47,440 --> 00:13:48,750
<font color="#CCCCCC">different things</font><font color="#E5E5E5"> we can do with strings</font>

373
00:13:48,750 --> 00:13:50,050
<font color="#CCCCCC">alright</font>

374
00:13:50,050 --> 00:13:52,150
so strings are just<font color="#CCCCCC"> double quoted series</font>

375
00:13:52,150 --> 00:13:54,970
of characters<font color="#E5E5E5"> and of course we put</font><font color="#CCCCCC"> Val</font>

376
00:13:54,970 --> 00:13:56,410
inside of there what<font color="#E5E5E5"> does that mean that</font>

377
00:13:56,410 --> 00:13:58,480
<font color="#CCCCCC">means</font><font color="#E5E5E5"> that's a value that is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> going</font>

378
00:13:58,480 --> 00:14:02,560
<font color="#E5E5E5">to</font><font color="#CCCCCC"> change and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can go and put my name</font>

379
00:14:02,560 --> 00:14:04,420
inside of there I can remember how to

380
00:14:04,420 --> 00:14:06,430
<font color="#E5E5E5">spell it there we are</font><font color="#CCCCCC"> so there we are we</font>

381
00:14:06,430 --> 00:14:09,430
<font color="#CCCCCC">just created a string</font><font color="#E5E5E5"> and let's go and</font>

382
00:14:09,430 --> 00:14:11,980
<font color="#E5E5E5">create a long string so we'll go long</font>

383
00:14:11,980 --> 00:14:14,890
string you can<font color="#E5E5E5"> also come in here</font><font color="#CCCCCC"> and put</font>

384
00:14:14,890 --> 00:14:16,720
double<font color="#E5E5E5"> quotes again we're going to put</font>

385
00:14:16,720 --> 00:14:19,150
three<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to allow</font>

386
00:14:19,150 --> 00:14:21,670
me<font color="#CCCCCC"> to</font><font color="#E5E5E5"> let's put something different</font>

387
00:14:21,670 --> 00:14:25,630
<font color="#E5E5E5">inside out this is a come down here and</font>

388
00:14:25,630 --> 00:14:28,240
then<font color="#E5E5E5"> I</font><font color="#CCCCCC"> can go long string and then it</font>

389
00:14:28,240 --> 00:14:30,160
<font color="#CCCCCC">won't edit</font><font color="#E5E5E5"> that at all it allows me to</font>

390
00:14:30,160 --> 00:14:32,020
<font color="#E5E5E5">do multi-line strings or whatever you'd</font>

391
00:14:32,020 --> 00:14:34,540
like<font color="#E5E5E5"> let's go and create a couple</font><font color="#CCCCCC"> more</font>

392
00:14:34,540 --> 00:14:37,930
here<font color="#E5E5E5"> first name is equal to and I could</font>

393
00:14:37,930 --> 00:14:39,400
also come in here<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> and go</font>

394
00:14:39,400 --> 00:14:41,740
string and define if I didn't want it<font color="#CCCCCC"> to</font>

395
00:14:41,740 --> 00:14:44,200
go in there and infer what I'm doing

396
00:14:44,200 --> 00:14:46,900
<font color="#E5E5E5">either way it works out so it'll go Doug</font>

397
00:14:46,900 --> 00:14:50,200
<font color="#CCCCCC">and let's just copy this guy right there</font>

398
00:14:50,200 --> 00:14:53,560
and come down<font color="#CCCCCC"> here</font><font color="#E5E5E5"> and let's go L name</font>

399
00:14:53,560 --> 00:14:56,530
<font color="#CCCCCC">and this will be Doug Smith of</font><font color="#E5E5E5"> course</font>

400
00:14:56,530 --> 00:14:57,910
we're going to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to come in</font><font color="#E5E5E5"> here</font>

401
00:14:57,910 --> 00:15:00,640
and join these together<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> you can</font>

402
00:15:00,640 --> 00:15:02,170
also change the<font color="#CCCCCC"> value remember bow you</font>

403
00:15:02,170 --> 00:15:04,330
don't change<font color="#E5E5E5"> var are you</font><font color="#CCCCCC"> can let's</font>

404
00:15:04,330 --> 00:15:07,180
change it so I can<font color="#E5E5E5"> just come in and go F</font>

405
00:15:07,180 --> 00:15:10,240
name is equal to Sally

406
00:15:10,240 --> 00:15:12,070
<font color="#CCCCCC">alright so we were able</font><font color="#E5E5E5"> to change that</font>

407
00:15:12,070 --> 00:15:14,320
<font color="#CCCCCC">value</font><font color="#E5E5E5"> and let's say we wanted to go in</font>

408
00:15:14,320 --> 00:15:16,330
and<font color="#E5E5E5"> join these strings together of</font>

409
00:15:16,330 --> 00:15:18,820
course<font color="#E5E5E5"> we could do that we can just</font><font color="#CCCCCC"> go F</font>

410
00:15:18,820 --> 00:15:23,160
name<font color="#E5E5E5"> plus</font><font color="#CCCCCC"> angle a so like that's and L</font>

411
00:15:23,160 --> 00:15:27,100
name<font color="#CCCCCC"> and there we</font><font color="#E5E5E5"> go that's how we go</font>

412
00:15:27,100 --> 00:15:29,050
and join<font color="#CCCCCC"> our values together</font><font color="#E5E5E5"> whoops</font>

413
00:15:29,050 --> 00:15:29,630
change

414
00:15:29,630 --> 00:15:31,699
<font color="#CCCCCC">- an</font><font color="#E5E5E5"> uppercase there we are</font><font color="#CCCCCC"> alright so</font>

415
00:15:31,699 --> 00:15:33,709
that's<font color="#E5E5E5"> how we can join strings like I</font>

416
00:15:33,709 --> 00:15:35,420
said before<font color="#E5E5E5"> we're going to be</font><font color="#CCCCCC"> able to</font>

417
00:15:35,420 --> 00:15:38,389
use string interpolation<font color="#E5E5E5"> or just putting</font>

418
00:15:38,389 --> 00:15:40,579
<font color="#E5E5E5">a variable value</font><font color="#CCCCCC"> directly inside</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> a</font>

419
00:15:40,579 --> 00:15:42,889
string that we plan on printing out so

420
00:15:42,889 --> 00:15:45,230
we can go name like that<font color="#CCCCCC"> and we can go</font>

421
00:15:45,230 --> 00:15:48,199
full name like that<font color="#CCCCCC"> and that's going</font><font color="#E5E5E5"> to</font>

422
00:15:48,199 --> 00:15:50,569
print<font color="#CCCCCC"> that guy out it's going to do a</font>

423
00:15:50,569 --> 00:15:52,459
whole<font color="#CCCCCC"> bunch more</font><font color="#E5E5E5"> of these guys you're</font>

424
00:15:52,459 --> 00:15:54,620
going<font color="#E5E5E5"> to like I said</font><font color="#CCCCCC"> before you're going</font>

425
00:15:54,620 --> 00:15:57,050
to<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to print</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> I never know</font>

426
00:15:57,050 --> 00:15:58,940
when you<font color="#E5E5E5"> guys are using time stamps and</font>

427
00:15:58,940 --> 00:16:00,769
<font color="#CCCCCC">jump around and</font><font color="#E5E5E5"> doing whatever so I'm</font>

428
00:16:00,769 --> 00:16:02,959
going to<font color="#E5E5E5"> cover this</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> it also</font><font color="#CCCCCC"> to</font>

429
00:16:02,959 --> 00:16:04,370
come in here<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this with a dollar</font>

430
00:16:04,370 --> 00:16:06,769
sign<font color="#CCCCCC"> and curly brackets and perform</font>

431
00:16:06,769 --> 00:16:09,350
arithmetic operations directly<font color="#E5E5E5"> inside of</font>

432
00:16:09,350 --> 00:16:10,940
your string you want<font color="#CCCCCC"> to print out</font><font color="#E5E5E5"> and</font>

433
00:16:10,940 --> 00:16:12,440
<font color="#CCCCCC">that all works good</font><font color="#E5E5E5"> you're going to be</font>

434
00:16:12,440 --> 00:16:15,319
able<font color="#E5E5E5"> to get your string length let's go</font>

435
00:16:15,319 --> 00:16:17,360
<font color="#E5E5E5">and just copy this guy right here</font><font color="#CCCCCC"> paste</font>

436
00:16:17,360 --> 00:16:20,810
<font color="#E5E5E5">that inside of</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and I will have all</font>

437
00:16:20,810 --> 00:16:21,680
this stuff<font color="#E5E5E5"> whoops</font>

438
00:16:21,680 --> 00:16:23,420
keep this like this<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'm gonna go</font>

439
00:16:23,420 --> 00:16:27,079
string<font color="#CCCCCC"> length and then if I want to get</font>

440
00:16:27,079 --> 00:16:29,449
to<font color="#E5E5E5"> that said string length</font><font color="#CCCCCC"> I know let's</font>

441
00:16:29,449 --> 00:16:31,670
do it for the long string<font color="#CCCCCC"> I</font><font color="#E5E5E5"> could do so</font>

442
00:16:31,670 --> 00:16:34,100
like<font color="#E5E5E5"> this and then follow it up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

443
00:16:34,100 --> 00:16:37,220
word length<font color="#E5E5E5"> what else can we do</font><font color="#CCCCCC"> I can</font>

444
00:16:37,220 --> 00:16:40,160
compare strings so I could create<font color="#CCCCCC"> two</font>

445
00:16:40,160 --> 00:16:42,110
<font color="#E5E5E5">brand-new strings here if I would like</font>

446
00:16:42,110 --> 00:16:45,079
or I<font color="#CCCCCC"> could just compared ugh and</font><font color="#E5E5E5"> Wow</font>

447
00:16:45,079 --> 00:16:46,220
let's do something<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little different</font>

448
00:16:46,220 --> 00:16:48,500
<font color="#E5E5E5">there we go</font><font color="#CCCCCC"> so I have two strings</font><font color="#E5E5E5"> if I'm</font>

449
00:16:48,500 --> 00:16:50,120
<font color="#E5E5E5">never moving too quick</font><font color="#CCCCCC"> just hit the</font>

450
00:16:50,120 --> 00:16:51,649
pause<font color="#CCCCCC"> button I like to make</font><font color="#E5E5E5"> videos</font><font color="#CCCCCC"> in</font>

451
00:16:51,649 --> 00:16:53,540
<font color="#E5E5E5">which we use the pause button</font><font color="#CCCCCC"> alright so</font>

452
00:16:53,540 --> 00:16:54,949
the<font color="#E5E5E5"> only difference</font><font color="#CCCCCC"> between string</font><font color="#E5E5E5"> one</font>

453
00:16:54,949 --> 00:16:57,380
and string two is an<font color="#CCCCCC"> uppercase a so</font>

454
00:16:57,380 --> 00:16:59,540
let's compare these<font color="#E5E5E5"> to see how they work</font>

455
00:16:59,540 --> 00:17:04,369
out<font color="#E5E5E5"> so</font><font color="#CCCCCC"> pitch that in there and we're</font>

456
00:17:04,369 --> 00:17:05,599
<font color="#E5E5E5">going to change this up a little bit</font>

457
00:17:05,599 --> 00:17:08,750
let's say<font color="#E5E5E5"> we want to go strings equal</font>

458
00:17:08,750 --> 00:17:11,209
and see if<font color="#E5E5E5"> those strings are</font><font color="#CCCCCC"> equal or</font>

459
00:17:11,209 --> 00:17:14,390
<font color="#E5E5E5">not how we can do a comparison between</font>

460
00:17:14,390 --> 00:17:18,579
these two guys is we can go string<font color="#CCCCCC"> 1 +</font>

461
00:17:18,579 --> 00:17:23,059
equals<font color="#E5E5E5"> and throw string</font><font color="#CCCCCC"> 2 inside of</font>

462
00:17:23,059 --> 00:17:25,459
there and that's<font color="#E5E5E5"> one way to set that</font><font color="#CCCCCC"> off</font>

463
00:17:25,459 --> 00:17:28,400
<font color="#CCCCCC">also going</font><font color="#E5E5E5"> to be able to compare another</font>

464
00:17:28,400 --> 00:17:29,840
<font color="#E5E5E5">one let's go and do a different</font><font color="#CCCCCC"> thing</font>

465
00:17:29,840 --> 00:17:31,460
here<font color="#CCCCCC"> and this is going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be a</font>

466
00:17:31,460 --> 00:17:33,710
<font color="#E5E5E5">comparison</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is going to instead</font><font color="#CCCCCC"> of</font>

467
00:17:33,710 --> 00:17:35,419
giving us true or false it's actually

468
00:17:35,419 --> 00:17:38,480
going<font color="#E5E5E5"> to give us a</font><font color="#CCCCCC"> 0 in the situation</font>

469
00:17:38,480 --> 00:17:40,820
which the string is equal<font color="#E5E5E5"> if it is</font>

470
00:17:40,820 --> 00:17:42,500
negative<font color="#CCCCCC"> it's going to be a value that's</font>

471
00:17:42,500 --> 00:17:43,070
less

472
00:17:43,070 --> 00:17:45,350
than<font color="#E5E5E5"> zero if it's a positive it's going</font>

473
00:17:45,350 --> 00:17:46,430
to be greater than zero

474
00:17:46,430 --> 00:17:49,010
<font color="#E5E5E5">so what we can do here is let's do a</font>

475
00:17:49,010 --> 00:17:52,580
slight compare<font color="#E5E5E5"> let's go to compare a to</font>

476
00:17:52,580 --> 00:17:56,090
<font color="#CCCCCC">B and we can come in and like this</font><font color="#E5E5E5"> and</font>

477
00:17:56,090 --> 00:17:59,510
we<font color="#E5E5E5"> can just come in throw the a inside</font>

478
00:17:59,510 --> 00:18:01,460
<font color="#CCCCCC">of there like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> and we'll use</font>

479
00:18:01,460 --> 00:18:05,240
compared to<font color="#E5E5E5"> here instead of equals so</font>

480
00:18:05,240 --> 00:18:07,700
<font color="#CCCCCC">compared</font><font color="#E5E5E5"> to and we'll throw B inside</font>

481
00:18:07,700 --> 00:18:09,530
here just<font color="#E5E5E5"> to see how that works out for</font>

482
00:18:09,530 --> 00:18:11,840
<font color="#E5E5E5">us</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see we can</font><font color="#CCCCCC"> put our double</font>

483
00:18:11,840 --> 00:18:14,030
quotes inside of here without having<font color="#E5E5E5"> to</font>

484
00:18:14,030 --> 00:18:15,710
<font color="#CCCCCC">back</font><font color="#E5E5E5"> slash them or</font><font color="#CCCCCC"> anything and</font>

485
00:18:15,710 --> 00:18:17,480
everything works out perfectly<font color="#E5E5E5"> fine and</font>

486
00:18:17,480 --> 00:18:18,980
let's run that<font color="#E5E5E5"> just</font><font color="#CCCCCC"> to see what all of</font>

487
00:18:18,980 --> 00:18:20,960
<font color="#CCCCCC">that</font><font color="#E5E5E5"> stuff is and you can see right here</font>

488
00:18:20,960 --> 00:18:23,480
comparison<font color="#E5E5E5"> A to B is negative one right</font>

489
00:18:23,480 --> 00:18:25,130
here you can see<font color="#CCCCCC"> even though the only</font>

490
00:18:25,130 --> 00:18:26,840
<font color="#E5E5E5">difference is capital a that comes back</font>

491
00:18:26,840 --> 00:18:29,000
as false<font color="#E5E5E5"> string length and you can</font><font color="#CCCCCC"> see</font>

492
00:18:29,000 --> 00:18:30,770
how I added<font color="#E5E5E5"> all that stuff together</font><font color="#CCCCCC"> and</font>

493
00:18:30,770 --> 00:18:33,050
all of<font color="#CCCCCC"> that other stuff so pretty neat</font>

494
00:18:33,050 --> 00:18:35,390
stuff<font color="#E5E5E5"> let's go in and do a couple more</font>

495
00:18:35,390 --> 00:18:38,300
<font color="#CCCCCC">of these</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> rid of that let's say</font>

496
00:18:38,300 --> 00:18:40,670
<font color="#CCCCCC">I</font><font color="#E5E5E5"> would like to get a character at a</font>

497
00:18:40,670 --> 00:18:44,030
<font color="#CCCCCC">specific index I could do that as well</font>

498
00:18:44,030 --> 00:18:47,440
<font color="#E5E5E5">so let's say I want to get the seconds</font>

499
00:18:47,440 --> 00:18:51,410
<font color="#CCCCCC">index and I want to do that for string</font>

500
00:18:51,410 --> 00:18:53,960
<font color="#CCCCCC">one</font><font color="#E5E5E5"> just leave string</font><font color="#CCCCCC"> 1 be right there</font>

501
00:18:53,960 --> 00:18:56,330
<font color="#E5E5E5">and let's just change this</font><font color="#CCCCCC"> to get and</font>

502
00:18:56,330 --> 00:18:58,430
then we'll come<font color="#E5E5E5"> in here</font><font color="#CCCCCC"> and we'll</font><font color="#E5E5E5"> change</font>

503
00:18:58,430 --> 00:19:00,170
<font color="#E5E5E5">that</font><font color="#CCCCCC"> to two</font><font color="#E5E5E5"> that's going</font><font color="#CCCCCC"> to get whatever</font>

504
00:19:00,170 --> 00:19:02,750
value is assigned to<font color="#E5E5E5"> the second index</font>

505
00:19:02,750 --> 00:19:04,610
and this<font color="#CCCCCC"> is giving me a little squiggle</font>

506
00:19:04,610 --> 00:19:06,380
saying that I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have to do</font><font color="#CCCCCC"> it this</font>

507
00:19:06,380 --> 00:19:08,240
way<font color="#E5E5E5"> I could also come in here and do it</font>

508
00:19:08,240 --> 00:19:10,040
<font color="#E5E5E5">this way and</font><font color="#CCCCCC"> you could</font><font color="#E5E5E5"> do it</font><font color="#CCCCCC"> either way</font>

509
00:19:10,040 --> 00:19:11,750
you wanted<font color="#E5E5E5"> to do it it's completely</font><font color="#CCCCCC"> up</font>

510
00:19:11,750 --> 00:19:13,610
to you<font color="#CCCCCC"> I can also come in</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> get a</font>

511
00:19:13,610 --> 00:19:16,130
substring by providing where I want to

512
00:19:16,130 --> 00:19:19,820
start and ending where I want to<font color="#E5E5E5"> end up</font>

513
00:19:19,820 --> 00:19:22,130
<font color="#E5E5E5">to so</font><font color="#CCCCCC"> it's come</font><font color="#E5E5E5"> here I'll show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> an</font>

514
00:19:22,130 --> 00:19:24,650
<font color="#E5E5E5">example</font><font color="#CCCCCC"> so we'll come in here and</font><font color="#E5E5E5"> let's</font>

515
00:19:24,650 --> 00:19:27,680
say I want<font color="#CCCCCC"> to go and</font><font color="#E5E5E5"> get index 2 through</font>

516
00:19:27,680 --> 00:19:30,620
<font color="#E5E5E5">7</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> would I do that</font><font color="#CCCCCC"> well let's do</font><font color="#E5E5E5"> this</font>

517
00:19:30,620 --> 00:19:33,170
with string<font color="#CCCCCC"> 1 once again let's go get</font>

518
00:19:33,170 --> 00:19:35,470
<font color="#E5E5E5">rid of all this</font><font color="#CCCCCC"> and let me</font><font color="#E5E5E5"> go sub</font>

519
00:19:35,470 --> 00:19:39,470
sequence<font color="#E5E5E5"> and if I want to get from index</font>

520
00:19:39,470 --> 00:19:43,040
2 to 7 what I have to do is put<font color="#CCCCCC"> 2 to 8</font>

521
00:19:43,040 --> 00:19:45,350
<font color="#CCCCCC">okay it</font><font color="#E5E5E5"> goes up to index 8 but it</font>

522
00:19:45,350 --> 00:19:47,000
doesn't<font color="#E5E5E5"> include it with the results and</font>

523
00:19:47,000 --> 00:19:49,640
then<font color="#E5E5E5"> let's as a final little</font><font color="#CCCCCC"> foot way of</font>

524
00:19:49,640 --> 00:19:51,200
working<font color="#E5E5E5"> with strings let's say I want to</font>

525
00:19:51,200 --> 00:19:53,630
check to<font color="#CCCCCC"> see if a string contains</font>

526
00:19:53,630 --> 00:19:55,370
another string<font color="#CCCCCC"> and of course I can do</font>

527
00:19:55,370 --> 00:19:55,850
<font color="#E5E5E5">that</font>

528
00:19:55,850 --> 00:19:56,300
annals

529
00:19:56,300 --> 00:19:58,190
say<font color="#E5E5E5"> I want to check</font><font color="#CCCCCC"> to see if it has</font><font color="#E5E5E5"> the</font>

530
00:19:58,190 --> 00:20:00,500
value<font color="#E5E5E5"> of random somewhere inside</font><font color="#CCCCCC"> of it</font>

531
00:20:00,500 --> 00:20:02,440
so I<font color="#E5E5E5"> can say something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> contains</font>

532
00:20:02,440 --> 00:20:05,300
random<font color="#E5E5E5"> and to check that I can get</font>

533
00:20:05,300 --> 00:20:10,100
<font color="#E5E5E5">string</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and contains and</font><font color="#CCCCCC"> then inside of</font>

534
00:20:10,100 --> 00:20:12,350
this guy I can put in whatever I want to

535
00:20:12,350 --> 00:20:14,900
search for<font color="#E5E5E5"> so random</font><font color="#CCCCCC"> yeah that's right</font>

536
00:20:14,900 --> 00:20:16,700
and you can see over<font color="#CCCCCC"> here on the right</font>

537
00:20:16,700 --> 00:20:20,330
side index 1 through 7 gets me random so

538
00:20:20,330 --> 00:20:24,080
we<font color="#CCCCCC"> go 0 1 2 say</font><font color="#E5E5E5"> and that's how it gets</font>

539
00:20:24,080 --> 00:20:25,760
random contains random comes back is

540
00:20:25,760 --> 00:20:28,400
true what<font color="#E5E5E5"> is the second index is our why</font>

541
00:20:28,400 --> 00:20:30,110
is that<font color="#E5E5E5"> well that's because it's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> zero</font>

542
00:20:30,110 --> 00:20:32,060
index this is<font color="#E5E5E5"> one index and whoops and</font>

543
00:20:32,060 --> 00:20:33,860
that's the second index so now it isn't

544
00:20:33,860 --> 00:20:36,590
<font color="#E5E5E5">but now it is</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so good</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so</font>

545
00:20:36,590 --> 00:20:37,970
there's a rough overview<font color="#E5E5E5"> of course there</font>

546
00:20:37,970 --> 00:20:39,740
are<font color="#E5E5E5"> other</font><font color="#CCCCCC"> functions available</font><font color="#E5E5E5"> with</font>

547
00:20:39,740 --> 00:20:41,420
manipulating<font color="#E5E5E5"> with strings inside of</font>

548
00:20:41,420 --> 00:20:43,100
Kotlin but those are<font color="#E5E5E5"> the main guys and</font>

549
00:20:43,100 --> 00:20:45,530
now I want to<font color="#E5E5E5"> talk about arrays okay so</font>

550
00:20:45,530 --> 00:20:47,840
<font color="#CCCCCC">Rays are going to be able to</font><font color="#E5E5E5"> store</font>

551
00:20:47,840 --> 00:20:49,580
multiple<font color="#CCCCCC"> values of multiple different</font>

552
00:20:49,580 --> 00:20:52,520
<font color="#E5E5E5">types and how we create one is go</font><font color="#CCCCCC"> VAR</font>

553
00:20:52,520 --> 00:20:55,850
and we can go<font color="#E5E5E5"> let's call this my array</font>

554
00:20:55,850 --> 00:20:58,700
is equal to and how<font color="#E5E5E5"> we create an array</font>

555
00:20:58,700 --> 00:21:01,760
as you go array of let's say I want to

556
00:21:01,760 --> 00:21:06,170
<font color="#E5E5E5">go one and one point two three</font><font color="#CCCCCC"> and Doug</font>

557
00:21:06,170 --> 00:21:08,420
okay<font color="#CCCCCC"> so you can see we can put multiple</font>

558
00:21:08,420 --> 00:21:10,850
<font color="#E5E5E5">different</font><font color="#CCCCCC"> data types inside of here</font>

559
00:21:10,850 --> 00:21:13,190
<font color="#E5E5E5">you're going to be able</font><font color="#CCCCCC"> to access these</font>

560
00:21:13,190 --> 00:21:16,040
guys<font color="#CCCCCC"> just</font><font color="#E5E5E5"> like you did anything else by</font>

561
00:21:16,040 --> 00:21:19,400
going my array like this<font color="#E5E5E5"> and let's say</font>

562
00:21:19,400 --> 00:21:20,540
you<font color="#E5E5E5"> want to get whatever is in the</font>

563
00:21:20,540 --> 00:21:22,520
second index that's how you do that<font color="#CCCCCC"> you</font>

564
00:21:22,520 --> 00:21:24,950
can<font color="#E5E5E5"> also change the</font><font color="#CCCCCC"> value in a very</font>

565
00:21:24,950 --> 00:21:26,270
simple<font color="#CCCCCC"> way let's say I want to</font><font color="#E5E5E5"> change</font>

566
00:21:26,270 --> 00:21:28,820
<font color="#CCCCCC">whatever is in the first index just</font><font color="#E5E5E5"> do</font>

567
00:21:28,820 --> 00:21:31,730
it like that<font color="#E5E5E5"> and go equal to 3.14</font>

568
00:21:31,730 --> 00:21:33,710
whatever you want you can<font color="#CCCCCC"> find out</font>

569
00:21:33,710 --> 00:21:36,320
easily<font color="#E5E5E5"> how many elements are in your</font>

570
00:21:36,320 --> 00:21:38,149
array let's command

571
00:21:38,149 --> 00:21:42,169
and let's go something like array length

572
00:21:42,169 --> 00:21:45,289
<font color="#E5E5E5">and to get whatever that is you just go</font>

573
00:21:45,289 --> 00:21:48,889
my array and this time we're going<font color="#CCCCCC"> to</font>

574
00:21:48,889 --> 00:21:51,859
<font color="#CCCCCC">use size</font><font color="#E5E5E5"> and that'll give us a array</font>

575
00:21:51,859 --> 00:21:54,469
size and we can<font color="#E5E5E5"> check if an element is</font>

576
00:21:54,469 --> 00:21:57,109
inside of an array so let's say we want

577
00:21:57,109 --> 00:22:02,419
to verify<font color="#CCCCCC"> that</font><font color="#E5E5E5"> Doug is in</font><font color="#CCCCCC"> right the</font>

578
00:22:02,419 --> 00:22:04,639
array that<font color="#CCCCCC"> we have we</font><font color="#E5E5E5"> can do that just</font>

579
00:22:04,639 --> 00:22:08,749
go my array and then we're<font color="#E5E5E5"> going to go</font>

580
00:22:08,749 --> 00:22:11,749
contains<font color="#E5E5E5"> and we're specifically looking</font>

581
00:22:11,749 --> 00:22:14,359
<font color="#CCCCCC">for Doug and that's going to come</font><font color="#E5E5E5"> back</font>

582
00:22:14,359 --> 00:22:17,149
to or false<font color="#CCCCCC"> if that's in there</font><font color="#E5E5E5"> we're</font>

583
00:22:17,149 --> 00:22:19,399
also going to be able<font color="#E5E5E5"> to get a number of</font>

584
00:22:19,399 --> 00:22:21,469
elements<font color="#CCCCCC"> in an array</font><font color="#E5E5E5"> and have it</font>

585
00:22:21,469 --> 00:22:23,599
<font color="#CCCCCC">returned as an array</font><font color="#E5E5E5"> so we're going to</font>

586
00:22:23,599 --> 00:22:26,419
go bar like<font color="#CCCCCC"> this</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> say call</font>

587
00:22:26,419 --> 00:22:28,369
<font color="#E5E5E5">this part array because it's part of</font>

588
00:22:28,369 --> 00:22:32,109
<font color="#CCCCCC">that array and</font><font color="#E5E5E5"> I can go my array and</font>

589
00:22:32,109 --> 00:22:37,789
follow that<font color="#E5E5E5"> up</font><font color="#CCCCCC"> with copy of range</font><font color="#E5E5E5"> and if</font>

590
00:22:37,789 --> 00:22:38,899
I want<font color="#E5E5E5"> to get the first two elements</font>

591
00:22:38,899 --> 00:22:40,759
<font color="#E5E5E5">inside of</font><font color="#CCCCCC"> the array then I'm pulling</font>

592
00:22:40,759 --> 00:22:43,459
<font color="#CCCCCC">information</font><font color="#E5E5E5"> from I go 0</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> and of</font>

593
00:22:43,459 --> 00:22:44,779
course you increment<font color="#CCCCCC"> that if you want</font>

594
00:22:44,779 --> 00:22:46,969
more<font color="#CCCCCC"> of it we</font><font color="#E5E5E5"> can then get the first</font>

595
00:22:46,969 --> 00:22:50,929
elements out of our array easily by just

596
00:22:50,929 --> 00:22:55,039
<font color="#E5E5E5">let's just change this first and we can</font>

597
00:22:55,039 --> 00:22:57,319
then<font color="#E5E5E5"> go string like that</font><font color="#CCCCCC"> and then type</font>

598
00:22:57,319 --> 00:22:58,879
in first<font color="#CCCCCC"> oops</font>

599
00:22:58,879 --> 00:23:01,129
first so<font color="#E5E5E5"> that's going to give us our</font>

600
00:23:01,129 --> 00:23:03,769
first<font color="#CCCCCC"> element and we can you could also</font>

601
00:23:03,769 --> 00:23:05,389
type in last if you<font color="#E5E5E5"> want to get the last</font>

602
00:23:05,389 --> 00:23:07,399
element<font color="#E5E5E5"> or whatever you'd like</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could</font>

603
00:23:07,399 --> 00:23:10,879
also get<font color="#CCCCCC"> the index of a value</font><font color="#E5E5E5"> so let's</font>

604
00:23:10,879 --> 00:23:13,579
say I wanted to find<font color="#CCCCCC"> out what is the</font>

605
00:23:13,579 --> 00:23:17,359
first index for Doug where that shows up

606
00:23:17,359 --> 00:23:19,849
string<font color="#CCCCCC"> 1 once</font><font color="#E5E5E5"> again and here I'm going</font>

607
00:23:19,849 --> 00:23:23,209
to go<font color="#E5E5E5"> index of and I'm gonna type in dog</font>

608
00:23:23,209 --> 00:23:25,519
and there's<font color="#E5E5E5"> Doug and let's run that</font><font color="#CCCCCC"> just</font>

609
00:23:25,519 --> 00:23:27,229
see what all this stuff does<font color="#E5E5E5"> whoops</font><font color="#CCCCCC"> I</font>

610
00:23:27,229 --> 00:23:29,269
messed that up whenever<font color="#E5E5E5"> I try to do that</font>

611
00:23:29,269 --> 00:23:30,379
<font color="#CCCCCC">whoops let's change it back</font>

612
00:23:30,379 --> 00:23:34,099
<font color="#E5E5E5">oh all</font><font color="#CCCCCC"> right now it looks okay</font><font color="#E5E5E5"> so let's</font>

613
00:23:34,099 --> 00:23:36,829
say that<font color="#CCCCCC"> and let's run it again oops</font><font color="#E5E5E5"> I</font>

614
00:23:36,829 --> 00:23:39,409
typed in string<font color="#E5E5E5"> 1 instead</font><font color="#CCCCCC"> of my array</font>

615
00:23:39,409 --> 00:23:41,929
gonna fix that<font color="#E5E5E5"> real quick</font><font color="#CCCCCC"> my array and</font>

616
00:23:41,929 --> 00:23:46,009
my<font color="#CCCCCC"> row</font><font color="#E5E5E5"> run it and there you</font><font color="#CCCCCC"> can see Doug</font>

617
00:23:46,009 --> 00:23:47,569
comes back where is that coming from

618
00:23:47,569 --> 00:23:49,519
<font color="#CCCCCC">that's coming</font><font color="#E5E5E5"> from right here where we</font>

619
00:23:49,519 --> 00:23:51,289
said we<font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> whatever is in the second</font>

620
00:23:51,289 --> 00:23:51,860
index

621
00:23:51,860 --> 00:23:53,750
<font color="#E5E5E5">array length you can see comes back as</font>

622
00:23:53,750 --> 00:23:57,559
<font color="#E5E5E5">three you can see the very first value</font>

623
00:23:57,559 --> 00:23:59,690
stored<font color="#E5E5E5"> in the array is one and you can</font>

624
00:23:59,690 --> 00:24:02,480
see<font color="#CCCCCC"> Doug index starts at the second</font>

625
00:24:02,480 --> 00:24:04,640
<font color="#E5E5E5">index inside of our rack</font><font color="#CCCCCC"> alright so a</font>

626
00:24:04,640 --> 00:24:06,230
whole bunch<font color="#CCCCCC"> of different things there</font>

627
00:24:06,230 --> 00:24:08,809
<font color="#E5E5E5">another thing</font><font color="#CCCCCC"> that's really cool and I'm</font>

628
00:24:08,809 --> 00:24:10,520
going<font color="#E5E5E5"> to show you how to do all kinds</font><font color="#CCCCCC"> of</font>

629
00:24:10,520 --> 00:24:12,200
things<font color="#E5E5E5"> with what are called collections</font>

630
00:24:12,200 --> 00:24:13,910
<font color="#E5E5E5">and array sort of be in one of</font><font color="#CCCCCC"> these</font>

631
00:24:13,910 --> 00:24:16,309
<font color="#E5E5E5">collections let's say I'd like to create</font>

632
00:24:16,309 --> 00:24:18,799
an array of squares<font color="#CCCCCC"> how</font><font color="#E5E5E5"> hard would that</font>

633
00:24:18,799 --> 00:24:21,350
<font color="#E5E5E5">be well I can go more let's call this</font>

634
00:24:21,350 --> 00:24:25,309
<font color="#E5E5E5">square array is equal to I can call</font>

635
00:24:25,309 --> 00:24:30,230
array and<font color="#CCCCCC"> five which is the total number</font>

636
00:24:30,230 --> 00:24:32,090
of indexes I want inside<font color="#E5E5E5"> of there</font><font color="#CCCCCC"> and</font>

637
00:24:32,090 --> 00:24:34,040
then what I<font color="#E5E5E5"> want to do is</font><font color="#CCCCCC"> I want to go</font>

638
00:24:34,040 --> 00:24:37,280
through one<font color="#CCCCCC"> through five and have the</font>

639
00:24:37,280 --> 00:24:38,780
values multiplied times each other

640
00:24:38,780 --> 00:24:39,770
<font color="#E5E5E5">sounds hard</font>

641
00:24:39,770 --> 00:24:41,809
<font color="#CCCCCC">not really I'm just going to type in</font><font color="#E5E5E5"> X</font>

642
00:24:41,809 --> 00:24:47,840
and<font color="#E5E5E5"> x times X so for each</font><font color="#CCCCCC"> of the index</font>

643
00:24:47,840 --> 00:24:49,850
<font color="#CCCCCC">value is what it's going to do is it's</font>

644
00:24:49,850 --> 00:24:52,040
<font color="#E5E5E5">going to multiply whatever the index is</font>

645
00:24:52,040 --> 00:24:54,320
<font color="#CCCCCC">times itself</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see here in a</font>

646
00:24:54,320 --> 00:24:55,940
second exactly what<font color="#E5E5E5"> that</font><font color="#CCCCCC"> looks like now</font>

647
00:24:55,940 --> 00:24:57,919
<font color="#E5E5E5">let's</font><font color="#CCCCCC"> just go</font><font color="#E5E5E5"> and print that print</font><font color="#CCCCCC"> line</font>

648
00:24:57,919 --> 00:25:03,440
<font color="#CCCCCC">like this</font><font color="#E5E5E5"> and we go square array and -</font>

649
00:25:03,440 --> 00:25:05,990
<font color="#E5E5E5">alright so and we'll run that and you</font>

650
00:25:05,990 --> 00:25:08,540
see it comes<font color="#CCCCCC"> back is for y well because</font>

651
00:25:08,540 --> 00:25:10,429
that second index is multiplied times

652
00:25:10,429 --> 00:25:12,320
itself so it's<font color="#CCCCCC"> the second one comes</font><font color="#E5E5E5"> in</font>

653
00:25:12,320 --> 00:25:14,630
here<font color="#E5E5E5"> two times two is equal to four</font><font color="#CCCCCC"> so</font>

654
00:25:14,630 --> 00:25:16,460
that<font color="#CCCCCC"> just created an array full of</font>

655
00:25:16,460 --> 00:25:17,809
squares<font color="#E5E5E5"> so you could throw anything in</font>

656
00:25:17,809 --> 00:25:19,790
there you<font color="#E5E5E5"> want I just used five but of</font>

657
00:25:19,790 --> 00:25:21,290
course you can do anything<font color="#CCCCCC"> and one thing</font>

658
00:25:21,290 --> 00:25:22,940
I forgot to<font color="#CCCCCC"> mention is of course there</font>

659
00:25:22,940 --> 00:25:25,910
are<font color="#CCCCCC"> type specific arrays</font><font color="#E5E5E5"> which means if</font>

660
00:25:25,910 --> 00:25:27,530
you<font color="#E5E5E5"> want to have an array</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can only</font>

661
00:25:27,530 --> 00:25:29,900
have one data type<font color="#E5E5E5"> of course you can so</font>

662
00:25:29,900 --> 00:25:32,330
<font color="#E5E5E5">you just go like this</font><font color="#CCCCCC"> and array like</font>

663
00:25:32,330 --> 00:25:34,880
this<font color="#E5E5E5"> and integer and then if somebody</font>

664
00:25:34,880 --> 00:25:37,040
<font color="#E5E5E5">tries to store something inside of this</font>

665
00:25:37,040 --> 00:25:39,440
array that is<font color="#E5E5E5"> not an integer it's going</font>

666
00:25:39,440 --> 00:25:41,630
to<font color="#E5E5E5"> throw</font><font color="#CCCCCC"> an error there so you go array</font>

667
00:25:41,630 --> 00:25:44,570
of and one two and<font color="#CCCCCC"> three and of course</font>

668
00:25:44,570 --> 00:25:46,610
that is going<font color="#E5E5E5"> to work out the way that</font>

669
00:25:46,610 --> 00:25:48,890
<font color="#CCCCCC">you would like it to alright</font><font color="#E5E5E5"> so I'm</font>

670
00:25:48,890 --> 00:25:50,360
going<font color="#CCCCCC"> to do more</font><font color="#E5E5E5"> with arrays as the two</font>

671
00:25:50,360 --> 00:25:52,340
<font color="#E5E5E5">door continues but now I want</font><font color="#CCCCCC"> to take a</font>

672
00:25:52,340 --> 00:25:55,309
pause<font color="#CCCCCC"> here and take a look at ranges all</font>

673
00:25:55,309 --> 00:25:58,490
<font color="#E5E5E5">right so ranges are really cool what</font>

674
00:25:58,490 --> 00:26:00,260
they're<font color="#E5E5E5"> basically and allow you to do is</font>

675
00:26:00,260 --> 00:26:03,260
to define<font color="#E5E5E5"> basically a starting and an</font>

676
00:26:03,260 --> 00:26:04,700
ending value and do

677
00:26:04,700 --> 00:26:06,950
all sorts<font color="#E5E5E5"> of nifty little calculations</font>

678
00:26:06,950 --> 00:26:08,630
in between<font color="#CCCCCC"> so let's say I want to create</font>

679
00:26:08,630 --> 00:26:12,230
<font color="#CCCCCC">a range that goes</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> one to ten</font><font color="#E5E5E5"> how</font>

680
00:26:12,230 --> 00:26:14,030
<font color="#CCCCCC">would I do</font><font color="#E5E5E5"> it I</font><font color="#CCCCCC"> just do that and</font><font color="#E5E5E5"> then I</font>

681
00:26:14,030 --> 00:26:16,130
go 1 dot dot<font color="#CCCCCC"> 10 there it is</font>

682
00:26:16,130 --> 00:26:18,260
automatically generated<font color="#CCCCCC"> it for me</font>

683
00:26:18,260 --> 00:26:20,180
likewise I can<font color="#CCCCCC"> come in</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and have it</font>

684
00:26:20,180 --> 00:26:22,370
<font color="#E5E5E5">work with letters so let's just call</font>

685
00:26:22,370 --> 00:26:25,010
<font color="#E5E5E5">this alpha is equal</font><font color="#CCCCCC"> to and I'm going</font><font color="#E5E5E5"> to</font>

686
00:26:25,010 --> 00:26:27,980
go double quotes here<font color="#CCCCCC"> a dot dot and then</font>

687
00:26:27,980 --> 00:26:29,360
<font color="#E5E5E5">I want to throw a Z inside of there so</font>

688
00:26:29,360 --> 00:26:31,400
<font color="#CCCCCC">there we go</font><font color="#E5E5E5"> we just created lists</font>

689
00:26:31,400 --> 00:26:33,650
automatically generating<font color="#E5E5E5"> those for us</font>

690
00:26:33,650 --> 00:26:36,100
<font color="#E5E5E5">you're also going to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to use in</font>

691
00:26:36,100 --> 00:26:40,090
to search<font color="#E5E5E5"> a range so let's come in and</font>

692
00:26:40,090 --> 00:26:42,770
let's say that<font color="#CCCCCC"> we want to search to find</font>

693
00:26:42,770 --> 00:26:46,670
<font color="#CCCCCC">out if r is inside of alpha we can</font><font color="#E5E5E5"> do so</font>

694
00:26:46,670 --> 00:26:49,850
so we'll say something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> R in alpha</font>

695
00:26:49,850 --> 00:26:52,070
and then we come in here<font color="#E5E5E5"> get rid of all</font>

696
00:26:52,070 --> 00:26:54,680
this stuff<font color="#E5E5E5"> and then we will go our in</font>

697
00:26:54,680 --> 00:26:56,990
<font color="#CCCCCC">whoops make sure you have that there in</font>

698
00:26:56,990 --> 00:27:00,290
an alpha<font color="#CCCCCC"> and it will tell us if it's if</font>

699
00:27:00,290 --> 00:27:02,480
the<font color="#E5E5E5"> R is stored inside of</font><font color="#CCCCCC"> that range or</font>

700
00:27:02,480 --> 00:27:04,220
not we're also going to be able<font color="#E5E5E5"> to</font>

701
00:27:04,220 --> 00:27:06,740
<font color="#E5E5E5">create ranges that would decrement</font>

702
00:27:06,740 --> 00:27:08,840
downwards so let's say we wanted to<font color="#E5E5E5"> go</font>

703
00:27:08,840 --> 00:27:13,360
<font color="#E5E5E5">from 10 to 1 we could do so we go</font><font color="#CCCCCC"> 10 to</font>

704
00:27:13,360 --> 00:27:19,010
<font color="#CCCCCC">1 and then</font><font color="#E5E5E5"> we could go 10 and down</font><font color="#CCCCCC"> to</font>

705
00:27:19,010 --> 00:27:21,050
and then whatever<font color="#CCCCCC"> we want the last</font><font color="#E5E5E5"> thing</font>

706
00:27:21,050 --> 00:27:24,770
<font color="#E5E5E5">to be we could create an array up to a</font>

707
00:27:24,770 --> 00:27:29,600
value<font color="#E5E5E5"> so let's just go to to say we want</font>

708
00:27:29,600 --> 00:27:32,060
<font color="#CCCCCC">to</font><font color="#E5E5E5"> go 20 is equal</font><font color="#CCCCCC"> to and</font><font color="#E5E5E5"> then we can go</font>

709
00:27:32,060 --> 00:27:35,420
<font color="#CCCCCC">to</font><font color="#E5E5E5"> dot and in this situation we</font><font color="#CCCCCC"> would</font>

710
00:27:35,420 --> 00:27:39,170
say range to 20<font color="#E5E5E5"> and what else can we</font><font color="#CCCCCC"> do</font>

711
00:27:39,170 --> 00:27:41,720
we could step through an array so let's

712
00:27:41,720 --> 00:27:45,500
say each value inside of our<font color="#E5E5E5"> range I</font>

713
00:27:45,500 --> 00:27:48,320
<font color="#E5E5E5">means we can step through a range so</font><font color="#CCCCCC"> say</font>

714
00:27:48,320 --> 00:27:50,600
we wanted to<font color="#E5E5E5"> step through adding 3 each</font>

715
00:27:50,600 --> 00:27:52,310
time starting at<font color="#E5E5E5"> the first value we</font>

716
00:27:52,310 --> 00:27:55,130
<font color="#CCCCCC">could do so let's go bow</font><font color="#E5E5E5"> and let's call</font>

717
00:27:55,130 --> 00:27:59,000
this range<font color="#E5E5E5"> 3 is equal to and then we can</font>

718
00:27:59,000 --> 00:28:03,800
go<font color="#E5E5E5"> 1 to 10 and let's say we want to step</font>

719
00:28:03,800 --> 00:28:06,170
through adding 3 each time we can go

720
00:28:06,170 --> 00:28:10,070
step and<font color="#E5E5E5"> 3 not</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> of course and what else</font>

721
00:28:10,070 --> 00:28:12,140
can we do<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> of course cycle through</font>

722
00:28:12,140 --> 00:28:14,960
a range and print information<font color="#E5E5E5"> out we can</font>

723
00:28:14,960 --> 00:28:16,140
do the<font color="#E5E5E5"> same thing</font>

724
00:28:16,140 --> 00:28:18,180
with arrays as you're going<font color="#E5E5E5"> to see later</font>

725
00:28:18,180 --> 00:28:19,800
<font color="#CCCCCC">on or you</font><font color="#E5E5E5"> can go back and test this out</font>

726
00:28:19,800 --> 00:28:23,430
<font color="#E5E5E5">so I can go for X N</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we go range</font>

727
00:28:23,430 --> 00:28:25,110
<font color="#E5E5E5">three or we could do this with any of</font>

728
00:28:25,110 --> 00:28:27,270
the other ones<font color="#CCCCCC"> and we go print a line</font>

729
00:28:27,270 --> 00:28:31,260
<font color="#CCCCCC">and what</font><font color="#E5E5E5"> I'm going to do here is</font><font color="#CCCCCC"> just so</font>

730
00:28:31,260 --> 00:28:32,610
we<font color="#E5E5E5"> can tell what this is I'm going to go</font>

731
00:28:32,610 --> 00:28:36,690
<font color="#CCCCCC">range three</font><font color="#E5E5E5"> and then we can go X and</font>

732
00:28:36,690 --> 00:28:38,550
that's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to print</font><font color="#E5E5E5"> out all those</font>

733
00:28:38,550 --> 00:28:40,620
different values<font color="#E5E5E5"> and of course the final</font>

734
00:28:40,620 --> 00:28:42,480
thing is<font color="#E5E5E5"> we would be able</font><font color="#CCCCCC"> to reverse a</font>

735
00:28:42,480 --> 00:28:45,000
range<font color="#E5E5E5"> let's use the for loop again</font><font color="#CCCCCC"> so</font>

736
00:28:45,000 --> 00:28:48,120
I'm going to<font color="#E5E5E5"> go for X in and we'll go</font>

737
00:28:48,120 --> 00:28:53,790
ten to one<font color="#CCCCCC"> and reverse and put that</font>

738
00:28:53,790 --> 00:28:56,580
<font color="#E5E5E5">there</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> and then we'll just</font>

739
00:28:56,580 --> 00:28:58,170
print<font color="#E5E5E5"> the information</font><font color="#CCCCCC"> out again so we'll</font>

740
00:28:58,170 --> 00:29:04,620
go print line and reverse and X and that

741
00:29:04,620 --> 00:29:06,240
<font color="#CCCCCC">is going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> allow us to do all</font><font color="#E5E5E5"> that we</font>

742
00:29:06,240 --> 00:29:08,640
will run it<font color="#E5E5E5"> and you're going to see did</font>

743
00:29:08,640 --> 00:29:09,210
it work

744
00:29:09,210 --> 00:29:11,820
what I have little<font color="#E5E5E5"> bug 23</font><font color="#CCCCCC"> does it to do</font>

745
00:29:11,820 --> 00:29:15,090
<font color="#CCCCCC">oh this is reversed sorry about that I</font>

746
00:29:15,090 --> 00:29:17,490
remembered it wrong and let's run it

747
00:29:17,490 --> 00:29:19,800
again<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see everything</font><font color="#E5E5E5"> here so</font>

748
00:29:19,800 --> 00:29:21,840
what we were<font color="#E5E5E5"> able to do here with what</font>

749
00:29:21,840 --> 00:29:24,660
it<font color="#E5E5E5"> says is</font><font color="#CCCCCC"> are in alpha remember we use</font>

750
00:29:24,660 --> 00:29:27,630
the keyword<font color="#E5E5E5"> in to check if the letter R</font>

751
00:29:27,630 --> 00:29:29,550
is in this<font color="#E5E5E5"> range and indeed it comes</font>

752
00:29:29,550 --> 00:29:31,380
back<font color="#CCCCCC"> it's true</font><font color="#E5E5E5"> you can see we came down</font>

753
00:29:31,380 --> 00:29:34,170
<font color="#E5E5E5">here</font><font color="#CCCCCC"> and we went</font><font color="#E5E5E5"> and added</font><font color="#CCCCCC"> three to each</font>

754
00:29:34,170 --> 00:29:35,550
of these<font color="#E5E5E5"> values and then printed them</font>

755
00:29:35,550 --> 00:29:37,590
out on the<font color="#E5E5E5"> screen using this flow for</font>

756
00:29:37,590 --> 00:29:39,960
loop here you can see<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> plus 3 is equal</font>

757
00:29:39,960 --> 00:29:42,180
<font color="#CCCCCC">to 4</font><font color="#E5E5E5"> plus 3 is</font><font color="#CCCCCC"> equal to 7 and</font><font color="#E5E5E5"> so forth</font>

758
00:29:42,180 --> 00:29:44,460
<font color="#E5E5E5">and so on and then we also came here</font><font color="#CCCCCC"> and</font>

759
00:29:44,460 --> 00:29:47,370
use 10 to<font color="#E5E5E5"> 1 and we re reversed it and</font>

760
00:29:47,370 --> 00:29:49,590
that's<font color="#E5E5E5"> reason why we have 1 through 10</font>

761
00:29:49,590 --> 00:29:51,360
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right so</font><font color="#CCCCCC"> a whole bunch of</font><font color="#E5E5E5"> cool</font>

762
00:29:51,360 --> 00:29:53,100
things<font color="#CCCCCC"> we can do with ranges more is</font>

763
00:29:53,100 --> 00:29:54,900
<font color="#E5E5E5">coming as this tutorial continues and</font>

764
00:29:54,900 --> 00:29:56,700
now<font color="#CCCCCC"> I want to talk about conditionals</font>

765
00:29:56,700 --> 00:29:59,100
<font color="#E5E5E5">all right so of course there's going to</font>

766
00:29:59,100 --> 00:30:00,900
be a bunch of different conditional

767
00:30:00,900 --> 00:30:02,340
operators I'm going to show<font color="#CCCCCC"> you here and</font>

768
00:30:02,340 --> 00:30:03,930
you're going to have greater<font color="#E5E5E5"> than you're</font>

769
00:30:03,930 --> 00:30:05,550
going<font color="#E5E5E5"> to have less</font><font color="#CCCCCC"> than you're</font><font color="#E5E5E5"> going to</font>

770
00:30:05,550 --> 00:30:07,080
have greater than<font color="#E5E5E5"> or equal to you're</font>

771
00:30:07,080 --> 00:30:08,910
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have less than or</font><font color="#E5E5E5"> equal to</font>

772
00:30:08,910 --> 00:30:10,320
you're<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> have equal</font><font color="#E5E5E5"> to and you're</font>

773
00:30:10,320 --> 00:30:11,850
going<font color="#CCCCCC"> to have not</font><font color="#E5E5E5"> equal to you're also</font>

774
00:30:11,850 --> 00:30:14,730
going to have logical operators and<font color="#CCCCCC"> like</font>

775
00:30:14,730 --> 00:30:15,750
I said<font color="#E5E5E5"> I'm going to</font><font color="#CCCCCC"> show you</font><font color="#E5E5E5"> all these</font>

776
00:30:15,750 --> 00:30:17,610
<font color="#E5E5E5">you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> and you're going</font><font color="#CCCCCC"> to have</font>

777
00:30:17,610 --> 00:30:19,290
or and you're<font color="#E5E5E5"> going to have not all</font>

778
00:30:19,290 --> 00:30:20,340
right so<font color="#E5E5E5"> I'll show you a couple</font><font color="#CCCCCC"> examples</font>

779
00:30:20,340 --> 00:30:22,950
how they work using if<font color="#E5E5E5"> and else if and</font>

780
00:30:22,950 --> 00:30:25,920
else so let's<font color="#E5E5E5"> say we go and create a</font>

781
00:30:25,920 --> 00:30:28,620
value here remember this is<font color="#E5E5E5"> in immutable</font>

782
00:30:28,620 --> 00:30:29,830
it's not going to<font color="#E5E5E5"> change</font>

783
00:30:29,830 --> 00:30:31,510
so we're going to<font color="#E5E5E5"> vow age in this</font>

784
00:30:31,510 --> 00:30:33,250
<font color="#E5E5E5">situation age will not</font><font color="#CCCCCC"> change</font><font color="#E5E5E5"> so I'm</font>

785
00:30:33,250 --> 00:30:37,090
gonna say if age is less than<font color="#CCCCCC"> five in</font>

786
00:30:37,090 --> 00:30:39,299
<font color="#E5E5E5">that situation what we're going to do is</font>

787
00:30:39,299 --> 00:30:42,340
print line and we'll say something<font color="#E5E5E5"> like</font>

788
00:30:42,340 --> 00:30:46,330
go to preschool<font color="#E5E5E5"> maybe a little</font><font color="#CCCCCC"> bit early</font>

789
00:30:46,330 --> 00:30:49,059
to send a infants preschool but it's

790
00:30:49,059 --> 00:30:50,890
<font color="#E5E5E5">going to work in our world</font><font color="#CCCCCC"> and then</font>

791
00:30:50,890 --> 00:30:52,330
you're going to be<font color="#CCCCCC"> able to go else if</font>

792
00:30:52,330 --> 00:30:54,100
there's no<font color="#CCCCCC"> LF for any of</font><font color="#E5E5E5"> that crazy</font>

793
00:30:54,100 --> 00:30:57,010
<font color="#E5E5E5">stuff inside of Kotlin we can say age is</font>

794
00:30:57,010 --> 00:31:00,250
equal<font color="#E5E5E5"> to five and in that</font><font color="#CCCCCC"> situation</font>

795
00:31:00,250 --> 00:31:02,580
we're going<font color="#E5E5E5"> to say that you can go to</font>

796
00:31:02,580 --> 00:31:04,990
kindergarten<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there's kindergarten</font>

797
00:31:04,990 --> 00:31:08,110
and else<font color="#E5E5E5"> is and now we can stack these</font>

798
00:31:08,110 --> 00:31:10,779
using logical operators<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we could go</font>

799
00:31:10,779 --> 00:31:12,820
<font color="#E5E5E5">and say</font><font color="#CCCCCC"> something like</font><font color="#E5E5E5"> let's put two</font>

800
00:31:12,820 --> 00:31:15,100
<font color="#E5E5E5">parentheses in there if age is greater</font>

801
00:31:15,100 --> 00:31:18,789
<font color="#E5E5E5">than five and meaning</font><font color="#CCCCCC"> that both sides of</font>

802
00:31:18,789 --> 00:31:20,919
this conditional operator has to<font color="#CCCCCC"> be true</font>

803
00:31:20,919 --> 00:31:22,570
<font color="#CCCCCC">for this to come</font><font color="#E5E5E5"> back with the value of</font>

804
00:31:22,570 --> 00:31:25,450
true<font color="#E5E5E5"> and if a is</font><font color="#CCCCCC"> less than</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> equal</font><font color="#E5E5E5"> to</font>

805
00:31:25,450 --> 00:31:28,120
<font color="#CCCCCC">seventeen</font><font color="#E5E5E5"> in that situation I'm going to</font>

806
00:31:28,120 --> 00:31:30,850
say that we're going<font color="#E5E5E5"> to calculate the</font>

807
00:31:30,850 --> 00:31:32,649
grade that the<font color="#E5E5E5"> student is going to be</font>

808
00:31:32,649 --> 00:31:34,870
<font color="#E5E5E5">working or going to and we'll do</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> by</font>

809
00:31:34,870 --> 00:31:38,470
taking<font color="#E5E5E5"> age minus five and remember no</font>

810
00:31:38,470 --> 00:31:40,600
semicolons<font color="#E5E5E5"> and then I will come in and</font>

811
00:31:40,600 --> 00:31:42,880
go print line<font color="#CCCCCC"> and I'll say go</font><font color="#E5E5E5"> to and</font>

812
00:31:42,880 --> 00:31:46,929
change this to grade and then<font color="#CCCCCC"> use string</font>

813
00:31:46,929 --> 00:31:49,149
interpolation to throw grade inside of

814
00:31:49,149 --> 00:31:51,490
there and then finally<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can say else</font>

815
00:31:51,490 --> 00:31:53,919
which<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be the</font><font color="#CCCCCC"> default</font><font color="#E5E5E5"> and in</font>

816
00:31:53,919 --> 00:31:56,049
that situation<font color="#E5E5E5"> we'll say</font><font color="#CCCCCC"> everybody else</font>

817
00:31:56,049 --> 00:31:58,659
can go to<font color="#E5E5E5"> college and there you are</font>

818
00:31:58,659 --> 00:32:00,549
that's how if and else if and

819
00:32:00,549 --> 00:32:01,929
conditional operators and logical

820
00:32:01,929 --> 00:32:04,360
<font color="#E5E5E5">operators work why don't we see how</font><font color="#CCCCCC"> work</font>

821
00:32:04,360 --> 00:32:07,480
<font color="#E5E5E5">if we're using what is called win which</font>

822
00:32:07,480 --> 00:32:10,389
works like<font color="#E5E5E5"> switch in other languages win</font>

823
00:32:10,389 --> 00:32:11,830
is very cool<font color="#E5E5E5"> here I'll run it for</font><font color="#CCCCCC"> you</font>

824
00:32:11,830 --> 00:32:13,240
<font color="#CCCCCC">just you can see what the results are</font>

825
00:32:13,240 --> 00:32:15,519
ran it<font color="#E5E5E5"> go to</font><font color="#CCCCCC"> Grade three okay</font><font color="#E5E5E5"> so you can</font>

826
00:32:15,519 --> 00:32:17,289
<font color="#E5E5E5">see it fell into this quadrant right</font>

827
00:32:17,289 --> 00:32:19,360
here subtracted<font color="#E5E5E5"> five from the age and</font>

828
00:32:19,360 --> 00:32:20,350
that's<font color="#E5E5E5"> the reason why so it's grade</font>

829
00:32:20,350 --> 00:32:23,169
three now<font color="#E5E5E5"> let's take a look at the win</font>

830
00:32:23,169 --> 00:32:26,139
<font color="#CCCCCC">loo earth</font><font color="#E5E5E5"> conditional operator and we'll</font>

831
00:32:26,139 --> 00:32:29,019
go<font color="#CCCCCC"> win age I'm going to show</font><font color="#E5E5E5"> you a bunch</font>

832
00:32:29,019 --> 00:32:30,610
<font color="#E5E5E5">of different</font><font color="#CCCCCC"> things we can do here so we</font>

833
00:32:30,610 --> 00:32:32,950
go win<font color="#CCCCCC"> age and then we'll say</font><font color="#E5E5E5"> let's say</font>

834
00:32:32,950 --> 00:32:35,320
we wanted to<font color="#E5E5E5"> match a list I know you</font>

835
00:32:35,320 --> 00:32:36,429
normally wouldn't<font color="#E5E5E5"> do this but</font><font color="#CCCCCC"> I'm going</font>

836
00:32:36,429 --> 00:32:38,110
<font color="#E5E5E5">to do it</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> show you this because</font>

837
00:32:38,110 --> 00:32:41,120
sometimes<font color="#CCCCCC"> will work you can</font><font color="#E5E5E5"> just go</font><font color="#CCCCCC"> zero</font>

838
00:32:41,120 --> 00:32:45,019
and two and three<font color="#E5E5E5"> and</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> and then come</font>

839
00:32:45,019 --> 00:32:46,759
out<font color="#E5E5E5"> here put the little arrow in there</font>

840
00:32:46,759 --> 00:32:49,389
and go print line and say go<font color="#E5E5E5"> to</font>

841
00:32:49,389 --> 00:32:51,529
preschool<font color="#CCCCCC"> let's keep that the same</font>

842
00:32:51,529 --> 00:32:54,590
<font color="#E5E5E5">you're also going to be</font><font color="#CCCCCC"> able to match a</font>

843
00:32:54,590 --> 00:32:57,169
specific<font color="#E5E5E5"> value so we just go five like</font>

844
00:32:57,169 --> 00:32:58,789
that<font color="#E5E5E5"> of course that's going to work</font><font color="#CCCCCC"> for</font>

845
00:32:58,789 --> 00:33:01,480
you<font color="#CCCCCC"> and air will say go to kindergarten</font>

846
00:33:01,480 --> 00:33:05,029
kindergarten<font color="#E5E5E5"> and there that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> we can</font>

847
00:33:05,029 --> 00:33:08,690
also match a range<font color="#E5E5E5"> and we use in with</font>

848
00:33:08,690 --> 00:33:13,759
this so we'll say 6.17<font color="#E5E5E5"> and put an arrow</font>

849
00:33:13,759 --> 00:33:17,570
inside of there<font color="#E5E5E5"> and here just put our</font>

850
00:33:17,570 --> 00:33:19,309
curly brackets<font color="#E5E5E5"> and we can do all</font><font color="#CCCCCC"> sorts</font>

851
00:33:19,309 --> 00:33:21,590
<font color="#E5E5E5">of other things so we can say grade is</font>

852
00:33:21,590 --> 00:33:26,899
equal to age minus<font color="#E5E5E5"> five and then we can</font>

853
00:33:26,899 --> 00:33:28,159
print<font color="#E5E5E5"> out</font><font color="#CCCCCC"> that</font>

854
00:33:28,159 --> 00:33:31,519
so we'll say go to grade and we will

855
00:33:31,519 --> 00:33:34,220
<font color="#CCCCCC">throw in whatever the grade is</font><font color="#E5E5E5"> so</font>

856
00:33:34,220 --> 00:33:36,919
there's grade and then likewise you can

857
00:33:36,919 --> 00:33:39,169
have a default<font color="#CCCCCC"> value and</font><font color="#E5E5E5"> that is else</font>

858
00:33:39,169 --> 00:33:42,259
also<font color="#E5E5E5"> else</font><font color="#CCCCCC"> and then we'll print this out</font>

859
00:33:42,259 --> 00:33:45,139
<font color="#CCCCCC">and say go</font><font color="#E5E5E5"> to college all right so</font>

860
00:33:45,139 --> 00:33:48,230
that's if<font color="#E5E5E5"> else if and else as well as</font>

861
00:33:48,230 --> 00:33:50,330
how to<font color="#CCCCCC"> use when to do</font><font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> much</font>

862
00:33:50,330 --> 00:33:52,490
exactly the<font color="#E5E5E5"> same thing in numerous</font>

863
00:33:52,490 --> 00:33:53,659
<font color="#CCCCCC">different</font><font color="#E5E5E5"> they this is really cool I</font>

864
00:33:53,659 --> 00:33:55,369
love<font color="#CCCCCC"> win and you can see it gets exactly</font>

865
00:33:55,369 --> 00:33:57,860
<font color="#E5E5E5">the same results</font><font color="#CCCCCC"> alright so there is a</font>

866
00:33:57,860 --> 00:34:00,110
rundown<font color="#E5E5E5"> of some conditional operators</font>

867
00:34:00,110 --> 00:34:02,360
and conditional things we can do and now

868
00:34:02,360 --> 00:34:04,429
I want to<font color="#E5E5E5"> talk about looping</font><font color="#CCCCCC"> alright so</font>

869
00:34:04,429 --> 00:34:06,889
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> of course you know looping is</font>

870
00:34:06,889 --> 00:34:07,909
going to allow us<font color="#CCCCCC"> to cycle through</font>

871
00:34:07,909 --> 00:34:11,270
arrays and ranges or collections<font color="#E5E5E5"> and all</font>

872
00:34:11,270 --> 00:34:12,770
sorts of other different things<font color="#E5E5E5"> and</font>

873
00:34:12,770 --> 00:34:14,839
<font color="#E5E5E5">basically anything that</font><font color="#CCCCCC"> implements an</font>

874
00:34:14,839 --> 00:34:17,210
iterator function so I<font color="#E5E5E5"> already talked</font>

875
00:34:17,210 --> 00:34:18,859
about<font color="#E5E5E5"> for loops a</font><font color="#CCCCCC"> little bit let's do</font>

876
00:34:18,859 --> 00:34:21,139
another one<font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to go for</font><font color="#E5E5E5"> X in</font>

877
00:34:21,139 --> 00:34:23,569
and here we're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> use a range</font><font color="#CCCCCC"> I'm</font>

878
00:34:23,569 --> 00:34:25,940
going<font color="#CCCCCC"> to go one dot dot ten and it's</font>

879
00:34:25,940 --> 00:34:27,918
going<font color="#E5E5E5"> to cycle through</font><font color="#CCCCCC"> one through ten</font>

880
00:34:27,918 --> 00:34:29,569
as you're probably<font color="#E5E5E5"> guessing</font><font color="#CCCCCC"> let's print</font>

881
00:34:29,569 --> 00:34:31,819
<font color="#E5E5E5">that out and we'll say something like</font>

882
00:34:31,819 --> 00:34:33,710
Lube Lube

883
00:34:33,710 --> 00:34:35,810
I don't know stickler for<font color="#E5E5E5"> uppercase</font>

884
00:34:35,810 --> 00:34:38,210
letters and then I'll just go X<font color="#E5E5E5"> all</font>

885
00:34:38,210 --> 00:34:40,699
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so there is how we can come in and</font>

886
00:34:40,699 --> 00:34:44,089
work<font color="#CCCCCC"> with or basically</font><font color="#E5E5E5"> cycle through a</font>

887
00:34:44,089 --> 00:34:45,589
range<font color="#CCCCCC"> now I want</font><font color="#E5E5E5"> to do something a</font>

888
00:34:45,589 --> 00:34:47,659
<font color="#E5E5E5">little bit neater</font><font color="#CCCCCC"> and this is what I'm</font>

889
00:34:47,659 --> 00:34:49,849
<font color="#E5E5E5">going to do is I'm going</font><font color="#CCCCCC"> to use a while</font>

890
00:34:49,849 --> 00:34:51,589
<font color="#CCCCCC">loop and it's going</font><font color="#E5E5E5"> to guess random</font>

891
00:34:51,589 --> 00:34:53,960
numbers<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you may</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> asking how</font><font color="#CCCCCC"> do we</font>

892
00:34:53,960 --> 00:34:54,860
calculate<font color="#CCCCCC"> a</font><font color="#E5E5E5"> Rand</font>

893
00:34:54,860 --> 00:34:57,170
number well the neat thing about Kotlin

894
00:34:57,170 --> 00:34:59,150
is basically<font color="#E5E5E5"> if there is a library</font>

895
00:34:59,150 --> 00:35:01,220
<font color="#E5E5E5">inside of</font><font color="#CCCCCC"> Java you're going to be able</font>

896
00:35:01,220 --> 00:35:03,470
<font color="#E5E5E5">to use it inside of Kotlin so we go</font>

897
00:35:03,470 --> 00:35:08,990
imports<font color="#E5E5E5"> Java dot util dot random</font><font color="#CCCCCC"> so</font>

898
00:35:08,990 --> 00:35:11,660
there's a library<font color="#E5E5E5"> we use to import or to</font>

899
00:35:11,660 --> 00:35:14,030
calculate<font color="#E5E5E5"> random values with Java and</font>

900
00:35:14,030 --> 00:35:15,410
automatically we're going to be able<font color="#E5E5E5"> to</font>

901
00:35:15,410 --> 00:35:16,970
use it with<font color="#E5E5E5"> Kotlin so pretty cool</font>

902
00:35:16,970 --> 00:35:19,310
<font color="#E5E5E5">someone come down here now</font><font color="#CCCCCC"> and generate</font>

903
00:35:19,310 --> 00:35:20,900
a<font color="#CCCCCC"> random value</font><font color="#E5E5E5"> how you do that you go</font>

904
00:35:20,900 --> 00:35:23,860
Val<font color="#E5E5E5"> and we call this R and is equal to</font>

905
00:35:23,860 --> 00:35:28,610
<font color="#E5E5E5">random and then go Val</font><font color="#CCCCCC"> and I'm gonna</font>

906
00:35:28,610 --> 00:35:32,570
<font color="#E5E5E5">call</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> magic number is equal</font><font color="#CCCCCC"> to R and</font>

907
00:35:32,570 --> 00:35:36,560
and next I'm going<font color="#E5E5E5"> to work with integers</font>

908
00:35:36,560 --> 00:35:39,320
<font color="#E5E5E5">so I want to find a random value from 50</font>

909
00:35:39,320 --> 00:35:42,050
to<font color="#E5E5E5"> 1 or from 1 to 50 I guess it's a</font>

910
00:35:42,050 --> 00:35:43,460
better way of saying that let's change

911
00:35:43,460 --> 00:35:46,190
this<font color="#CCCCCC"> to magic number</font><font color="#E5E5E5"> lowercase and now</font>

912
00:35:46,190 --> 00:35:48,230
let's<font color="#CCCCCC"> use our while loop course with</font>

913
00:35:48,230 --> 00:35:50,270
while loop like in almost every<font color="#E5E5E5"> other</font>

914
00:35:50,270 --> 00:35:52,430
language you're<font color="#CCCCCC"> going to have a value</font>

915
00:35:52,430 --> 00:35:54,170
<font color="#E5E5E5">you're going</font><font color="#CCCCCC"> to increment or</font><font color="#E5E5E5"> work with</font>

916
00:35:54,170 --> 00:35:56,270
that you're going to<font color="#E5E5E5"> have outside or</font>

917
00:35:56,270 --> 00:35:57,830
define before<font color="#E5E5E5"> the while loop</font><font color="#CCCCCC"> so I'm</font>

918
00:35:57,830 --> 00:36:00,080
going<font color="#E5E5E5"> to save our guess is equal to</font><font color="#CCCCCC"> zero</font>

919
00:36:00,080 --> 00:36:02,330
<font color="#E5E5E5">and just have</font><font color="#CCCCCC"> it figure out</font><font color="#E5E5E5"> whatever the</font>

920
00:36:02,330 --> 00:36:04,910
datatype for that is and then I'm<font color="#E5E5E5"> going</font>

921
00:36:04,910 --> 00:36:06,410
to go and<font color="#CCCCCC"> generate my while loop</font><font color="#E5E5E5"> so I'm</font>

922
00:36:06,410 --> 00:36:10,910
going to go<font color="#E5E5E5"> while magic</font><font color="#CCCCCC"> num is not equal</font>

923
00:36:10,910 --> 00:36:14,720
<font color="#CCCCCC">to the guess in that situation I'm going</font>

924
00:36:14,720 --> 00:36:17,390
<font color="#CCCCCC">to come in and go</font><font color="#E5E5E5"> guess and there's a</font>

925
00:36:17,390 --> 00:36:20,300
<font color="#E5E5E5">shortcut way</font><font color="#CCCCCC"> of adding one to a value</font>

926
00:36:20,300 --> 00:36:21,950
and<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep incrementing the</font>

927
00:36:21,950 --> 00:36:23,360
value of<font color="#CCCCCC"> guess until it gets to</font><font color="#E5E5E5"> the</font>

928
00:36:23,360 --> 00:36:25,580
point<font color="#CCCCCC"> where it finds what it wants</font><font color="#E5E5E5"> and</font>

929
00:36:25,580 --> 00:36:28,120
<font color="#E5E5E5">then in that situation</font><font color="#CCCCCC"> I can then say</font>

930
00:36:28,120 --> 00:36:32,210
magic number was and we'll just<font color="#E5E5E5"> sort</font>

931
00:36:32,210 --> 00:36:34,640
guests inside there<font color="#E5E5E5"> all right let's run</font>

932
00:36:34,640 --> 00:36:36,290
these guys<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can see how that</font>

933
00:36:36,290 --> 00:36:37,970
<font color="#E5E5E5">works out</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> there it is it looped</font>

934
00:36:37,970 --> 00:36:39,350
through printed<font color="#E5E5E5"> one through</font><font color="#CCCCCC"> ten and</font>

935
00:36:39,350 --> 00:36:42,350
<font color="#CCCCCC">magic number</font><font color="#E5E5E5"> in this situation was 19</font>

936
00:36:42,350 --> 00:36:44,570
let's run it<font color="#CCCCCC"> again</font><font color="#E5E5E5"> and now it's 15 run</font>

937
00:36:44,570 --> 00:36:46,730
it again now it's 34 and you can see

938
00:36:46,730 --> 00:36:47,990
that the random number generator is

939
00:36:47,990 --> 00:36:49,970
<font color="#CCCCCC">working</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> also the</font><font color="#E5E5E5"> Bible</font><font color="#CCCCCC"> it's working</font>

940
00:36:49,970 --> 00:36:52,010
another thing let's go and do<font color="#CCCCCC"> another</font>

941
00:36:52,010 --> 00:36:53,600
while loop<font color="#CCCCCC"> but so that I can talk</font><font color="#E5E5E5"> about</font>

942
00:36:53,600 --> 00:36:56,630
continue and break<font color="#E5E5E5"> now let's do this as</font>

943
00:36:56,630 --> 00:36:59,180
a for<font color="#E5E5E5"> loop so</font><font color="#CCCCCC"> let's go for and we'll say</font>

944
00:36:59,180 --> 00:37:04,160
<font color="#E5E5E5">X in and I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> 1 2 20 and</font>

945
00:37:04,160 --> 00:37:05,480
then what I'm going<font color="#CCCCCC"> to do is I'm going</font>

946
00:37:05,480 --> 00:37:10,420
<font color="#CCCCCC">to say if X</font><font color="#E5E5E5"> modulus 2 is equal</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 0</font>

947
00:37:10,420 --> 00:37:12,829
modulus is going to give us<font color="#E5E5E5"> the</font>

948
00:37:12,829 --> 00:37:15,289
remainder of<font color="#E5E5E5"> a division and what this is</font>

949
00:37:15,289 --> 00:37:18,470
used for is<font color="#CCCCCC"> to check if a value</font><font color="#E5E5E5"> is even</font>

950
00:37:18,470 --> 00:37:21,770
<font color="#E5E5E5">or odd</font><font color="#CCCCCC"> so if it comes</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> X modulus 2</font>

951
00:37:21,770 --> 00:37:23,599
is equal to<font color="#CCCCCC"> 0 that means it's an even</font>

952
00:37:23,599 --> 00:37:25,849
number<font color="#CCCCCC"> in that situation what I want to</font>

953
00:37:25,849 --> 00:37:28,789
do is continue back<font color="#CCCCCC"> to the top</font><font color="#E5E5E5"> of the</font>

954
00:37:28,789 --> 00:37:31,369
loop and<font color="#E5E5E5"> basically skip over all of the</font>

955
00:37:31,369 --> 00:37:33,500
even values<font color="#CCCCCC"> so I'm going to go continue</font>

956
00:37:33,500 --> 00:37:36,770
like<font color="#CCCCCC"> that then</font><font color="#E5E5E5"> after we get out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that</font>

957
00:37:36,770 --> 00:37:38,990
<font color="#E5E5E5">continue basically just skips everything</font>

958
00:37:38,990 --> 00:37:40,609
else<font color="#E5E5E5"> that comes afterwards and jumps</font>

959
00:37:40,609 --> 00:37:42,710
back up here and this guy up here<font color="#E5E5E5"> this</font>

960
00:37:42,710 --> 00:37:44,359
for loop is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to increment for us</font>

961
00:37:44,359 --> 00:37:47,660
<font color="#E5E5E5">otherwise I want to come in and go print</font>

962
00:37:47,660 --> 00:37:49,940
line<font color="#E5E5E5"> and I'm going to print out an odd</font>

963
00:37:49,940 --> 00:37:51,440
value so I'm going<font color="#E5E5E5"> to put it like</font><font color="#CCCCCC"> that</font>

964
00:37:51,440 --> 00:37:54,530
<font color="#E5E5E5">and I'm gonna go X is going to be what I</font>

965
00:37:54,530 --> 00:37:57,230
print out and let's say that<font color="#CCCCCC"> I want to</font>

966
00:37:57,230 --> 00:38:00,950
jump out prematurely<font color="#CCCCCC"> and if the value is</font>

967
00:38:00,950 --> 00:38:03,079
ever<font color="#E5E5E5"> equal to 15 how I can do that</font><font color="#CCCCCC"> is I</font>

968
00:38:03,079 --> 00:38:07,160
can say<font color="#E5E5E5"> if X is equal to 15</font><font color="#CCCCCC"> in that</font>

969
00:38:07,160 --> 00:38:09,500
<font color="#E5E5E5">situation I want to break out of it and</font>

970
00:38:09,500 --> 00:38:11,510
<font color="#E5E5E5">that is how that's going to work</font><font color="#CCCCCC"> if I</font>

971
00:38:11,510 --> 00:38:13,099
run<font color="#CCCCCC"> that you're going</font><font color="#E5E5E5"> to see that</font><font color="#CCCCCC"> that</font>

972
00:38:13,099 --> 00:38:15,109
indeed works<font color="#E5E5E5"> so it only printed out the</font>

973
00:38:15,109 --> 00:38:17,329
odd values and whenever<font color="#E5E5E5"> it got the 15 it</font>

974
00:38:17,329 --> 00:38:19,069
jumped out<font color="#CCCCCC"> of the loop even though this</font>

975
00:38:19,069 --> 00:38:21,470
was supposed to<font color="#E5E5E5"> continue going and it</font>

976
00:38:21,470 --> 00:38:23,180
ended<font color="#E5E5E5"> and that's how continue in break</font>

977
00:38:23,180 --> 00:38:25,640
work inside of<font color="#E5E5E5"> caught ones keep doing</font>

978
00:38:25,640 --> 00:38:27,950
some more<font color="#E5E5E5"> let's go and create ourselves</font>

979
00:38:27,950 --> 00:38:33,349
<font color="#E5E5E5">an array here</font><font color="#CCCCCC"> and SLAR let's call this</font>

980
00:38:33,349 --> 00:38:37,430
array<font color="#E5E5E5"> 3 and let's define this as an</font>

981
00:38:37,430 --> 00:38:43,700
integer array<font color="#E5E5E5"> is equal to array o</font><font color="#CCCCCC"> +</font><font color="#E5E5E5"> 3</font><font color="#CCCCCC"> +</font>

982
00:38:43,700 --> 00:38:48,319
<font color="#E5E5E5">6</font><font color="#CCCCCC"> +</font><font color="#E5E5E5"> 9</font><font color="#CCCCCC"> and what we're</font><font color="#E5E5E5"> going to do here is</font>

983
00:38:48,319 --> 00:38:52,309
iterate for the indices<font color="#CCCCCC"> of our array how</font>

984
00:38:52,309 --> 00:38:57,819
we can do that is go<font color="#CCCCCC"> 4 and I n ray 3</font><font color="#E5E5E5"> and</font>

985
00:38:57,819 --> 00:39:00,020
indices<font color="#E5E5E5"> and what it's going</font><font color="#CCCCCC"> to do is</font>

986
00:39:00,020 --> 00:39:02,660
return<font color="#CCCCCC"> the indices for each of the</font>

987
00:39:02,660 --> 00:39:04,460
individual<font color="#CCCCCC"> parts of the array and then</font>

988
00:39:04,460 --> 00:39:06,529
we'll be able<font color="#E5E5E5"> to go in</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and print</font>

989
00:39:06,529 --> 00:39:09,109
line like that<font color="#E5E5E5"> and let's say I want to</font>

990
00:39:09,109 --> 00:39:12,650
<font color="#E5E5E5">get multiples of 3 which is why stored</font>

991
00:39:12,650 --> 00:39:13,520
inside of<font color="#E5E5E5"> there</font>

992
00:39:13,520 --> 00:39:16,170
this and<font color="#E5E5E5"> Ray 3</font>

993
00:39:16,170 --> 00:39:18,240
and throw an eye in there<font color="#E5E5E5"> so that's a</font>

994
00:39:18,240 --> 00:39:20,220
way<font color="#CCCCCC"> to get all that out of</font><font color="#E5E5E5"> there and</font>

995
00:39:20,220 --> 00:39:23,369
<font color="#E5E5E5">then the</font><font color="#CCCCCC"> final thing is</font><font color="#E5E5E5"> I want to</font><font color="#CCCCCC"> output</font>

996
00:39:23,369 --> 00:39:27,210
not only the index<font color="#E5E5E5"> but also the value</font>

997
00:39:27,210 --> 00:39:28,920
for each of<font color="#CCCCCC"> the values inside of</font><font color="#E5E5E5"> the</font>

998
00:39:28,920 --> 00:39:32,329
<font color="#CCCCCC">Ring I can go</font><font color="#E5E5E5"> for and then put double</font>

999
00:39:32,329 --> 00:39:34,319
<font color="#CCCCCC">parentheses inside of there</font><font color="#E5E5E5"> and I'm</font>

1000
00:39:34,319 --> 00:39:37,859
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say index and value is what I</font>

1001
00:39:37,859 --> 00:39:39,770
want to work<font color="#E5E5E5"> with I'm going to say in</font>

1002
00:39:39,770 --> 00:39:44,880
array<font color="#CCCCCC"> 3 with index parentheses once</font>

1003
00:39:44,880 --> 00:39:47,460
again<font color="#CCCCCC"> since that</font><font color="#E5E5E5"> is indeed a</font><font color="#CCCCCC"> function</font>

1004
00:39:47,460 --> 00:39:49,710
and then I'm<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to print this out and</font>

1005
00:39:49,710 --> 00:39:54,750
<font color="#CCCCCC">would go bats and index and I'm going</font><font color="#E5E5E5"> to</font>

1006
00:39:54,750 --> 00:39:56,910
get to the index<font color="#E5E5E5"> and that's coming</font><font color="#CCCCCC"> from</font>

1007
00:39:56,910 --> 00:39:58,260
this guy<font color="#CCCCCC"> right</font><font color="#E5E5E5"> there you're going to</font><font color="#CCCCCC"> see</font>

1008
00:39:58,260 --> 00:40:00,900
more<font color="#E5E5E5"> examples of how</font><font color="#CCCCCC"> where like they</font>

1009
00:40:00,900 --> 00:40:02,910
would pull information<font color="#CCCCCC"> this way and I</font>

1010
00:40:02,910 --> 00:40:04,049
want the<font color="#CCCCCC"> value also</font>

1011
00:40:04,049 --> 00:40:06,359
<font color="#CCCCCC">alright so save that</font><font color="#E5E5E5"> didn't have any</font>

1012
00:40:06,359 --> 00:40:07,950
bugs that's going to print<font color="#E5E5E5"> out real nice</font>

1013
00:40:07,950 --> 00:40:09,809
<font color="#E5E5E5">on the screen</font><font color="#CCCCCC"> and indeed</font><font color="#E5E5E5"> you can see</font>

1014
00:40:09,809 --> 00:40:12,390
here<font color="#E5E5E5"> I went and printed out those values</font>

1015
00:40:12,390 --> 00:40:14,940
<font color="#E5E5E5">inside of our array by referring to</font>

1016
00:40:14,940 --> 00:40:17,010
their index<font color="#E5E5E5"> and here I printed out the</font>

1017
00:40:17,010 --> 00:40:19,530
<font color="#CCCCCC">index</font><font color="#E5E5E5"> as well as the values</font><font color="#CCCCCC"> alright so</font>

1018
00:40:19,530 --> 00:40:20,730
there is a whole<font color="#CCCCCC"> bunch of different</font>

1019
00:40:20,730 --> 00:40:23,190
things<font color="#CCCCCC"> about a looping and I want to</font>

1020
00:40:23,190 --> 00:40:25,530
talk<font color="#E5E5E5"> about functions</font><font color="#CCCCCC"> ok so whenever</font>

1021
00:40:25,530 --> 00:40:28,079
you're defining a function<font color="#E5E5E5"> it's going</font><font color="#CCCCCC"> to</font>

1022
00:40:28,079 --> 00:40:31,230
start out<font color="#E5E5E5"> with the word fun and then</font>

1023
00:40:31,230 --> 00:40:33,030
it's<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> have whatever the function</font>

1024
00:40:33,030 --> 00:40:36,780
<font color="#E5E5E5">name is a list of parameters as well as</font>

1025
00:40:36,780 --> 00:40:39,540
their data type as well<font color="#E5E5E5"> as a return type</font>

1026
00:40:39,540 --> 00:40:40,859
so I'm going to<font color="#E5E5E5"> do an example</font><font color="#CCCCCC"> so let's</font>

1027
00:40:40,859 --> 00:40:44,099
say we<font color="#E5E5E5"> create a function called</font><font color="#CCCCCC"> add</font><font color="#E5E5E5"> then</font>

1028
00:40:44,099 --> 00:40:45,660
inside<font color="#CCCCCC"> of parentheses I'm going to say</font>

1029
00:40:45,660 --> 00:40:47,819
that it is going<font color="#E5E5E5"> to receive a parameter</font>

1030
00:40:47,819 --> 00:40:49,770
I want to refer<font color="#CCCCCC"> to as number one I'm</font>

1031
00:40:49,770 --> 00:40:52,319
going<font color="#E5E5E5"> to say that this is an integer</font><font color="#CCCCCC"> and</font>

1032
00:40:52,319 --> 00:40:54,390
I'm going to<font color="#E5E5E5"> have a number two let's say</font>

1033
00:40:54,390 --> 00:40:56,700
that's<font color="#E5E5E5"> also an integer</font><font color="#CCCCCC"> then after</font><font color="#E5E5E5"> that</font>

1034
00:40:56,700 --> 00:40:58,290
I'm going<font color="#CCCCCC"> to put a colon</font><font color="#E5E5E5"> and say its</font>

1035
00:40:58,290 --> 00:41:01,109
return type is an integer<font color="#E5E5E5"> and there's a</font>

1036
00:41:01,109 --> 00:41:02,460
<font color="#E5E5E5">bunch of different</font><font color="#CCCCCC"> things we</font><font color="#E5E5E5"> can do here</font>

1037
00:41:02,460 --> 00:41:05,130
<font color="#CCCCCC">and here</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to use go equal 2</font>

1038
00:41:05,130 --> 00:41:08,640
num1 plus num2<font color="#CCCCCC"> there's the whole entire</font>

1039
00:41:08,640 --> 00:41:11,640
function all in one place and of course

1040
00:41:11,640 --> 00:41:13,200
we're going<font color="#E5E5E5"> to be able to call for it to</font>

1041
00:41:13,200 --> 00:41:17,910
work<font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> go 5 plus 4 is equal</font><font color="#CCCCCC"> to</font>

1042
00:41:17,910 --> 00:41:22,109
and<font color="#E5E5E5"> we can say add and pass in a</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> and a</font>

1043
00:41:22,109 --> 00:41:24,990
<font color="#CCCCCC">4</font><font color="#E5E5E5"> alright so there</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> how we</font>

1044
00:41:24,990 --> 00:41:26,490
can do that let's run it<font color="#CCCCCC"> just to see</font>

1045
00:41:26,490 --> 00:41:28,319
what<font color="#CCCCCC"> it looks like</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can say 5</font>

1046
00:41:28,319 --> 00:41:30,080
plus 4<font color="#CCCCCC"> is equal to 9</font>

1047
00:41:30,080 --> 00:41:31,880
<font color="#E5E5E5">okay now one thing that</font><font color="#CCCCCC"> is interesting</font>

1048
00:41:31,880 --> 00:41:34,520
is that<font color="#E5E5E5"> you actually do not need a</font>

1049
00:41:34,520 --> 00:41:36,260
return type whenever you are working

1050
00:41:36,260 --> 00:41:38,750
<font color="#CCCCCC">with single</font><font color="#E5E5E5"> line functions this</font><font color="#CCCCCC"> is a</font>

1051
00:41:38,750 --> 00:41:40,370
single line<font color="#CCCCCC"> function what we have right</font>

1052
00:41:40,370 --> 00:41:42,950
here<font color="#E5E5E5"> so let's go and I'll show</font><font color="#CCCCCC"> you</font>

1053
00:41:42,950 --> 00:41:44,630
<font color="#E5E5E5">exactly what I mean</font><font color="#CCCCCC"> by that Linc's copy</font>

1054
00:41:44,630 --> 00:41:46,820
<font color="#E5E5E5">this</font><font color="#CCCCCC"> and just change it to subtract just</font>

1055
00:41:46,820 --> 00:41:48,770
so I can<font color="#E5E5E5"> show</font><font color="#CCCCCC"> you an example so throw</font>

1056
00:41:48,770 --> 00:41:50,890
<font color="#E5E5E5">that inside of there change this to</font>

1057
00:41:50,890 --> 00:41:53,570
subtract<font color="#CCCCCC"> it's once again going to</font>

1058
00:41:53,570 --> 00:41:56,300
receive a<font color="#E5E5E5"> number and another number</font><font color="#CCCCCC"> and</font>

1059
00:41:56,300 --> 00:41:58,280
<font color="#E5E5E5">another thing well since I'm here</font><font color="#CCCCCC"> I</font>

1060
00:41:58,280 --> 00:41:59,450
<font color="#E5E5E5">might as well talk about it you can</font><font color="#CCCCCC"> also</font>

1061
00:41:59,450 --> 00:42:01,310
have default<font color="#CCCCCC"> values</font><font color="#E5E5E5"> so let's say we</font>

1062
00:42:01,310 --> 00:42:02,930
wanted to<font color="#E5E5E5"> have a default we could do</font>

1063
00:42:02,930 --> 00:42:05,450
that just<font color="#E5E5E5"> like this and let's have the</font>

1064
00:42:05,450 --> 00:42:08,120
defaults be equal to<font color="#CCCCCC"> 1 in</font><font color="#E5E5E5"> that situation</font>

1065
00:42:08,120 --> 00:42:09,950
<font color="#E5E5E5">you're going to be</font><font color="#CCCCCC"> able to get rid of</font>

1066
00:42:09,950 --> 00:42:12,980
this in here<font color="#E5E5E5"> in that situation and it's</font>

1067
00:42:12,980 --> 00:42:14,570
still going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> work out</font><font color="#CCCCCC"> perfectly fine</font>

1068
00:42:14,570 --> 00:42:17,510
and let's go<font color="#E5E5E5"> get this guy and paste</font><font color="#CCCCCC"> it</font>

1069
00:42:17,510 --> 00:42:18,800
in there<font color="#CCCCCC"> just so you</font><font color="#E5E5E5"> can see that I'm</font>

1070
00:42:18,800 --> 00:42:21,770
not<font color="#E5E5E5"> lying to you</font><font color="#CCCCCC"> sometimes say</font><font color="#E5E5E5"> 5 minus 4</font>

1071
00:42:21,770 --> 00:42:23,780
is<font color="#E5E5E5"> equal to</font><font color="#CCCCCC"> would be</font><font color="#E5E5E5"> an interesting</font>

1072
00:42:23,780 --> 00:42:25,700
tutorial I basically just make up<font color="#E5E5E5"> a</font>

1073
00:42:25,700 --> 00:42:27,020
bunch<font color="#E5E5E5"> of things and</font><font color="#CCCCCC"> people think</font><font color="#E5E5E5"> it's</font>

1074
00:42:27,020 --> 00:42:28,820
true<font color="#E5E5E5"> but</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is not going on right</font><font color="#CCCCCC"> now</font>

1075
00:42:28,820 --> 00:42:30,050
I just<font color="#E5E5E5"> want to make</font><font color="#CCCCCC"> sure you're clear on</font>

1076
00:42:30,050 --> 00:42:30,530
<font color="#CCCCCC">that</font>

1077
00:42:30,530 --> 00:42:33,700
<font color="#CCCCCC">ok so 5 minus 4</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> equal to</font><font color="#E5E5E5"> 9 what</font>

1078
00:42:33,700 --> 00:42:36,590
subtract<font color="#CCCCCC"> oh I went and slept</font><font color="#E5E5E5"> out there</font>

1079
00:42:36,590 --> 00:42:38,570
all right so it'll change that right

1080
00:42:38,570 --> 00:42:41,060
there<font color="#CCCCCC"> and</font><font color="#E5E5E5"> 5 minus 4</font><font color="#CCCCCC"> is equal to</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

1081
00:42:41,060 --> 00:42:43,220
there<font color="#E5E5E5"> is how to set default values and</font>

1082
00:42:43,220 --> 00:42:45,620
<font color="#CCCCCC">also</font><font color="#E5E5E5"> point out the</font><font color="#CCCCCC"> fact that this is a</font>

1083
00:42:45,620 --> 00:42:47,870
<font color="#CCCCCC">single line function</font><font color="#E5E5E5"> you don't need a</font>

1084
00:42:47,870 --> 00:42:49,880
return value but put it in there<font color="#E5E5E5"> you</font>

1085
00:42:49,880 --> 00:42:51,410
<font color="#CCCCCC">might as well alright another thing</font>

1086
00:42:51,410 --> 00:42:53,480
<font color="#E5E5E5">you're also going to be able to use what</font>

1087
00:42:53,480 --> 00:42:56,330
are called named<font color="#E5E5E5"> parameters and what I</font>

1088
00:42:56,330 --> 00:42:57,620
mean<font color="#CCCCCC"> by that is you're</font><font color="#E5E5E5"> going to be able</font>

1089
00:42:57,620 --> 00:42:59,900
<font color="#CCCCCC">to refer</font><font color="#E5E5E5"> to these even though they're</font>

1090
00:42:59,900 --> 00:43:02,000
out of<font color="#CCCCCC"> order so I'm going</font><font color="#E5E5E5"> to come in I'm</font>

1091
00:43:02,000 --> 00:43:03,470
just<font color="#CCCCCC"> gonna paste</font><font color="#E5E5E5"> this inside of here</font>

1092
00:43:03,470 --> 00:43:06,620
like that and here I'm going<font color="#CCCCCC"> to say 4</font>

1093
00:43:06,620 --> 00:43:11,000
minus 5 is equal<font color="#E5E5E5"> to and I'm going to</font>

1094
00:43:11,000 --> 00:43:14,870
call subtract<font color="#E5E5E5"> so so tracks</font><font color="#CCCCCC"> and then</font>

1095
00:43:14,870 --> 00:43:17,630
we'll go in and name the<font color="#E5E5E5"> parameter so</font>

1096
00:43:17,630 --> 00:43:18,770
I'm going<font color="#E5E5E5"> to say I want</font><font color="#CCCCCC"> to put num2</font>

1097
00:43:18,770 --> 00:43:21,020
inside of here first<font color="#CCCCCC"> give it a value of</font>

1098
00:43:21,020 --> 00:43:24,530
<font color="#E5E5E5">5 and then</font><font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to have num1 and of</font>

1099
00:43:24,530 --> 00:43:26,900
course<font color="#CCCCCC"> i'm</font><font color="#E5E5E5"> going to give it</font><font color="#CCCCCC"> a value of</font><font color="#E5E5E5"> 4</font>

1100
00:43:26,900 --> 00:43:29,300
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> perfectly fine you can do that</font>

1101
00:43:29,300 --> 00:43:31,550
as<font color="#CCCCCC"> well you may ask yourself well what</font>

1102
00:43:31,550 --> 00:43:33,050
<font color="#E5E5E5">do</font><font color="#CCCCCC"> i put inside of</font><font color="#E5E5E5"> here if</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> don't have</font>

1103
00:43:33,050 --> 00:43:34,880
a return value<font color="#CCCCCC"> well you're going</font><font color="#E5E5E5"> to put</font>

1104
00:43:34,880 --> 00:43:37,760
unit not void<font color="#CCCCCC"> so let's go</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> create a</font>

1105
00:43:37,760 --> 00:43:40,400
function<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> return anything</font>

1106
00:43:40,400 --> 00:43:41,370
let's

1107
00:43:41,370 --> 00:43:43,890
call it say<font color="#E5E5E5"> hello and it is going to</font>

1108
00:43:43,890 --> 00:43:46,710
receive a<font color="#E5E5E5"> name which is going to be a</font>

1109
00:43:46,710 --> 00:43:49,410
string<font color="#CCCCCC"> datatype and it</font><font color="#E5E5E5"> is going to</font>

1110
00:43:49,410 --> 00:43:51,420
<font color="#E5E5E5">return nothing so we put a colon in</font>

1111
00:43:51,420 --> 00:43:53,850
<font color="#CCCCCC">there and just</font><font color="#E5E5E5"> put in</font><font color="#CCCCCC"> units</font><font color="#E5E5E5"> and then we</font>

1112
00:43:53,850 --> 00:43:56,820
can go and put<font color="#E5E5E5"> equal to print line</font><font color="#CCCCCC"> and</font>

1113
00:43:56,820 --> 00:43:59,880
then inside of<font color="#E5E5E5"> here go hello and</font>

1114
00:43:59,880 --> 00:44:01,650
<font color="#E5E5E5">whatever the name was that was passed</font>

1115
00:44:01,650 --> 00:44:04,230
inside of there<font color="#CCCCCC"> and we can call</font><font color="#E5E5E5"> this guy</font>

1116
00:44:04,230 --> 00:44:06,270
actually<font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> need that</font><font color="#CCCCCC"> right there</font>

1117
00:44:06,270 --> 00:44:09,500
we can<font color="#CCCCCC"> just</font><font color="#E5E5E5"> go say hello</font><font color="#CCCCCC"> and pass in</font>

1118
00:44:09,500 --> 00:44:11,670
<font color="#E5E5E5">call I don't</font><font color="#CCCCCC"> know</font>

1119
00:44:11,670 --> 00:44:14,580
there we go<font color="#CCCCCC"> so there's that and what</font>

1120
00:44:14,580 --> 00:44:16,080
else<font color="#CCCCCC"> can we do with functions there's a</font>

1121
00:44:16,080 --> 00:44:18,720
whole bunch we can create<font color="#E5E5E5"> a function</font>

1122
00:44:18,720 --> 00:44:21,690
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to return two values</font><font color="#E5E5E5"> and</font>

1123
00:44:21,690 --> 00:44:23,700
there's a couple<font color="#CCCCCC"> different ways</font><font color="#E5E5E5"> of doing</font>

1124
00:44:23,700 --> 00:44:24,330
that

1125
00:44:24,330 --> 00:44:28,770
let's go Val and well let's create a

1126
00:44:28,770 --> 00:44:30,810
function outside<font color="#E5E5E5"> of here we'll come down</font>

1127
00:44:30,810 --> 00:44:32,910
inside<font color="#CCCCCC"> of here and this is going</font><font color="#E5E5E5"> to</font>

1128
00:44:32,910 --> 00:44:34,620
<font color="#CCCCCC">return</font><font color="#E5E5E5"> two values</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we're going to go</font>

1129
00:44:34,620 --> 00:44:37,800
fun<font color="#E5E5E5"> next</font><font color="#CCCCCC"> two and this is going</font><font color="#E5E5E5"> to</font>

1130
00:44:37,800 --> 00:44:40,110
receive a<font color="#E5E5E5"> number and then</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> going to</font>

1131
00:44:40,110 --> 00:44:44,370
return the<font color="#E5E5E5"> next two</font><font color="#CCCCCC"> in line</font><font color="#E5E5E5"> so whoops</font><font color="#CCCCCC"> to</font>

1132
00:44:44,370 --> 00:44:47,250
do so<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> put a colon inside</font>

1133
00:44:47,250 --> 00:44:50,700
of here<font color="#E5E5E5"> and go pair and it's going to</font>

1134
00:44:50,700 --> 00:44:52,980
<font color="#E5E5E5">return</font><font color="#CCCCCC"> an integer</font><font color="#E5E5E5"> and then it's going to</font>

1135
00:44:52,980 --> 00:44:56,460
return<font color="#E5E5E5"> another integer</font><font color="#CCCCCC"> and to do</font><font color="#E5E5E5"> that we</font>

1136
00:44:56,460 --> 00:45:00,180
<font color="#E5E5E5">can go return and pair and I'm going to</font>

1137
00:45:00,180 --> 00:45:04,770
go numb<font color="#CCCCCC"> whoops</font><font color="#E5E5E5"> plus 1 and then num plus</font>

1138
00:45:04,770 --> 00:45:07,470
look<font color="#E5E5E5"> to okay so that's what</font><font color="#CCCCCC"> that</font>

1139
00:45:07,470 --> 00:45:09,210
function does for us let's go and call

1140
00:45:09,210 --> 00:45:11,130
it up inside<font color="#CCCCCC"> of here and how you</font><font color="#E5E5E5"> do that</font>

1141
00:45:11,130 --> 00:45:14,910
<font color="#CCCCCC">is you go eval</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> two things</font><font color="#E5E5E5"> one</font>

1142
00:45:14,910 --> 00:45:16,230
I'm going<font color="#E5E5E5"> to have a variable</font><font color="#CCCCCC"> called two</font>

1143
00:45:16,230 --> 00:45:17,790
and another<font color="#E5E5E5"> one called</font>

1144
00:45:17,790 --> 00:45:20,790
<font color="#CCCCCC">three is equal</font><font color="#E5E5E5"> to and I'm going to call</font>

1145
00:45:20,790 --> 00:45:23,010
the<font color="#CCCCCC"> next</font><font color="#E5E5E5"> two function inside of here</font>

1146
00:45:23,010 --> 00:45:24,870
well make sure<font color="#CCCCCC"> you</font><font color="#E5E5E5"> spell it right next</font>

1147
00:45:24,870 --> 00:45:27,360
<font color="#CCCCCC">to</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> pass one value inside</font>

1148
00:45:27,360 --> 00:45:28,710
of there and then we can<font color="#CCCCCC"> come in and</font>

1149
00:45:28,710 --> 00:45:31,080
<font color="#CCCCCC">print this out just so that we know that</font>

1150
00:45:31,080 --> 00:45:33,750
<font color="#CCCCCC">it indeed works so I'm</font><font color="#E5E5E5"> going to say one</font>

1151
00:45:33,750 --> 00:45:36,480
and then I'm<font color="#E5E5E5"> going to go to and I'm</font>

1152
00:45:36,480 --> 00:45:39,420
going<font color="#E5E5E5"> to go three because we want nuts</font>

1153
00:45:39,420 --> 00:45:41,370
<font color="#E5E5E5">and we're going to see what a whole</font>

1154
00:45:41,370 --> 00:45:43,260
bunch of these<font color="#E5E5E5"> different guys do for us</font>

1155
00:45:43,260 --> 00:45:45,840
<font color="#CCCCCC">so four</font><font color="#E5E5E5"> minus</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> where is that guy</font>

1156
00:45:45,840 --> 00:45:47,400
<font color="#CCCCCC">from all that's</font><font color="#E5E5E5"> from this guy right here</font>

1157
00:45:47,400 --> 00:45:49,890
<font color="#CCCCCC">and then we have hello Paul that comes</font>

1158
00:45:49,890 --> 00:45:51,870
out there and<font color="#E5E5E5"> then here we were able</font><font color="#CCCCCC"> to</font>

1159
00:45:51,870 --> 00:45:54,010
<font color="#E5E5E5">get two values passed back</font>

1160
00:45:54,010 --> 00:45:56,770
from one<font color="#E5E5E5"> function so a whole</font><font color="#CCCCCC"> bunch of</font>

1161
00:45:56,770 --> 00:45:58,510
neat things but there<font color="#CCCCCC"> are more and more</font>

1162
00:45:58,510 --> 00:45:59,380
<font color="#CCCCCC">are coming</font>

1163
00:45:59,380 --> 00:46:01,329
you're also going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able to send a</font>

1164
00:46:01,329 --> 00:46:03,250
variable<font color="#E5E5E5"> number of parameters we're</font>

1165
00:46:03,250 --> 00:46:04,540
going to create a function<font color="#E5E5E5"> outside of</font>

1166
00:46:04,540 --> 00:46:07,000
here again<font color="#E5E5E5"> so when we go function and we</font>

1167
00:46:07,000 --> 00:46:09,520
call this<font color="#E5E5E5"> get some and if I'm going to</font>

1168
00:46:09,520 --> 00:46:11,890
receive a variable number<font color="#CCCCCC"> of values I'm</font>

1169
00:46:11,890 --> 00:46:14,470
going<font color="#CCCCCC"> to type in</font><font color="#E5E5E5"> var</font><font color="#CCCCCC"> arg like that</font><font color="#E5E5E5"> and</font>

1170
00:46:14,470 --> 00:46:16,599
then give<font color="#CCCCCC"> it whatever name i want i'm</font>

1171
00:46:16,599 --> 00:46:18,790
<font color="#E5E5E5">going to call it numbs in this situation</font>

1172
00:46:18,790 --> 00:46:20,740
and then<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to say integer</font><font color="#E5E5E5"> and</font>

1173
00:46:20,740 --> 00:46:22,660
I'm going<font color="#CCCCCC"> to say that this is going to</font>

1174
00:46:22,660 --> 00:46:25,570
return<font color="#CCCCCC"> an integer</font><font color="#E5E5E5"> and then</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to</font>

1175
00:46:25,570 --> 00:46:29,079
go var sum is<font color="#CCCCCC"> equal to zero and</font><font color="#E5E5E5"> I'm</font>

1176
00:46:29,079 --> 00:46:30,730
going to<font color="#CCCCCC"> cycle through</font><font color="#E5E5E5"> all of these</font>

1177
00:46:30,730 --> 00:46:32,589
<font color="#CCCCCC">values as if they are an array which</font>

1178
00:46:32,589 --> 00:46:35,890
they are array<font color="#E5E5E5"> so to do that I can use a</font>

1179
00:46:35,890 --> 00:46:39,460
function<font color="#CCCCCC"> called for each and that's a</font>

1180
00:46:39,460 --> 00:46:42,490
way to cycle through<font color="#E5E5E5"> arrays</font><font color="#CCCCCC"> so I'm going</font>

1181
00:46:42,490 --> 00:46:45,670
to go<font color="#CCCCCC"> n and I can do for</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> of these</font>

1182
00:46:45,670 --> 00:46:48,640
<font color="#CCCCCC">values I can go sum</font><font color="#E5E5E5"> plus whoops equal to</font>

1183
00:46:48,640 --> 00:46:50,410
<font color="#CCCCCC">n and</font><font color="#E5E5E5"> that's going to</font><font color="#CCCCCC"> cycle through</font>

1184
00:46:50,410 --> 00:46:52,210
<font color="#CCCCCC">every value in the array that's passed</font>

1185
00:46:52,210 --> 00:46:54,609
inside of there<font color="#E5E5E5"> and add those</font><font color="#CCCCCC"> to the</font>

1186
00:46:54,609 --> 00:46:57,369
<font color="#E5E5E5">value of sum and then afterwards it</font><font color="#CCCCCC"> is</font>

1187
00:46:57,369 --> 00:46:59,470
going to return<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> final value</font>

1188
00:46:59,470 --> 00:47:01,960
of<font color="#E5E5E5"> sum is and we come in here and call</font>

1189
00:47:01,960 --> 00:47:04,329
this guy to execute let's just do a

1190
00:47:04,329 --> 00:47:05,950
print line here<font color="#CCCCCC"> just to keep it simple</font>

1191
00:47:05,950 --> 00:47:09,130
<font color="#CCCCCC">and I can go sum and then let's go and</font>

1192
00:47:09,130 --> 00:47:11,530
call get some so I'm going<font color="#CCCCCC"> to go get</font>

1193
00:47:11,530 --> 00:47:17,140
some and<font color="#CCCCCC"> 1 2 3 4 and</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> 5 and there it is</font>

1194
00:47:17,140 --> 00:47:19,750
and as there it is and<font color="#E5E5E5"> you can see the</font>

1195
00:47:19,750 --> 00:47:22,210
sum comes<font color="#E5E5E5"> back</font><font color="#CCCCCC"> is 15</font><font color="#E5E5E5"> we're also going to</font>

1196
00:47:22,210 --> 00:47:24,940
be<font color="#CCCCCC"> able to come in</font><font color="#E5E5E5"> and define function</font>

1197
00:47:24,940 --> 00:47:27,569
literals<font color="#E5E5E5"> so</font><font color="#CCCCCC"> let's say we want to</font><font color="#E5E5E5"> have</font>

1198
00:47:27,569 --> 00:47:31,599
<font color="#CCCCCC">multiplied like</font><font color="#E5E5E5"> this is equal</font><font color="#CCCCCC"> to and</font>

1199
00:47:31,599 --> 00:47:35,550
we'll have num1<font color="#CCCCCC"> inside</font><font color="#E5E5E5"> of there and</font>

1200
00:47:35,550 --> 00:47:39,369
that's<font color="#E5E5E5"> going to be an integer and num2</font>

1201
00:47:39,369 --> 00:47:42,550
<font color="#CCCCCC">and that's also</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> an integer</font>

1202
00:47:42,550 --> 00:47:45,970
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> this guy is</font><font color="#E5E5E5"> going to return</font>

1203
00:47:45,970 --> 00:47:49,450
whatever num1 is times num2<font color="#CCCCCC"> so we just</font>

1204
00:47:49,450 --> 00:47:51,970
go in here put<font color="#CCCCCC"> that there and then</font><font color="#E5E5E5"> 1</font>

1205
00:47:51,970 --> 00:47:55,930
times<font color="#E5E5E5"> num2 and there that guy is and</font>

1206
00:47:55,930 --> 00:47:58,930
we'll<font color="#E5E5E5"> be able to come in and print this</font>

1207
00:47:58,930 --> 00:48:02,920
<font color="#E5E5E5">so let's just do 5 times 3 and</font><font color="#CCCCCC"> then call</font>

1208
00:48:02,920 --> 00:48:07,170
the function itself<font color="#CCCCCC"> multiplied and</font><font color="#E5E5E5"> 5</font>

1209
00:48:07,170 --> 00:48:10,560
and three<font color="#E5E5E5"> and that'll</font><font color="#CCCCCC"> work and we could</font>

1210
00:48:10,560 --> 00:48:12,990
<font color="#E5E5E5">also something else cool is we could</font>

1211
00:48:12,990 --> 00:48:15,630
calculate a factorial<font color="#E5E5E5"> with tail</font>

1212
00:48:15,630 --> 00:48:17,340
recursion<font color="#E5E5E5"> I'm just going to show you an</font>

1213
00:48:17,340 --> 00:48:19,020
<font color="#CCCCCC">example of this</font><font color="#E5E5E5"> I'm not going to get</font>

1214
00:48:19,020 --> 00:48:20,940
<font color="#E5E5E5">into recursion and how that works you</font>

1215
00:48:20,940 --> 00:48:22,320
probably understand it if you don't

1216
00:48:22,320 --> 00:48:23,430
understand recursion just leave a

1217
00:48:23,430 --> 00:48:24,630
<font color="#E5E5E5">comment below and I'll give you an</font>

1218
00:48:24,630 --> 00:48:26,040
example<font color="#CCCCCC"> all right so I just wanted to</font>

1219
00:48:26,040 --> 00:48:28,230
cover this just to cover it<font color="#CCCCCC"> so</font><font color="#E5E5E5"> outside</font>

1220
00:48:28,230 --> 00:48:30,600
<font color="#CCCCCC">of here actually</font><font color="#E5E5E5"> I'm going to let's get</font>

1221
00:48:30,600 --> 00:48:32,880
rid of this guy right<font color="#CCCCCC"> there because</font><font color="#E5E5E5"> we</font>

1222
00:48:32,880 --> 00:48:35,940
already<font color="#E5E5E5"> covered that</font><font color="#CCCCCC"> and get some</font><font color="#E5E5E5"> let's</font>

1223
00:48:35,940 --> 00:48:38,430
<font color="#CCCCCC">just get rid</font><font color="#E5E5E5"> of it</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so what I'm</font>

1224
00:48:38,430 --> 00:48:41,100
going<font color="#CCCCCC"> to do is when we go</font><font color="#E5E5E5"> fun and I'm</font>

1225
00:48:41,100 --> 00:48:42,750
going to calculate a factorial<font color="#E5E5E5"> using</font>

1226
00:48:42,750 --> 00:48:47,340
<font color="#E5E5E5">tail recursion so factorial X</font><font color="#CCCCCC"> : oops</font>

1227
00:48:47,340 --> 00:48:50,130
integer and I'm guessing you guys<font color="#E5E5E5"> have</font>

1228
00:48:50,130 --> 00:48:52,680
seen me<font color="#CCCCCC"> cover recursion a million times</font>

1229
00:48:52,680 --> 00:48:54,780
<font color="#E5E5E5">so it's just not going to talk about</font><font color="#CCCCCC"> it</font>

1230
00:48:54,780 --> 00:48:56,160
<font color="#CCCCCC">right now</font><font color="#E5E5E5"> like I said if you guys let me</font>

1231
00:48:56,160 --> 00:48:58,470
leave<font color="#CCCCCC"> it for</font><font color="#E5E5E5"> comment in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> pen I'll</font>

1232
00:48:58,470 --> 00:48:59,850
give<font color="#E5E5E5"> you an example</font>

1233
00:48:59,850 --> 00:49:01,620
<font color="#E5E5E5">so I'm going</font><font color="#CCCCCC"> to go tail recursion fun</font>

1234
00:49:01,620 --> 00:49:05,670
fact call this fact<font color="#E5E5E5"> tail and it's going</font>

1235
00:49:05,670 --> 00:49:08,870
<font color="#E5E5E5">to Y which is going to be an integer and</font>

1236
00:49:08,870 --> 00:49:12,720
<font color="#E5E5E5">Z which</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be another integer</font>

1237
00:49:12,720 --> 00:49:15,750
and it's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> return</font><font color="#CCCCCC"> an integer and</font>

1238
00:49:15,750 --> 00:49:17,340
this is just a<font color="#E5E5E5"> function that calls</font>

1239
00:49:17,340 --> 00:49:19,860
itself until<font color="#CCCCCC"> it ends and anytime you</font>

1240
00:49:19,860 --> 00:49:21,750
<font color="#E5E5E5">have a situation in which you're doing</font>

1241
00:49:21,750 --> 00:49:23,880
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to have an exit scenario</font>

1242
00:49:23,880 --> 00:49:25,470
so we're going to<font color="#E5E5E5"> have our exit scenario</font>

1243
00:49:25,470 --> 00:49:28,230
<font color="#CCCCCC">be whenever</font><font color="#E5E5E5"> Y is equal to</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> in that</font>

1244
00:49:28,230 --> 00:49:30,330
situation we're<font color="#E5E5E5"> going to turn return Z</font>

1245
00:49:30,330 --> 00:49:33,660
otherwise<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> continue</font>

1246
00:49:33,660 --> 00:49:35,820
having<font color="#E5E5E5"> our function call itself so we'll</font>

1247
00:49:35,820 --> 00:49:40,740
say return<font color="#E5E5E5"> and we'll call factorial tail</font>

1248
00:49:40,740 --> 00:49:47,460
and we'll go to y -1 and<font color="#E5E5E5"> Y times 2 or</font><font color="#CCCCCC"> Y</font>

1249
00:49:47,460 --> 00:49:50,730
times<font color="#E5E5E5"> Z and I guess I guess I should</font>

1250
00:49:50,730 --> 00:49:53,430
talk<font color="#CCCCCC"> about what exactly a factorial is a</font>

1251
00:49:53,430 --> 00:49:55,110
factorial<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just five let's</font><font color="#E5E5E5"> say you</font>

1252
00:49:55,110 --> 00:49:57,810
have factorial<font color="#E5E5E5"> 5 you would go 5 times 4</font>

1253
00:49:57,810 --> 00:50:00,930
times<font color="#CCCCCC"> 3 times 2</font><font color="#E5E5E5"> times 1</font>

1254
00:50:00,930 --> 00:50:02,730
<font color="#CCCCCC">ok that's</font><font color="#E5E5E5"> the factorial so that's what</font>

1255
00:50:02,730 --> 00:50:04,410
I'm<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> just decrementing that</font>

1256
00:50:04,410 --> 00:50:07,020
<font color="#E5E5E5">and then after this after it finishes</font>

1257
00:50:07,020 --> 00:50:09,980
all this stuff<font color="#CCCCCC"> we will</font><font color="#E5E5E5"> go and return</font>

1258
00:50:09,980 --> 00:50:16,320
factorial tail and<font color="#CCCCCC"> x + 1 so</font><font color="#E5E5E5"> to save that</font>

1259
00:50:16,320 --> 00:50:18,150
then we can<font color="#E5E5E5"> jump up inside</font><font color="#CCCCCC"> of here and</font>

1260
00:50:18,150 --> 00:50:19,860
show<font color="#CCCCCC"> you what that looks like whenever</font>

1261
00:50:19,860 --> 00:50:20,470
we<font color="#E5E5E5"> exit</font>

1262
00:50:20,470 --> 00:50:23,710
<font color="#E5E5E5">- tits</font><font color="#CCCCCC"> so we'll go print line and we</font>

1263
00:50:23,710 --> 00:50:26,109
<font color="#E5E5E5">will do factorial 5 just because that's</font>

1264
00:50:26,109 --> 00:50:29,080
<font color="#CCCCCC">their so that's the factorial symbol</font><font color="#E5E5E5"> and</font>

1265
00:50:29,080 --> 00:50:32,800
we will go<font color="#E5E5E5"> fact and inside here throw in</font>

1266
00:50:32,800 --> 00:50:36,160
<font color="#E5E5E5">the value of 5 so we'll save it and run</font>

1267
00:50:36,160 --> 00:50:38,650
<font color="#CCCCCC">it and you'll see that the factorial of</font>

1268
00:50:38,650 --> 00:50:41,410
5 is equal<font color="#E5E5E5"> to 120</font><font color="#CCCCCC"> all right so neat</font>

1269
00:50:41,410 --> 00:50:43,420
stuff<font color="#CCCCCC"> and more and more</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> more stuff</font>

1270
00:50:43,420 --> 00:50:44,859
with functions<font color="#CCCCCC"> is coming</font><font color="#E5E5E5"> now I want</font><font color="#CCCCCC"> to</font>

1271
00:50:44,859 --> 00:50:47,260
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> higher</font><font color="#CCCCCC"> order functions okay</font>

1272
00:50:47,260 --> 00:50:50,020
so a higher order<font color="#E5E5E5"> function</font><font color="#CCCCCC"> is just going</font>

1273
00:50:50,020 --> 00:50:51,940
<font color="#E5E5E5">to be a function it either accepts or</font>

1274
00:50:51,940 --> 00:50:54,609
returns another function so let's just

1275
00:50:54,609 --> 00:50:56,080
go and<font color="#E5E5E5"> create a whole bunch</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> examples</font>

1276
00:50:56,080 --> 00:50:58,900
<font color="#CCCCCC">here</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> that all make sense so what I</font>

1277
00:50:58,900 --> 00:51:01,900
want to<font color="#E5E5E5"> do here</font><font color="#CCCCCC"> is I want to</font><font color="#E5E5E5"> use a</font>

1278
00:51:01,900 --> 00:51:04,359
filter<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be a collection</font>

1279
00:51:04,359 --> 00:51:06,820
operator<font color="#E5E5E5"> to find even values in a range</font>

1280
00:51:06,820 --> 00:51:09,130
<font color="#E5E5E5">and I'm going to do a whole bunch of the</font>

1281
00:51:09,130 --> 00:51:10,570
<font color="#E5E5E5">different collection operators because I</font>

1282
00:51:10,570 --> 00:51:12,700
really need<font color="#E5E5E5"> so I'm going to go numb list</font>

1283
00:51:12,700 --> 00:51:17,470
<font color="#E5E5E5">and define a range from 1 to 20</font><font color="#CCCCCC"> and I</font>

1284
00:51:17,470 --> 00:51:19,840
want<font color="#E5E5E5"> to use filter on this to just find</font>

1285
00:51:19,840 --> 00:51:22,540
my evens<font color="#E5E5E5"> so what I'm</font><font color="#CCCCCC"> going to do is go</font>

1286
00:51:22,540 --> 00:51:28,300
<font color="#CCCCCC">bow and even list is</font><font color="#E5E5E5"> equal to and</font><font color="#CCCCCC"> we'll</font>

1287
00:51:28,300 --> 00:51:32,080
go numb list<font color="#E5E5E5"> and follow that up</font><font color="#CCCCCC"> with a</font>

1288
00:51:32,080 --> 00:51:36,130
<font color="#E5E5E5">filter and I can put</font><font color="#CCCCCC"> IT inside here</font>

1289
00:51:36,130 --> 00:51:38,200
<font color="#CCCCCC">basically how the way this works</font><font color="#E5E5E5"> is that</font>

1290
00:51:38,200 --> 00:51:40,810
<font color="#CCCCCC">if a</font><font color="#E5E5E5"> function has only one parameter you</font>

1291
00:51:40,810 --> 00:51:43,150
don't have to declare<font color="#E5E5E5"> it but you just</font>

1292
00:51:43,150 --> 00:51:46,450
use<font color="#E5E5E5"> I T instead and it'll just</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> so</font>

1293
00:51:46,450 --> 00:51:48,190
here<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is going to represent each of</font>

1294
00:51:48,190 --> 00:51:50,740
<font color="#E5E5E5">these individual values in the range</font><font color="#CCCCCC"> I'm</font>

1295
00:51:50,740 --> 00:51:55,900
going to go<font color="#CCCCCC"> i t2 is equal</font><font color="#E5E5E5"> to 0 and cycle</font>

1296
00:51:55,900 --> 00:51:59,410
<font color="#E5E5E5">that guy off and then</font><font color="#CCCCCC"> I can go even</font><font color="#E5E5E5"> list</font>

1297
00:51:59,410 --> 00:52:03,910
<font color="#E5E5E5">and then for</font><font color="#CCCCCC"> each and then define that</font><font color="#E5E5E5"> I</font>

1298
00:52:03,910 --> 00:52:06,400
want to print<font color="#E5E5E5"> out</font><font color="#CCCCCC"> all of those values</font><font color="#E5E5E5"> so</font>

1299
00:52:06,400 --> 00:52:10,119
we can go<font color="#E5E5E5"> n and print them so print line</font>

1300
00:52:10,119 --> 00:52:13,240
and<font color="#E5E5E5"> n so that's going</font><font color="#CCCCCC"> to cycle through</font>

1301
00:52:13,240 --> 00:52:14,859
and print all of<font color="#CCCCCC"> those different guys</font>

1302
00:52:14,859 --> 00:52:17,410
all those even values<font color="#E5E5E5"> and we can run it</font>

1303
00:52:17,410 --> 00:52:19,359
and see<font color="#E5E5E5"> that</font><font color="#CCCCCC"> anyway worked</font>

1304
00:52:19,359 --> 00:52:21,400
<font color="#CCCCCC">all right so neat stuff alright</font><font color="#E5E5E5"> so now I</font>

1305
00:52:21,400 --> 00:52:22,619
<font color="#E5E5E5">would do something a little bit</font><font color="#CCCCCC"> more</font>

1306
00:52:22,619 --> 00:52:25,390
complex<font color="#CCCCCC"> I want to call a function that</font>

1307
00:52:25,390 --> 00:52:29,530
<font color="#CCCCCC">is going</font><font color="#E5E5E5"> to return dynamically a created</font>

1308
00:52:29,530 --> 00:52:32,890
function<font color="#E5E5E5"> so outside of here I'm going to</font>

1309
00:52:32,890 --> 00:52:34,240
call this guy

1310
00:52:34,240 --> 00:52:35,320
<font color="#E5E5E5">basically what this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to return</font>

1311
00:52:35,320 --> 00:52:37,960
<font color="#E5E5E5">to do is return a custom function</font><font color="#CCCCCC"> that's</font>

1312
00:52:37,960 --> 00:52:39,970
<font color="#CCCCCC">going to multiply values times the value</font>

1313
00:52:39,970 --> 00:52:41,650
<font color="#CCCCCC">that's passed</font><font color="#E5E5E5"> in so I'm going to go</font>

1314
00:52:41,650 --> 00:52:44,830
function<font color="#E5E5E5"> and I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> call this make</font>

1315
00:52:44,830 --> 00:52:48,190
math function<font color="#E5E5E5"> it's going to receive a</font>

1316
00:52:48,190 --> 00:52:51,640
num<font color="#E5E5E5"> and it's going to be an integer and</font>

1317
00:52:51,640 --> 00:52:55,450
<font color="#E5E5E5">then</font><font color="#CCCCCC"> it is going</font><font color="#E5E5E5"> to return a function</font>

1318
00:52:55,450 --> 00:52:57,250
that<font color="#E5E5E5"> is going to multiply values times</font>

1319
00:52:57,250 --> 00:53:00,820
then I'm<font color="#CCCCCC"> 1 so what I do is I define</font><font color="#E5E5E5"> that</font>

1320
00:53:00,820 --> 00:53:03,430
<font color="#E5E5E5">this guy this function</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is going to</font>

1321
00:53:03,430 --> 00:53:05,440
be returned<font color="#E5E5E5"> is going to receive an</font>

1322
00:53:05,440 --> 00:53:07,420
integer and<font color="#E5E5E5"> then what it's going to do</font>

1323
00:53:07,420 --> 00:53:11,410
is<font color="#CCCCCC"> return an integer and</font><font color="#E5E5E5"> then I define</font>

1324
00:53:11,410 --> 00:53:13,180
exactly what<font color="#E5E5E5"> I want it to do so I'm</font>

1325
00:53:13,180 --> 00:53:16,510
<font color="#E5E5E5">going to go num2 is like this and then</font>

1326
00:53:16,510 --> 00:53:20,650
we're<font color="#E5E5E5"> going to go norm 1 times num2</font>

1327
00:53:20,650 --> 00:53:22,780
<font color="#CCCCCC">all right so it is</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> function that</font>

1328
00:53:22,780 --> 00:53:25,690
<font color="#E5E5E5">generates functions pretty cool all</font>

1329
00:53:25,690 --> 00:53:27,490
<font color="#E5E5E5">right so let's go and run it so I'm</font>

1330
00:53:27,490 --> 00:53:30,340
going<font color="#CCCCCC"> to go Val and let's say I want to</font>

1331
00:53:30,340 --> 00:53:32,410
<font color="#E5E5E5">create a function that multiplies values</font>

1332
00:53:32,410 --> 00:53:35,970
times 3<font color="#E5E5E5"> well</font><font color="#CCCCCC"> I just</font><font color="#E5E5E5"> call my make math</font>

1333
00:53:35,970 --> 00:53:40,390
function and inside<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this guy</font><font color="#CCCCCC"> passed</font>

1334
00:53:40,390 --> 00:53:42,250
the value of 3<font color="#E5E5E5"> and that's going to get</font>

1335
00:53:42,250 --> 00:53:43,480
<font color="#E5E5E5">that inside</font><font color="#CCCCCC"> of there and it's going to</font>

1336
00:53:43,480 --> 00:53:46,510
<font color="#E5E5E5">create this custom function for me so of</font>

1337
00:53:46,510 --> 00:53:48,850
course<font color="#E5E5E5"> I have to make this</font><font color="#CCCCCC"> B equals to</font>

1338
00:53:48,850 --> 00:53:51,250
<font color="#CCCCCC">come down side here and then we can test</font>

1339
00:53:51,250 --> 00:53:54,400
it<font color="#CCCCCC"> to show that it indeed works fine so</font>

1340
00:53:54,400 --> 00:54:00,369
<font color="#CCCCCC">I'm gonna go</font><font color="#E5E5E5"> 5 times 3 is whoops times 3</font>

1341
00:54:00,369 --> 00:54:04,060
is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be equal to and I can have</font>

1342
00:54:04,060 --> 00:54:07,690
this<font color="#E5E5E5"> be multiplied 3 times 5 and run it</font>

1343
00:54:07,690 --> 00:54:09,460
<font color="#E5E5E5">and you're going</font><font color="#CCCCCC"> to say that 15 comes</font>

1344
00:54:09,460 --> 00:54:11,619
back<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so that's a function that</font>

1345
00:54:11,619 --> 00:54:14,140
creates<font color="#E5E5E5"> functions now we're going</font><font color="#CCCCCC"> to</font>

1346
00:54:14,140 --> 00:54:16,960
create a<font color="#E5E5E5"> nother one and what this is</font>

1347
00:54:16,960 --> 00:54:18,310
going to<font color="#E5E5E5"> do is it's going</font><font color="#CCCCCC"> to receive a</font>

1348
00:54:18,310 --> 00:54:21,790
list<font color="#E5E5E5"> and a function to use on the list</font>

1349
00:54:21,790 --> 00:54:24,430
<font color="#E5E5E5">so I'm going to go fun</font><font color="#CCCCCC"> I'm going to call</font>

1350
00:54:24,430 --> 00:54:30,760
this math on<font color="#E5E5E5"> list num list</font><font color="#CCCCCC"> and it's</font>

1351
00:54:30,760 --> 00:54:33,760
going<font color="#CCCCCC"> to receive an array and more</font>

1352
00:54:33,760 --> 00:54:36,970
specifically an integer array<font color="#E5E5E5"> and it's</font>

1353
00:54:36,970 --> 00:54:39,970
also going to<font color="#CCCCCC"> receive a function so this</font>

1354
00:54:39,970 --> 00:54:42,609
<font color="#E5E5E5">is going to pass a function inside</font><font color="#CCCCCC"> of a</font>

1355
00:54:42,609 --> 00:54:45,670
function<font color="#CCCCCC"> num and this is going to be an</font>

1356
00:54:45,670 --> 00:54:46,980
integer

1357
00:54:46,980 --> 00:54:49,170
and we're defining what it does and this

1358
00:54:49,170 --> 00:54:51,750
<font color="#E5E5E5">function is</font><font color="#CCCCCC"> going to return an integer</font>

1359
00:54:51,750 --> 00:54:55,880
<font color="#E5E5E5">and then what I can</font><font color="#CCCCCC"> do is go for</font><font color="#E5E5E5"> Nam in</font>

1360
00:54:55,880 --> 00:54:59,280
Nam<font color="#CCCCCC"> lists</font><font color="#E5E5E5"> for each of those values</font>

1361
00:54:59,280 --> 00:55:01,920
<font color="#E5E5E5">passed inside of there</font><font color="#CCCCCC"> I am going to</font>

1362
00:55:01,920 --> 00:55:04,470
<font color="#E5E5E5">print out some information</font><font color="#CCCCCC"> and for this</font>

1363
00:55:04,470 --> 00:55:09,330
one I am<font color="#CCCCCC"> going to say</font><font color="#E5E5E5"> math on list</font><font color="#CCCCCC"> just</font>

1364
00:55:09,330 --> 00:55:10,920
<font color="#E5E5E5">so you can see what's</font><font color="#CCCCCC"> going on there and</font>

1365
00:55:10,920 --> 00:55:13,980
then I can<font color="#CCCCCC"> refer to any function that is</font>

1366
00:55:13,980 --> 00:55:16,130
passed inside of there as<font color="#E5E5E5"> my funk and</font>

1367
00:55:16,130 --> 00:55:20,130
numb on each of those items<font color="#E5E5E5"> come back up</font>

1368
00:55:20,130 --> 00:55:22,680
inside<font color="#CCCCCC"> of</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and call it so I'm going</font>

1369
00:55:22,680 --> 00:55:27,690
to go value<font color="#CCCCCC"> multiplied to is equal</font><font color="#E5E5E5"> to</font>

1370
00:55:27,690 --> 00:55:33,869
and I can go numb<font color="#E5E5E5"> one integer and then I</font>

1371
00:55:33,869 --> 00:55:39,240
can go<font color="#E5E5E5"> numb</font><font color="#CCCCCC"> one times two</font><font color="#E5E5E5"> so there is</font>

1372
00:55:39,240 --> 00:55:41,670
our function<font color="#CCCCCC"> let's call this number one</font>

1373
00:55:41,670 --> 00:55:43,590
<font color="#E5E5E5">there we are</font><font color="#CCCCCC"> and then I'm going</font><font color="#E5E5E5"> to go</font>

1374
00:55:43,590 --> 00:55:49,850
<font color="#CCCCCC">Val</font><font color="#E5E5E5"> num list 2 is equal to array of</font>

1375
00:55:49,850 --> 00:55:53,190
let's go create<font color="#E5E5E5"> and write</font><font color="#CCCCCC"> four and</font><font color="#E5E5E5"> five</font>

1376
00:55:53,190 --> 00:55:56,250
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then I'm going</font><font color="#E5E5E5"> to pass in both the</font>

1377
00:55:56,250 --> 00:55:59,730
array as well as the function I want<font color="#E5E5E5"> to</font>

1378
00:55:59,730 --> 00:56:03,600
operate on there<font color="#E5E5E5"> so a math on list and</font>

1379
00:56:03,600 --> 00:56:08,930
we go numb<font color="#E5E5E5"> list 2 and then multiply</font><font color="#CCCCCC"> 2</font>

1380
00:56:08,930 --> 00:56:14,130
and we<font color="#E5E5E5"> can run it and up that I do</font><font color="#CCCCCC"> I</font>

1381
00:56:14,130 --> 00:56:17,369
didn't type in math on<font color="#E5E5E5"> list that's okay</font>

1382
00:56:17,369 --> 00:56:20,850
math on<font color="#E5E5E5"> list that we are and run it and</font>

1383
00:56:20,850 --> 00:56:22,260
it<font color="#CCCCCC"> gave me another error</font>

1384
00:56:22,260 --> 00:56:25,340
<font color="#E5E5E5">15 what's that air does it either that I</font>

1385
00:56:25,340 --> 00:56:28,260
didn't<font color="#E5E5E5"> make that</font><font color="#CCCCCC"> uppercase</font><font color="#E5E5E5"> I fixed it</font>

1386
00:56:28,260 --> 00:56:30,420
now didn't I yes<font color="#E5E5E5"> I</font><font color="#CCCCCC"> did let's run it</font>

1387
00:56:30,420 --> 00:56:32,520
again<font color="#E5E5E5"> and you could</font><font color="#CCCCCC"> see that it went and</font>

1388
00:56:32,520 --> 00:56:34,980
multiplied two times<font color="#E5E5E5"> each of those</font>

1389
00:56:34,980 --> 00:56:37,140
<font color="#E5E5E5">values in</font><font color="#CCCCCC"> the array all right so pretty</font>

1390
00:56:37,140 --> 00:56:38,790
<font color="#E5E5E5">cool stuff</font><font color="#CCCCCC"> in regards to higher-order</font>

1391
00:56:38,790 --> 00:56:40,740
<font color="#E5E5E5">functions now I want</font><font color="#CCCCCC"> to show you some</font>

1392
00:56:40,740 --> 00:56:43,980
collection operators<font color="#CCCCCC"> all right so these</font>

1393
00:56:43,980 --> 00:56:46,230
collection operators are going to work

1394
00:56:46,230 --> 00:56:49,020
on any<font color="#E5E5E5"> type of collection so</font><font color="#CCCCCC"> rays and</font>

1395
00:56:49,020 --> 00:56:50,400
you're going<font color="#CCCCCC"> to see I'm going to cover</font>

1396
00:56:50,400 --> 00:56:52,410
lists and maps<font color="#E5E5E5"> and there's a couple</font>

1397
00:56:52,410 --> 00:56:54,780
other<font color="#E5E5E5"> different collections but either</font>

1398
00:56:54,780 --> 00:56:57,090
way so let's say we wanted to<font color="#E5E5E5"> sum all</font>

1399
00:56:57,090 --> 00:57:00,210
<font color="#E5E5E5">the values</font><font color="#CCCCCC"> in a list</font><font color="#E5E5E5"> we go Val</font>

1400
00:57:00,210 --> 00:57:03,809
and<font color="#CCCCCC"> list sum is going to</font><font color="#E5E5E5"> be equal to</font>

1401
00:57:03,809 --> 00:57:07,829
<font color="#E5E5E5">number list</font><font color="#CCCCCC"> 2 which is what I have right</font>

1402
00:57:07,829 --> 00:57:11,460
there and I can<font color="#E5E5E5"> call reduce to do just</font>

1403
00:57:11,460 --> 00:57:12,000
that

1404
00:57:12,000 --> 00:57:14,190
and what I need<font color="#CCCCCC"> to do with reduce is go</font>

1405
00:57:14,190 --> 00:57:18,750
<font color="#E5E5E5">x and</font><font color="#CCCCCC"> y and say that</font><font color="#E5E5E5"> I want to sum those</font>

1406
00:57:18,750 --> 00:57:21,150
values together<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> form all</font><font color="#CCCCCC"> sorts</font>

1407
00:57:21,150 --> 00:57:23,700
<font color="#E5E5E5">of other different operations the fold</font>

1408
00:57:23,700 --> 00:57:26,099
is kind of like reduce but it starts

1409
00:57:26,099 --> 00:57:29,730
with<font color="#CCCCCC"> a initial value</font><font color="#E5E5E5"> so I can come in</font>

1410
00:57:29,730 --> 00:57:34,200
and<font color="#E5E5E5"> grab this guy like that and I can do</font>

1411
00:57:34,200 --> 00:57:37,530
<font color="#E5E5E5">hmm</font><font color="#CCCCCC"> well let's</font><font color="#E5E5E5"> also come in and print</font>

1412
00:57:37,530 --> 00:57:40,530
this out<font color="#E5E5E5"> so what did I do</font>

1413
00:57:40,530 --> 00:57:46,319
let's go front line and reduce<font color="#E5E5E5"> some and</font>

1414
00:57:46,319 --> 00:57:49,589
then print<font color="#E5E5E5"> out that list so we're going</font>

1415
00:57:49,589 --> 00:57:53,369
to<font color="#E5E5E5"> go list some and I'm going to do the</font>

1416
00:57:53,369 --> 00:57:55,559
same thing with this<font color="#E5E5E5"> guy so</font><font color="#CCCCCC"> you can see</font>

1417
00:57:55,559 --> 00:57:58,650
the difference between reduce as well as

1418
00:57:58,650 --> 00:58:01,440
fold<font color="#E5E5E5"> so with fold what you're going to</font>

1419
00:58:01,440 --> 00:58:04,799
do<font color="#E5E5E5"> change us to list some to change this</font>

1420
00:58:04,799 --> 00:58:08,549
to fold and fold is<font color="#CCCCCC"> going to start off</font>

1421
00:58:08,549 --> 00:58:11,040
<font color="#E5E5E5">with an</font><font color="#CCCCCC"> initial value of</font><font color="#E5E5E5"> 5 and then it</font>

1422
00:58:11,040 --> 00:58:12,690
is going<font color="#E5E5E5"> to continue adding all the</font>

1423
00:58:12,690 --> 00:58:14,819
other<font color="#E5E5E5"> values in the list to it so let's</font>

1424
00:58:14,819 --> 00:58:17,010
<font color="#CCCCCC">change that to</font><font color="#E5E5E5"> that and let's change</font>

1425
00:58:17,010 --> 00:58:20,579
this to<font color="#E5E5E5"> fold some so fold some</font><font color="#CCCCCC"> and you</font>

1426
00:58:20,579 --> 00:58:22,349
can run it<font color="#E5E5E5"> and you can see that it</font><font color="#CCCCCC"> is</font>

1427
00:58:22,349 --> 00:58:24,540
indeed<font color="#E5E5E5"> summing all of those values and</font>

1428
00:58:24,540 --> 00:58:26,309
difference between<font color="#CCCCCC"> it is to 10 and</font><font color="#E5E5E5"> to 15</font>

1429
00:58:26,309 --> 00:58:28,260
see see that<font color="#CCCCCC"> reducing</font><font color="#E5E5E5"> fold</font><font color="#CCCCCC"> are very</font><font color="#E5E5E5"> very</font>

1430
00:58:28,260 --> 00:58:30,119
<font color="#E5E5E5">similar</font><font color="#CCCCCC"> to each other</font><font color="#E5E5E5"> we can come in and</font>

1431
00:58:30,119 --> 00:58:33,210
check if any values are able<font color="#CCCCCC"> to meet a</font>

1432
00:58:33,210 --> 00:58:35,160
condition<font color="#E5E5E5"> so let's say we wanted to do</font>

1433
00:58:35,160 --> 00:58:37,950
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like evens</font><font color="#E5E5E5"> and we wanted to</font>

1434
00:58:37,950 --> 00:58:41,190
<font color="#E5E5E5">check if any of these values</font><font color="#CCCCCC"> is even</font>

1435
00:58:41,190 --> 00:58:45,210
well they can go numb<font color="#E5E5E5"> list 2 followed by</font>

1436
00:58:45,210 --> 00:58:48,270
<font color="#CCCCCC">an e and then have your condition to be</font>

1437
00:58:48,270 --> 00:58:49,859
inside<font color="#CCCCCC"> of there</font><font color="#E5E5E5"> and we're going</font><font color="#CCCCCC"> to be</font>

1438
00:58:49,859 --> 00:58:53,160
able<font color="#E5E5E5"> to use I T once again and</font><font color="#CCCCCC"> 2 is</font>

1439
00:58:53,160 --> 00:58:55,920
equal<font color="#E5E5E5"> to 0 and you're going to be able</font>

1440
00:58:55,920 --> 00:58:58,619
<font color="#E5E5E5">to get your answer from that guy</font><font color="#CCCCCC"> let's</font>

1441
00:58:58,619 --> 00:59:00,780
do a couple<font color="#E5E5E5"> more</font><font color="#CCCCCC"> of these you're like</font>

1442
00:59:00,780 --> 00:59:03,510
<font color="#CCCCCC">wise well there's another one that is</font>

1443
00:59:03,510 --> 00:59:06,240
all<font color="#E5E5E5"> so in that situation</font><font color="#CCCCCC"> the only</font>

1444
00:59:06,240 --> 00:59:09,960
<font color="#E5E5E5">difference is is all of them are going</font>

1445
00:59:09,960 --> 00:59:12,630
<font color="#E5E5E5">to have to be even</font><font color="#CCCCCC"> to come back as true</font>

1446
00:59:12,630 --> 00:59:15,150
in<font color="#E5E5E5"> that situation you could also come in</font>

1447
00:59:15,150 --> 00:59:17,430
here and return<font color="#E5E5E5"> a list of</font><font color="#CCCCCC"> values that</font>

1448
00:59:17,430 --> 00:59:19,890
<font color="#E5E5E5">again meet a certain condition so let's</font>

1449
00:59:19,890 --> 00:59:24,859
say we say Val big<font color="#CCCCCC"> 3 is equal to</font><font color="#E5E5E5"> num</font>

1450
00:59:24,859 --> 00:59:30,569
list<font color="#E5E5E5"> 2 and use filter for that</font><font color="#CCCCCC"> and here</font>

1451
00:59:30,569 --> 00:59:32,760
I'm just going<font color="#CCCCCC"> to find my condition cell</font>

1452
00:59:32,760 --> 00:59:35,670
greater<font color="#E5E5E5"> than 3 and those are going to</font><font color="#CCCCCC"> be</font>

1453
00:59:35,670 --> 00:59:37,230
the ones<font color="#CCCCCC"> that end up going inside</font><font color="#E5E5E5"> of</font>

1454
00:59:37,230 --> 00:59:39,329
<font color="#CCCCCC">that and let's go and</font><font color="#E5E5E5"> print those out we</font>

1455
00:59:39,329 --> 00:59:44,190
<font color="#CCCCCC">can go big</font><font color="#E5E5E5"> 3.4 each and then let's go</font>

1456
00:59:44,190 --> 00:59:48,059
and print<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of them out put and print</font>

1457
00:59:48,059 --> 00:59:50,339
line and here I'll<font color="#CCCCCC"> just put greater than</font>

1458
00:59:50,339 --> 00:59:53,339
3 you'll know what that<font color="#E5E5E5"> means and print</font>

1459
00:59:53,339 --> 00:59:55,049
all those<font color="#E5E5E5"> values out let's run it see</font>

1460
00:59:55,049 --> 00:59:56,549
what it<font color="#E5E5E5"> looks like and there you can</font><font color="#CCCCCC"> see</font>

1461
00:59:56,549 --> 00:59:58,349
all those<font color="#E5E5E5"> values</font><font color="#CCCCCC"> come out and true and</font>

1462
00:59:58,349 --> 01:00:00,690
false show up right there and for<font color="#E5E5E5"> our</font>

1463
01:00:00,690 --> 01:00:03,390
final<font color="#CCCCCC"> example I want to show you</font><font color="#E5E5E5"> map and</font>

1464
01:00:03,390 --> 01:00:05,730
basically<font color="#CCCCCC"> map is going to allow you to</font>

1465
01:00:05,730 --> 01:00:07,799
<font color="#CCCCCC">perform an action on every</font><font color="#E5E5E5"> single item</font>

1466
01:00:07,799 --> 01:00:11,069
<font color="#CCCCCC">and then return a new list</font><font color="#E5E5E5"> so here we go</font>

1467
01:00:11,069 --> 01:00:14,430
<font color="#CCCCCC">Wow times 7 so I'm going</font><font color="#E5E5E5"> to multiply</font>

1468
01:00:14,430 --> 01:00:16,980
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> times 7 and we're going to do</font>

1469
01:00:16,980 --> 01:00:20,460
that on our number list<font color="#E5E5E5"> to call map and</font>

1470
01:00:20,460 --> 01:00:23,130
then define exactly what<font color="#CCCCCC"> I want to occur</font>

1471
01:00:23,130 --> 01:00:24,510
in<font color="#E5E5E5"> that situation so I'm going to</font><font color="#CCCCCC"> take</font>

1472
01:00:24,510 --> 01:00:26,160
<font color="#CCCCCC">each of those items</font><font color="#E5E5E5"> and multiply them</font>

1473
01:00:26,160 --> 01:00:28,140
<font color="#E5E5E5">times 2 and save them</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> brand new</font>

1474
01:00:28,140 --> 01:00:31,440
list<font color="#E5E5E5"> and then we can say</font><font color="#CCCCCC"> times 7 dot for</font>

1475
01:00:31,440 --> 01:00:35,520
each<font color="#E5E5E5"> and then print them all out so cool</font>

1476
01:00:35,520 --> 01:00:38,819
stuff<font color="#E5E5E5"> so</font><font color="#CCCCCC"> print line and then we</font><font color="#E5E5E5"> can go</font>

1477
01:00:38,819 --> 01:00:43,740
like this<font color="#CCCCCC"> and</font><font color="#E5E5E5"> times 7 and print that is</font>

1478
01:00:43,740 --> 01:00:45,780
all out<font color="#E5E5E5"> thinking</font><font color="#CCCCCC"> about that all right</font>

1479
01:00:45,780 --> 01:00:49,140
<font color="#CCCCCC">yes it did</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> run it and when we</font>

1480
01:00:49,140 --> 01:00:50,940
<font color="#CCCCCC">do you're going to</font><font color="#E5E5E5"> see every item print</font>

1481
01:00:50,940 --> 01:00:52,829
it out or multiply type<font color="#E5E5E5"> 7 prints out</font>

1482
01:00:52,829 --> 01:00:54,569
there<font color="#CCCCCC"> we</font><font color="#E5E5E5"> go there's a whole bunch of</font>

1483
01:00:54,569 --> 01:00:56,460
different collection operators that<font color="#E5E5E5"> are</font>

1484
01:00:56,460 --> 01:00:57,960
<font color="#E5E5E5">available to you and now I want to talk</font>

1485
01:00:57,960 --> 01:01:00,210
about exception handling<font color="#CCCCCC"> and you all</font>

1486
01:01:00,210 --> 01:01:01,680
<font color="#E5E5E5">know what exception handling is used for</font>

1487
01:01:01,680 --> 01:01:03,900
it's handled<font color="#E5E5E5"> or it allows</font><font color="#CCCCCC"> us to</font><font color="#E5E5E5"> handle</font>

1488
01:01:03,900 --> 01:01:05,880
<font color="#CCCCCC">errors so that the</font><font color="#E5E5E5"> programs do not crash</font>

1489
01:01:05,880 --> 01:01:08,599
<font color="#CCCCCC">so I'm going to</font><font color="#E5E5E5"> use the same type of</font>

1490
01:01:08,599 --> 01:01:10,799
example I<font color="#E5E5E5"> always use I'm going</font><font color="#CCCCCC"> to have a</font>

1491
01:01:10,799 --> 01:01:13,380
division<font color="#E5E5E5"> by 0 so I'm going to have my</font>

1492
01:01:13,380 --> 01:01:16,440
divisor<font color="#E5E5E5"> be equal to 2 in this situation</font>

1493
01:01:16,440 --> 01:01:18,359
and I'm going<font color="#E5E5E5"> to do a division which</font>

1494
01:01:18,359 --> 01:01:20,339
means there's a potential for division

1495
01:01:20,339 --> 01:01:22,740
by<font color="#E5E5E5"> 0 to occur inside of here I'm going</font>

1496
01:01:22,740 --> 01:01:23,360
to<font color="#E5E5E5"> say</font>

1497
01:01:23,360 --> 01:01:29,380
and the visor<font color="#E5E5E5"> is equal to zero in that</font>

1498
01:01:29,380 --> 01:01:32,320
<font color="#CCCCCC">situation</font><font color="#E5E5E5"> I want to throw an exception</font>

1499
01:01:32,320 --> 01:01:35,840
<font color="#CCCCCC">so I'm going to say a throw illegal</font>

1500
01:01:35,840 --> 01:01:39,650
argument exception<font color="#CCCCCC"> that is it and in</font>

1501
01:01:39,650 --> 01:01:44,990
this situation<font color="#CCCCCC"> we say can't divide by 0</font>

1502
01:01:44,990 --> 01:01:48,620
else if there was no problem<font color="#CCCCCC"> with that</font>

1503
01:01:48,620 --> 01:01:51,200
<font color="#E5E5E5">literally doing here there's a little</font>

1504
01:01:51,200 --> 01:01:52,760
<font color="#CCCCCC">problem here we get rid of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> empanada</font>

1505
01:01:52,760 --> 01:01:55,490
<font color="#CCCCCC">and throw</font><font color="#E5E5E5"> it out there</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

1506
01:01:55,490 --> 01:01:58,790
now everything's<font color="#CCCCCC"> ok else if that wasn't</font>

1507
01:01:58,790 --> 01:02:01,700
a good<font color="#CCCCCC"> one we can come in and</font><font color="#E5E5E5"> we can say</font>

1508
01:02:01,700 --> 01:02:04,100
get rid of that and we<font color="#E5E5E5"> can say something</font>

1509
01:02:04,100 --> 01:02:07,760
<font color="#CCCCCC">like 5 divided by and let's put our</font>

1510
01:02:07,760 --> 01:02:11,630
divisor<font color="#E5E5E5"> inside of there is equal to and</font>

1511
01:02:11,630 --> 01:02:15,020
we<font color="#CCCCCC"> will do our</font><font color="#E5E5E5"> division inside here so 5</font>

1512
01:02:15,020 --> 01:02:18,140
divided<font color="#CCCCCC"> by divisor</font><font color="#E5E5E5"> okay so everything's</font>

1513
01:02:18,140 --> 01:02:21,140
fine<font color="#CCCCCC"> now anytime we have a try block we</font>

1514
01:02:21,140 --> 01:02:24,400
are going to try to catch our error and

1515
01:02:24,400 --> 01:02:27,980
in<font color="#E5E5E5"> this situation when you go E oops</font>

1516
01:02:27,980 --> 01:02:31,250
<font color="#CCCCCC">e and</font><font color="#E5E5E5"> we are going to follow that</font><font color="#CCCCCC"> up</font>

1517
01:02:31,250 --> 01:02:36,200
with illegal argument exception<font color="#CCCCCC"> of</font>

1518
01:02:36,200 --> 01:02:38,120
course we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> catch the exact</font>

1519
01:02:38,120 --> 01:02:41,660
exception that<font color="#E5E5E5"> we sent and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> we are</font>

1520
01:02:41,660 --> 01:02:43,700
<font color="#E5E5E5">going to or if you'd like</font><font color="#CCCCCC"> to come in</font>

1521
01:02:43,700 --> 01:02:46,640
here and print out<font color="#E5E5E5"> the message</font><font color="#CCCCCC"> that is</font>

1522
01:02:46,640 --> 01:02:49,030
tied to<font color="#CCCCCC"> that exception</font><font color="#E5E5E5"> you can go e dot</font>

1523
01:02:49,030 --> 01:02:52,220
message<font color="#E5E5E5"> exactly like that</font><font color="#CCCCCC"> and it will</font>

1524
01:02:52,220 --> 01:02:54,260
print that out and we can<font color="#E5E5E5"> run it and</font>

1525
01:02:54,260 --> 01:02:57,020
since divisors<font color="#CCCCCC"> -</font><font color="#E5E5E5"> we have no problem but</font>

1526
01:02:57,020 --> 01:02:58,130
<font color="#E5E5E5">if we come</font><font color="#CCCCCC"> up here and</font><font color="#E5E5E5"> change the</font>

1527
01:02:58,130 --> 01:03:00,260
divisor to<font color="#CCCCCC"> 0 and you're going</font><font color="#E5E5E5"> to say</font>

1528
01:03:00,260 --> 01:03:02,270
that it just<font color="#CCCCCC"> goes and prints can't</font>

1529
01:03:02,270 --> 01:03:03,170
divide<font color="#CCCCCC"> by</font><font color="#E5E5E5"> 0</font>

1530
01:03:03,170 --> 01:03:05,360
all<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so very very</font><font color="#E5E5E5"> very brief</font>

1531
01:03:05,360 --> 01:03:08,330
explanation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> how exception handling</font>

1532
01:03:08,330 --> 01:03:10,850
<font color="#CCCCCC">works inside of Kotlin but i think you</font>

1533
01:03:10,850 --> 01:03:12,290
can catch on with the rest<font color="#E5E5E5"> of it and now</font>

1534
01:03:12,290 --> 01:03:14,330
<font color="#CCCCCC">i want to talk about some collections</font>

1535
01:03:14,330 --> 01:03:16,340
and<font color="#CCCCCC"> i'm going to start</font><font color="#E5E5E5"> off with</font><font color="#CCCCCC"> lists</font>

1536
01:03:16,340 --> 01:03:19,520
<font color="#E5E5E5">now basically there are immutable lists</font>

1537
01:03:19,520 --> 01:03:22,850
<font color="#E5E5E5">and there are mutable water refer to as</font>

1538
01:03:22,850 --> 01:03:24,560
mutable<font color="#CCCCCC"> lists alright so what I'm</font><font color="#E5E5E5"> going</font>

1539
01:03:24,560 --> 01:03:26,450
to do here at first is I<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to create</font>

1540
01:03:26,450 --> 01:03:28,280
a mutable list and then I'm going<font color="#CCCCCC"> to</font>

1541
01:03:28,280 --> 01:03:31,460
<font color="#E5E5E5">create an immutable list so we'll go</font><font color="#CCCCCC"> var</font>

1542
01:03:31,460 --> 01:03:34,760
call this list<font color="#E5E5E5"> 1 and</font>

1543
01:03:34,760 --> 01:03:37,480
this is<font color="#E5E5E5"> immutable or a changeable list</font>

1544
01:03:37,480 --> 01:03:40,700
<font color="#E5E5E5">mutate change</font><font color="#CCCCCC"> get it alright so we're</font>

1545
01:03:40,700 --> 01:03:43,880
going to go int and then I can go<font color="#CCCCCC"> to</font>

1546
01:03:43,880 --> 01:03:48,620
populate<font color="#CCCCCC"> it I call mutable</font><font color="#E5E5E5"> list of and</font><font color="#CCCCCC"> 1</font>

1547
01:03:48,620 --> 01:03:51,860
<font color="#CCCCCC">2 3 4 & 5 and there you go I just</font>

1548
01:03:51,860 --> 01:03:54,800
<font color="#E5E5E5">created a mutable list</font><font color="#CCCCCC"> if instead you</font>

1549
01:03:54,800 --> 01:03:57,170
would like to create an immutable<font color="#E5E5E5"> or a</font>

1550
01:03:57,170 --> 01:03:59,750
list<font color="#CCCCCC"> that does not change</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font>

1551
01:03:59,750 --> 01:04:01,910
come in here change this<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Val instead</font>

1552
01:04:01,910 --> 01:04:04,340
<font color="#CCCCCC">of our and we're going</font><font color="#E5E5E5"> to change this to</font>

1553
01:04:04,340 --> 01:04:07,490
list 2 and then this is<font color="#E5E5E5"> going to just be</font>

1554
01:04:07,490 --> 01:04:09,800
changed to<font color="#E5E5E5"> a list so it's an integer</font>

1555
01:04:09,800 --> 01:04:11,600
list<font color="#E5E5E5"> and then we just come in here and</font>

1556
01:04:11,600 --> 01:04:14,720
<font color="#E5E5E5">change this to a list of and let's just</font>

1557
01:04:14,720 --> 01:04:17,750
copy or cut off that little<font color="#CCCCCC"> part okay so</font>

1558
01:04:17,750 --> 01:04:19,370
here is a mutable<font color="#CCCCCC"> or changeable list</font>

1559
01:04:19,370 --> 01:04:21,350
here is<font color="#CCCCCC"> any immutable or unchangeable</font>

1560
01:04:21,350 --> 01:04:23,150
list and<font color="#E5E5E5"> that's how we create those now</font>

1561
01:04:23,150 --> 01:04:24,440
I'm mainly<font color="#E5E5E5"> going to be working with</font><font color="#CCCCCC"> the</font>

1562
01:04:24,440 --> 01:04:26,060
mutable<font color="#E5E5E5"> list here let's say I want to</font>

1563
01:04:26,060 --> 01:04:29,270
<font color="#CCCCCC">add an item to a mutable list I go</font><font color="#E5E5E5"> list</font>

1564
01:04:29,270 --> 01:04:32,240
<font color="#E5E5E5">1 and add and we can throw anything</font>

1565
01:04:32,240 --> 01:04:34,250
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> of there</font><font color="#E5E5E5"> that's how we add values</font>

1566
01:04:34,250 --> 01:04:37,130
let's say I want to get our<font color="#E5E5E5"> first item</font>

1567
01:04:37,130 --> 01:04:39,890
<font color="#E5E5E5">don't want to do that let's go print</font>

1568
01:04:39,890 --> 01:04:44,630
line and I want to get our<font color="#E5E5E5"> first item</font>

1569
01:04:44,630 --> 01:04:48,350
out<font color="#CCCCCC"> of it I can do so and let's get this</font>

1570
01:04:48,350 --> 01:04:53,690
<font color="#E5E5E5">and list</font><font color="#CCCCCC"> 1 followed by first</font><font color="#E5E5E5"> there that</font>

1571
01:04:53,690 --> 01:04:55,460
is that's how to get that<font color="#CCCCCC"> that's the</font>

1572
01:04:55,460 --> 01:04:57,410
first item in the<font color="#CCCCCC"> list let's say I want</font>

1573
01:04:57,410 --> 01:05:00,170
to<font color="#E5E5E5"> get the last item in the</font><font color="#CCCCCC"> list</font><font color="#E5E5E5"> well</font>

1574
01:05:00,170 --> 01:05:03,050
guess what we type in last and like this

1575
01:05:03,050 --> 01:05:06,110
type in last like that and we<font color="#CCCCCC"> can do a</font>

1576
01:05:06,110 --> 01:05:07,490
<font color="#CCCCCC">whole bunch</font><font color="#E5E5E5"> other things let's</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> we</font>

1577
01:05:07,490 --> 01:05:10,010
want to<font color="#E5E5E5"> get a value at a specific index</font>

1578
01:05:10,010 --> 01:05:13,460
<font color="#CCCCCC">1 let's say we want it</font><font color="#E5E5E5"> to be the second</font>

1579
01:05:13,460 --> 01:05:17,690
index seconds and to do that we just<font color="#E5E5E5"> go</font>

1580
01:05:17,690 --> 01:05:20,960
to list 1 once again<font color="#CCCCCC"> and let's</font><font color="#E5E5E5"> just say</font>

1581
01:05:20,960 --> 01:05:23,150
that<font color="#CCCCCC"> change that to</font><font color="#E5E5E5"> 2 how that operates</font>

1582
01:05:23,150 --> 01:05:25,970
<font color="#CCCCCC">we can get a list starting from one</font>

1583
01:05:25,970 --> 01:05:28,190
index to another so we're going to

1584
01:05:28,190 --> 01:05:34,340
create<font color="#E5E5E5"> list 3 is equal</font><font color="#CCCCCC"> to list 1 and we</font>

1585
01:05:34,340 --> 01:05:38,900
call sub list<font color="#E5E5E5"> and go from 0</font><font color="#CCCCCC"> to 3 and</font>

1586
01:05:38,900 --> 01:05:40,760
<font color="#E5E5E5">that's going to create that that's how</font>

1587
01:05:40,760 --> 01:05:42,890
to get a sub list<font color="#E5E5E5"> we're also going to be</font>

1588
01:05:42,890 --> 01:05:46,040
able<font color="#E5E5E5"> to get the size of our</font>

1589
01:05:46,040 --> 01:05:48,800
<font color="#E5E5E5">test call this length and we need to</font>

1590
01:05:48,800 --> 01:05:51,280
call this list<font color="#CCCCCC"> 1 and</font><font color="#E5E5E5"> follow that up</font><font color="#CCCCCC"> with</font>

1591
01:05:51,280 --> 01:05:55,220
sighs yawns<font color="#E5E5E5"> of course we're going to</font><font color="#CCCCCC"> be</font>

1592
01:05:55,220 --> 01:05:58,040
able<font color="#CCCCCC"> to clear our list</font><font color="#E5E5E5"> so let's go list</font>

1593
01:05:58,040 --> 01:06:01,250
3 followed<font color="#CCCCCC"> by clear</font><font color="#E5E5E5"> it's going to get</font>

1594
01:06:01,250 --> 01:06:03,800
rid of<font color="#CCCCCC"> everything inside of the list we</font>

1595
01:06:03,800 --> 01:06:06,920
<font color="#E5E5E5">can remove a value so we'll go to list</font>

1596
01:06:06,920 --> 01:06:10,940
one followed by remove and let's say we

1597
01:06:10,940 --> 01:06:12,950
<font color="#E5E5E5">want to get rid of one we could also</font>

1598
01:06:12,950 --> 01:06:16,700
remove<font color="#E5E5E5"> at a specific index by saying</font>

1599
01:06:16,700 --> 01:06:21,200
<font color="#E5E5E5">remove at and changing that to one and</font>

1600
01:06:21,200 --> 01:06:24,110
we could add<font color="#E5E5E5"> a value add an index so</font>

1601
01:06:24,110 --> 01:06:26,150
it's<font color="#E5E5E5"> Co hist</font><font color="#CCCCCC"> one and let's say we</font><font color="#E5E5E5"> want</font>

1602
01:06:26,150 --> 01:06:28,670
<font color="#CCCCCC">it to be in the position of</font><font color="#E5E5E5"> two and what</font>

1603
01:06:28,670 --> 01:06:31,850
we want to add is<font color="#E5E5E5"> 10 and of course we</font>

1604
01:06:31,850 --> 01:06:34,550
can command and cycle<font color="#CCCCCC"> through</font><font color="#E5E5E5"> all of</font>

1605
01:06:34,550 --> 01:06:37,370
<font color="#E5E5E5">these items inside of</font><font color="#CCCCCC"> here by calling</font>

1606
01:06:37,370 --> 01:06:40,820
for each and then after that<font color="#E5E5E5"> let's get</font>

1607
01:06:40,820 --> 01:06:43,430
rid of this sort her after<font color="#E5E5E5"> that we can</font>

1608
01:06:43,430 --> 01:06:47,030
<font color="#E5E5E5">go in and what we want done to each of</font>

1609
01:06:47,030 --> 01:06:48,770
those items and<font color="#E5E5E5"> here I'm going to say</font>

1610
01:06:48,770 --> 01:06:53,240
print line and I'll go mutable list<font color="#E5E5E5"> and</font>

1611
01:06:53,240 --> 01:06:57,140
print out each of those items<font color="#E5E5E5"> everything</font>

1612
01:06:57,140 --> 01:07:00,020
looks<font color="#CCCCCC"> ok I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> so don't whoops I went</font>

1613
01:07:00,020 --> 01:07:01,730
<font color="#E5E5E5">and hit enter right</font><font color="#CCCCCC"> whenever I did that</font>

1614
01:07:01,730 --> 01:07:04,640
all right<font color="#E5E5E5"> on</font><font color="#CCCCCC"> to that save it</font><font color="#E5E5E5"> and run it</font>

1615
01:07:04,640 --> 01:07:09,590
<font color="#E5E5E5">that the oops what we do to the there is</font>

1616
01:07:09,590 --> 01:07:12,860
an error warning<font color="#E5E5E5"> 13 what's going on with</font>

1617
01:07:12,860 --> 01:07:15,530
13<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> list who's never used</font><font color="#CCCCCC"> that</font>

1618
01:07:15,530 --> 01:07:17,150
<font color="#E5E5E5">that's not</font><font color="#CCCCCC"> our main error let's get rid</font>

1619
01:07:17,150 --> 01:07:19,100
of that<font color="#E5E5E5"> so just for the heck of it</font><font color="#CCCCCC"> look</font>

1620
01:07:19,100 --> 01:07:21,920
<font color="#CCCCCC">over</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and what do we have we have</font><font color="#E5E5E5"> an</font>

1621
01:07:21,920 --> 01:07:24,740
error on line 32<font color="#E5E5E5"> always ignore this and</font>

1622
01:07:24,740 --> 01:07:26,950
<font color="#E5E5E5">this this is your</font><font color="#CCCCCC"> specific application</font>

1623
01:07:26,950 --> 01:07:31,190
<font color="#CCCCCC">your errors in 32</font><font color="#E5E5E5"> let's look at 32</font><font color="#CCCCCC"> oh I</font>

1624
01:07:31,190 --> 01:07:33,590
see what I did<font color="#E5E5E5"> I went there's um</font>

1625
01:07:33,590 --> 01:07:36,260
actually no index<font color="#CCCCCC"> 2 in this situation</font>

1626
01:07:36,260 --> 01:07:38,210
let's just get rid<font color="#E5E5E5"> of that all together</font>

1627
01:07:38,210 --> 01:07:41,570
<font color="#E5E5E5">and we can save us and we can run it and</font>

1628
01:07:41,570 --> 01:07:44,210
<font color="#E5E5E5">you can see right</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> going in</font>

1629
01:07:44,210 --> 01:07:46,010
here grab the first<font color="#E5E5E5"> value grab the last</font>

1630
01:07:46,010 --> 01:07:48,290
or output of the last<font color="#E5E5E5"> value the second</font>

1631
01:07:48,290 --> 01:07:50,330
value was<font color="#E5E5E5"> 3 the length was 6 then we</font>

1632
01:07:50,330 --> 01:07:51,410
went<font color="#E5E5E5"> and removed a whole bunch of</font>

1633
01:07:51,410 --> 01:07:52,970
<font color="#E5E5E5">different</font><font color="#CCCCCC"> things and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see that it</font>

1634
01:07:52,970 --> 01:07:56,000
printed out<font color="#E5E5E5"> 4</font><font color="#CCCCCC"> and 6</font><font color="#E5E5E5"> for all of those</font>

1635
01:07:56,000 --> 01:07:57,230
<font color="#E5E5E5">different items in</font>

1636
01:07:57,230 --> 01:07:59,210
list<font color="#E5E5E5"> okay so there's a whole</font><font color="#CCCCCC"> bunch of</font>

1637
01:07:59,210 --> 01:08:01,520
functions<font color="#E5E5E5"> and ways to</font><font color="#CCCCCC"> work with lists</font>

1638
01:08:01,520 --> 01:08:03,230
and now I want<font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> maps</font>

1639
01:08:03,230 --> 01:08:05,300
okay so a map is<font color="#E5E5E5"> going to be a</font>

1640
01:08:05,300 --> 01:08:07,880
modifiable<font color="#E5E5E5"> collection that's going to</font>

1641
01:08:07,880 --> 01:08:10,970
hold key valued pairs and let's go and

1642
01:08:10,970 --> 01:08:12,980
create<font color="#E5E5E5"> an empty map so I'm going to go</font>

1643
01:08:12,980 --> 01:08:15,710
map is<font color="#E5E5E5"> equal to and of course</font><font color="#CCCCCC"> there's</font>

1644
01:08:15,710 --> 01:08:20,569
<font color="#E5E5E5">going to be</font><font color="#CCCCCC"> immutable</font><font color="#E5E5E5"> maps and immutable</font>

1645
01:08:20,569 --> 01:08:22,759
<font color="#E5E5E5">maps or matted work with here is a</font>

1646
01:08:22,759 --> 01:08:25,670
mutable map and how you load one<font color="#E5E5E5"> is go</font>

1647
01:08:25,670 --> 01:08:28,580
mutable map of and here I'm going<font color="#CCCCCC"> to</font>

1648
01:08:28,580 --> 01:08:31,040
<font color="#E5E5E5">define that the key is going to be an</font>

1649
01:08:31,040 --> 01:08:34,520
integer<font color="#E5E5E5"> and the value in this situation</font>

1650
01:08:34,520 --> 01:08:37,460
is going<font color="#CCCCCC"> to be anything and</font><font color="#E5E5E5"> look like</font>

1651
01:08:37,460 --> 01:08:39,049
this and there we go

1652
01:08:39,049 --> 01:08:41,060
<font color="#E5E5E5">so now we created our map</font><font color="#CCCCCC"> now it's time</font>

1653
01:08:41,060 --> 01:08:43,520
for<font color="#CCCCCC"> us to</font><font color="#E5E5E5"> use our map</font><font color="#CCCCCC"> let's go</font>

1654
01:08:43,520 --> 01:08:44,960
<font color="#E5E5E5">well I'm also going to show you how to</font>

1655
01:08:44,960 --> 01:08:46,700
<font color="#E5E5E5">create a map in which you load values</font>

1656
01:08:46,700 --> 01:08:48,290
<font color="#E5E5E5">whenever you first start it this is call</font>

1657
01:08:48,290 --> 01:08:51,939
this<font color="#E5E5E5"> map 2 is equal to mutable map and</font>

1658
01:08:51,939 --> 01:08:54,770
<font color="#E5E5E5">mutable map of more specifically and</font>

1659
01:08:54,770 --> 01:08:57,259
then<font color="#E5E5E5"> in this guy</font><font color="#CCCCCC"> what I'm going to do is</font>

1660
01:08:57,259 --> 01:09:00,049
I'm going<font color="#CCCCCC"> to say get</font><font color="#E5E5E5"> rid of this and</font>

1661
01:09:00,049 --> 01:09:01,729
have<font color="#CCCCCC"> it figure it</font><font color="#E5E5E5"> out I'm going to say</font>

1662
01:09:01,729 --> 01:09:05,600
<font color="#CCCCCC">one two Doug and then</font><font color="#E5E5E5"> I'm going to put</font>

1663
01:09:05,600 --> 01:09:07,460
<font color="#E5E5E5">another element which is going</font><font color="#CCCCCC"> to be two</font>

1664
01:09:07,460 --> 01:09:10,488
<font color="#CCCCCC">to 25 okay so this is</font><font color="#E5E5E5"> going to be the</font>

1665
01:09:10,488 --> 01:09:12,080
key<font color="#E5E5E5"> and this is going to be the</font><font color="#CCCCCC"> value</font>

1666
01:09:12,080 --> 01:09:13,460
<font color="#CCCCCC">that we are going to be working</font><font color="#E5E5E5"> with</font>

1667
01:09:13,460 --> 01:09:15,500
<font color="#CCCCCC">they can also add additional values</font>

1668
01:09:15,500 --> 01:09:18,350
let's go map<font color="#CCCCCC"> 1 and</font><font color="#E5E5E5"> this is going to be</font><font color="#CCCCCC"> 2</font>

1669
01:09:18,350 --> 01:09:20,299
the<font color="#CCCCCC"> guys doesn't</font><font color="#E5E5E5"> have anything so I'm</font>

1670
01:09:20,299 --> 01:09:22,250
going to throw Derek inside of there and

1671
01:09:22,250 --> 01:09:26,060
we go map<font color="#E5E5E5"> and</font><font color="#CCCCCC"> to again</font><font color="#E5E5E5"> this is the key</font>

1672
01:09:26,060 --> 01:09:27,020
and the value

1673
01:09:27,020 --> 01:09:29,450
<font color="#CCCCCC">I'll throw</font><font color="#E5E5E5"> 42 inside of there I'm going</font>

1674
01:09:29,450 --> 01:09:32,420
<font color="#CCCCCC">to be able</font><font color="#E5E5E5"> to get the size of these</font>

1675
01:09:32,420 --> 01:09:35,390
elements<font color="#E5E5E5"> by just going let's call this</font>

1676
01:09:35,390 --> 01:09:38,988
map size and then I will<font color="#CCCCCC"> just have</font><font color="#E5E5E5"> in</font>

1677
01:09:38,988 --> 01:09:42,738
map size<font color="#E5E5E5"> and map and size and there that</font>

1678
01:09:42,738 --> 01:09:47,180
<font color="#E5E5E5">is we can also add a key value so we can</font>

1679
01:09:47,180 --> 01:09:52,189
<font color="#CCCCCC">go map and put and say 3</font><font color="#E5E5E5"> and let's say</font>

1680
01:09:52,189 --> 01:09:56,390
we<font color="#E5E5E5"> want to put in Pittsburgh</font><font color="#CCCCCC"> that is we</font>

1681
01:09:56,390 --> 01:09:59,600
can also come in<font color="#E5E5E5"> and remove a key and</font>

1682
01:09:59,600 --> 01:10:02,510
value so we go map and we will use

1683
01:10:02,510 --> 01:10:05,300
remove and I'm going<font color="#E5E5E5"> to remove whatever</font>

1684
01:10:05,300 --> 01:10:08,239
is<font color="#E5E5E5"> in the second key or whatever</font><font color="#CCCCCC"> is</font>

1685
01:10:08,239 --> 01:10:09,980
assigned<font color="#CCCCCC"> to it and of course</font><font color="#E5E5E5"> we're going</font>

1686
01:10:09,980 --> 01:10:11,059
<font color="#E5E5E5">to be able to</font><font color="#CCCCCC"> iterate</font>

1687
01:10:11,059 --> 01:10:15,260
and get key values so I'll say<font color="#CCCCCC"> four and</font>

1688
01:10:15,260 --> 01:10:20,110
I'm going<font color="#E5E5E5"> to say</font><font color="#CCCCCC"> X and y and in math</font>

1689
01:10:20,110 --> 01:10:22,610
pounds the<font color="#E5E5E5"> X is going to be the key</font>

1690
01:10:22,610 --> 01:10:24,230
<font color="#CCCCCC">otherwise is going to be the value and</font>

1691
01:10:24,230 --> 01:10:27,619
we<font color="#CCCCCC"> can go print line and just</font><font color="#E5E5E5"> show that</font>

1692
01:10:27,619 --> 01:10:32,210
<font color="#E5E5E5">I can say key and there's X and value</font>

1693
01:10:32,210 --> 01:10:36,320
and so let's make<font color="#CCCCCC"> the</font><font color="#E5E5E5"> uppercase value</font>

1694
01:10:36,320 --> 01:10:41,179
and<font color="#CCCCCC"> Y alright and run</font><font color="#E5E5E5"> it and you're</font>

1695
01:10:41,179 --> 01:10:43,730
going to see that a map size<font color="#CCCCCC"> 2 comes out</font>

1696
01:10:43,730 --> 01:10:45,349
with<font color="#E5E5E5"> this guy right</font><font color="#CCCCCC"> here and here I</font>

1697
01:10:45,349 --> 01:10:47,059
<font color="#E5E5E5">cycle through the different values and</font>

1698
01:10:47,059 --> 01:10:48,800
printed them out the keys and values

1699
01:10:48,800 --> 01:10:51,829
<font color="#CCCCCC">okay so brief explanation of how maps</font>

1700
01:10:51,829 --> 01:10:53,690
work in Kotlin now<font color="#CCCCCC"> i want</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font>

1701
01:10:53,690 --> 01:10:55,489
<font color="#E5E5E5">classes</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so we're going to</font>

1702
01:10:55,489 --> 01:10:58,760
<font color="#E5E5E5">create a class</font><font color="#CCCCCC"> outside</font><font color="#E5E5E5"> of the main</font>

1703
01:10:58,760 --> 01:11:00,409
function right<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and i</font><font color="#E5E5E5"> can get rid of</font>

1704
01:11:00,409 --> 01:11:02,630
this<font color="#CCCCCC"> random function or there's</font><font color="#E5E5E5"> random</font>

1705
01:11:02,630 --> 01:11:03,710
and<font color="#CCCCCC"> poor it</font><font color="#E5E5E5"> up here</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> i'm not</font>

1706
01:11:03,710 --> 01:11:05,449
going<font color="#CCCCCC"> to use it anymore so we</font><font color="#E5E5E5"> can come</font>

1707
01:11:05,449 --> 01:11:08,119
<font color="#E5E5E5">down here</font><font color="#CCCCCC"> like this and it's important</font>

1708
01:11:08,119 --> 01:11:10,190
<font color="#E5E5E5">to understand</font><font color="#CCCCCC"> up front of that there</font><font color="#E5E5E5"> are</font>

1709
01:11:10,190 --> 01:11:12,889
no static methods<font color="#E5E5E5"> and that classes are</font>

1710
01:11:12,889 --> 01:11:15,469
<font color="#E5E5E5">going to be marked as final like in java</font>

1711
01:11:15,469 --> 01:11:17,929
<font color="#E5E5E5">by default unless they are marked as</font>

1712
01:11:17,929 --> 01:11:20,420
open so<font color="#CCCCCC"> i'm going to mark</font><font color="#E5E5E5"> it as open</font>

1713
01:11:20,420 --> 01:11:24,050
<font color="#E5E5E5">whoops go open there we go so open and</font>

1714
01:11:24,050 --> 01:11:27,110
<font color="#CCCCCC">i'm going</font><font color="#E5E5E5"> to create an animal class and</font>

1715
01:11:27,110 --> 01:11:29,960
you're going to put the attributes you

1716
01:11:29,960 --> 01:11:32,900
<font color="#CCCCCC">want this guy to</font><font color="#E5E5E5"> be set up with directly</font>

1717
01:11:32,900 --> 01:11:34,099
<font color="#CCCCCC">thereafter</font>

1718
01:11:34,099 --> 01:11:36,469
you're going to put the<font color="#CCCCCC"> datatype you're</font>

1719
01:11:36,469 --> 01:11:38,539
<font color="#E5E5E5">also let's say</font><font color="#CCCCCC"> i want to</font><font color="#E5E5E5"> have every</font>

1720
01:11:38,539 --> 01:11:40,699
animal<font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to have a name and a</font>

1721
01:11:40,699 --> 01:11:44,179
height let's put that<font color="#CCCCCC"> there</font><font color="#E5E5E5"> and maybe it</font>

1722
01:11:44,179 --> 01:11:45,469
makes more<font color="#CCCCCC"> sense</font><font color="#E5E5E5"> to put these on</font>

1723
01:11:45,469 --> 01:11:48,380
multiple<font color="#E5E5E5"> different lines</font><font color="#CCCCCC"> and also you</font>

1724
01:11:48,380 --> 01:11:50,270
can see I'm using<font color="#E5E5E5"> Val here because this</font>

1725
01:11:50,270 --> 01:11:51,739
is<font color="#E5E5E5"> not going to</font><font color="#CCCCCC"> change and bar here</font>

1726
01:11:51,739 --> 01:11:54,770
because the height as<font color="#CCCCCC"> well as the weight</font>

1727
01:11:54,770 --> 01:11:58,010
<font color="#E5E5E5">could change so put</font><font color="#CCCCCC"> that inside of</font><font color="#E5E5E5"> there</font>

1728
01:11:58,010 --> 01:12:00,770
<font color="#E5E5E5">and there is double</font><font color="#CCCCCC"> okay and now let's</font>

1729
01:12:00,770 --> 01:12:03,380
<font color="#E5E5E5">continue adding on to all the different</font>

1730
01:12:03,380 --> 01:12:05,030
things<font color="#CCCCCC"> I wish this wasn't</font><font color="#E5E5E5"> quite</font><font color="#CCCCCC"> so</font>

1731
01:12:05,030 --> 01:12:06,980
verbose with all the squigglies

1732
01:12:06,980 --> 01:12:08,119
everywhere the drives me nuts

1733
01:12:08,119 --> 01:12:10,820
<font color="#E5E5E5">but he's okay basically your objects are</font>

1734
01:12:10,820 --> 01:12:13,760
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> initialized in an init</font>

1735
01:12:13,760 --> 01:12:15,770
function<font color="#E5E5E5"> and this is just going to be</font>

1736
01:12:15,770 --> 01:12:18,710
where you're going to verify<font color="#CCCCCC"> if a value</font>

1737
01:12:18,710 --> 01:12:21,619
is<font color="#E5E5E5"> okay or not</font><font color="#CCCCCC"> so let's say let's also</font>

1738
01:12:21,619 --> 01:12:24,090
talk<font color="#CCCCCC"> about regular expressions here</font>

1739
01:12:24,090 --> 01:12:25,710
<font color="#E5E5E5">very briefly like three lines of regular</font>

1740
01:12:25,710 --> 01:12:27,180
expressions<font color="#E5E5E5"> basically what I want to do</font>

1741
01:12:27,180 --> 01:12:30,060
is I want to create<font color="#E5E5E5"> a red X here that is</font>

1742
01:12:30,060 --> 01:12:32,700
<font color="#E5E5E5">going to match for a number any place</font>

1743
01:12:32,700 --> 01:12:34,590
inside of<font color="#E5E5E5"> a string</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's say I want</font>

1744
01:12:34,590 --> 01:12:36,570
to make<font color="#E5E5E5"> it invalid to have a number</font>

1745
01:12:36,570 --> 01:12:39,840
inside of an animal's name<font color="#CCCCCC"> well how I</font>

1746
01:12:39,840 --> 01:12:43,320
can define this regular expression<font color="#E5E5E5"> is</font>

1747
01:12:43,320 --> 01:12:46,950
like this<font color="#E5E5E5"> and rig X and put this like</font>

1748
01:12:46,950 --> 01:12:49,140
<font color="#CCCCCC">this</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then what this is saying is</font>

1749
01:12:49,140 --> 01:12:51,540
basically<font color="#E5E5E5"> I'm checking to see if there</font>

1750
01:12:51,540 --> 01:12:55,230
<font color="#CCCCCC">is a</font><font color="#E5E5E5"> decimal value anywhere inside of</font>

1751
01:12:55,230 --> 01:12:57,720
the string that's going<font color="#CCCCCC"> to be assigned</font>

1752
01:12:57,720 --> 01:13:01,770
to<font color="#E5E5E5"> name and what I'm going to do is put</font>

1753
01:13:01,770 --> 01:13:05,400
require inside here<font color="#E5E5E5"> and basically what's</font>

1754
01:13:05,400 --> 01:13:07,440
going to happen is if these requirements

1755
01:13:07,440 --> 01:13:10,200
<font color="#CCCCCC">aren't going to be met an illegal</font>

1756
01:13:10,200 --> 01:13:12,210
argument exception<font color="#E5E5E5"> is going to be thrown</font>

1757
01:13:12,210 --> 01:13:14,370
<font color="#E5E5E5">so I talked</font><font color="#CCCCCC"> about exception handling a</font>

1758
01:13:14,370 --> 01:13:15,690
<font color="#E5E5E5">little bit ago</font><font color="#CCCCCC"> so what I'm</font><font color="#E5E5E5"> going to do</font>

1759
01:13:15,690 --> 01:13:18,690
here<font color="#E5E5E5"> is I'm going to say if name matches</font>

1760
01:13:18,690 --> 01:13:22,200
any character inside of name matches for

1761
01:13:22,200 --> 01:13:24,390
the<font color="#E5E5E5"> regular expression that we have up</font>

1762
01:13:24,390 --> 01:13:25,920
<font color="#CCCCCC">here which</font><font color="#E5E5E5"> means any of the characters</font>

1763
01:13:25,920 --> 01:13:29,160
are numbers in<font color="#E5E5E5"> that situation what I</font>

1764
01:13:29,160 --> 01:13:31,560
want to do is I want to throw an error

1765
01:13:31,560 --> 01:13:34,910
<font color="#E5E5E5">so I'm going to say animal name can't</font>

1766
01:13:34,910 --> 01:13:38,190
contain numbers<font color="#E5E5E5"> all right</font>

1767
01:13:38,190 --> 01:13:40,530
so that's going<font color="#E5E5E5"> to be the message</font><font color="#CCCCCC"> that</font>

1768
01:13:40,530 --> 01:13:42,360
I'm going to<font color="#E5E5E5"> shoot out let's go and do</font>

1769
01:13:42,360 --> 01:13:44,250
them for<font color="#E5E5E5"> other ones too so let's say</font>

1770
01:13:44,250 --> 01:13:47,070
<font color="#E5E5E5">something like require</font><font color="#CCCCCC"> and here I'm</font>

1771
01:13:47,070 --> 01:13:50,490
going to say if height is<font color="#E5E5E5"> greater than</font><font color="#CCCCCC"> 0</font>

1772
01:13:50,490 --> 01:13:52,410
<font color="#CCCCCC">what</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> doing is saying that height</font>

1773
01:13:52,410 --> 01:13:55,380
<font color="#E5E5E5">must be greater than 0 and if it is not</font>

1774
01:13:55,380 --> 01:13:57,750
the message I'm going<font color="#CCCCCC"> to say is height</font>

1775
01:13:57,750 --> 01:14:03,480
must be greater<font color="#CCCCCC"> than</font><font color="#E5E5E5"> 0</font><font color="#CCCCCC"> ok and let's do</font>

1776
01:14:03,480 --> 01:14:05,850
the same<font color="#CCCCCC"> thing and other requirements of</font>

1777
01:14:05,850 --> 01:14:09,170
my class<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> the weight of my</font>

1778
01:14:09,170 --> 01:14:12,360
<font color="#E5E5E5">animals must also be greater than 0</font>

1779
01:14:12,360 --> 01:14:14,520
<font color="#E5E5E5">otherwise I will not accept them as</font>

1780
01:14:14,520 --> 01:14:17,730
valid animals<font color="#E5E5E5"> and then inside of here</font>

1781
01:14:17,730 --> 01:14:19,920
outside<font color="#CCCCCC"> of an it of course I'm also</font>

1782
01:14:19,920 --> 01:14:22,470
going to<font color="#CCCCCC"> throw in a</font><font color="#E5E5E5"> method and if you</font>

1783
01:14:22,470 --> 01:14:25,470
want your<font color="#CCCCCC"> assets</font><font color="#E5E5E5"> your methods to be over</font>

1784
01:14:25,470 --> 01:14:27,840
or provide for the option<font color="#E5E5E5"> that</font><font color="#CCCCCC"> your</font>

1785
01:14:27,840 --> 01:14:30,150
message could be overridden<font color="#CCCCCC"> you need to</font>

1786
01:14:30,150 --> 01:14:32,220
put open here once<font color="#CCCCCC"> again I'm going to</font>

1787
01:14:32,220 --> 01:14:34,290
say fun<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is going to be called</font>

1788
01:14:34,290 --> 01:14:36,469
<font color="#E5E5E5">get info and it's going to</font>

1789
01:14:36,469 --> 01:14:37,880
<font color="#CCCCCC">output</font><font color="#E5E5E5"> some information but it's not</font>

1790
01:14:37,880 --> 01:14:40,789
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to return any information and what</font>

1791
01:14:40,789 --> 01:14:43,670
<font color="#CCCCCC">it specifically is going to output let's</font>

1792
01:14:43,670 --> 01:14:47,179
get this out of<font color="#CCCCCC"> here is look and have</font>

1793
01:14:47,179 --> 01:14:49,309
that there so we're going to<font color="#E5E5E5"> say print</font>

1794
01:14:49,309 --> 01:14:52,010
line and I'm going to get to the name

1795
01:14:52,010 --> 01:14:53,690
how you get the name<font color="#E5E5E5"> value as you just</font>

1796
01:14:53,690 --> 01:14:56,150
go dollar sign<font color="#CCCCCC"> name is</font><font color="#E5E5E5"> and here I'll</font>

1797
01:14:56,150 --> 01:15:01,489
<font color="#CCCCCC">just say</font><font color="#E5E5E5"> height</font><font color="#CCCCCC"> and tall and weighs I'm</font>

1798
01:15:01,489 --> 01:15:03,499
not going to get into specifics of what

1799
01:15:03,499 --> 01:15:05,929
type<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> is we're using and there</font>

1800
01:15:05,929 --> 01:15:07,639
you go<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's how you define the</font>

1801
01:15:07,639 --> 01:15:10,219
attributes<font color="#E5E5E5"> this is how you define what</font>

1802
01:15:10,219 --> 01:15:12,769
<font color="#CCCCCC">is</font><font color="#E5E5E5"> valid values for all of the different</font>

1803
01:15:12,769 --> 01:15:15,079
attributes<font color="#CCCCCC"> and this is how you define a</font>

1804
01:15:15,079 --> 01:15:17,659
<font color="#CCCCCC">method for</font><font color="#E5E5E5"> your class now what I want to</font>

1805
01:15:17,659 --> 01:15:19,969
do is come up<font color="#CCCCCC"> here after I have</font><font color="#E5E5E5"> that set</font>

1806
01:15:19,969 --> 01:15:22,909
up<font color="#E5E5E5"> to come up inside of</font><font color="#CCCCCC"> main and</font><font color="#E5E5E5"> go and</font>

1807
01:15:22,909 --> 01:15:24,679
create<font color="#E5E5E5"> an animal object how you create</font>

1808
01:15:24,679 --> 01:15:27,139
one is you go<font color="#CCCCCC"> Bowser</font>

1809
01:15:27,139 --> 01:15:29,570
like this is equal<font color="#E5E5E5"> to and you do not</font>

1810
01:15:29,570 --> 01:15:31,550
type new inside here you just type in

1811
01:15:31,550 --> 01:15:33,559
whatever it's called<font color="#E5E5E5"> and then you want</font>

1812
01:15:33,559 --> 01:15:35,690
<font color="#CCCCCC">to say Bowser or whatever the name is</font>

1813
01:15:35,690 --> 01:15:39,409
<font color="#E5E5E5">and let's say</font><font color="#CCCCCC"> I want a 20 point zero</font><font color="#E5E5E5"> and</font>

1814
01:15:39,409 --> 01:15:43,249
thirteen point five is valid and then I

1815
01:15:43,249 --> 01:15:46,639
can call for<font color="#E5E5E5"> our function to execute</font><font color="#CCCCCC"> I</font>

1816
01:15:46,639 --> 01:15:49,159
go and get info exactly like that<font color="#E5E5E5"> and</font>

1817
01:15:49,159 --> 01:15:51,559
<font color="#E5E5E5">then we can</font><font color="#CCCCCC"> run it as long</font><font color="#E5E5E5"> as I'm having</font>

1818
01:15:51,559 --> 01:15:55,010
errors<font color="#E5E5E5"> yes Bowser is 20.0 tall and</font>

1819
01:15:55,010 --> 01:15:56,659
weighs<font color="#E5E5E5"> thirteen point five brief</font>

1820
01:15:56,659 --> 01:15:58,969
explanation of how those all Walter

1821
01:15:58,969 --> 01:16:00,769
<font color="#CCCCCC">eight</font><font color="#E5E5E5"> and now I'm going to talk</font><font color="#CCCCCC"> about</font>

1822
01:16:00,769 --> 01:16:03,590
inheritance<font color="#E5E5E5"> okay so what we're going to</font>

1823
01:16:03,590 --> 01:16:06,440
do is I'm going<font color="#E5E5E5"> to create a new class</font>

1824
01:16:06,440 --> 01:16:10,070
and I cut dog<font color="#E5E5E5"> and it is going to inherit</font>

1825
01:16:10,070 --> 01:16:12,079
<font color="#CCCCCC">since I don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> open on here you're</font>

1826
01:16:12,079 --> 01:16:13,489
not<font color="#E5E5E5"> going to be able</font><font color="#CCCCCC"> to inherit</font><font color="#E5E5E5"> from dog</font>

1827
01:16:13,489 --> 01:16:16,190
I've decided<font color="#E5E5E5"> so it's also going</font><font color="#CCCCCC"> to</font>

1828
01:16:16,190 --> 01:16:17,929
<font color="#CCCCCC">receive a name which is</font><font color="#E5E5E5"> going to be a</font>

1829
01:16:17,929 --> 01:16:21,349
string and it's also going to<font color="#E5E5E5"> have a</font>

1830
01:16:21,349 --> 01:16:24,110
height which<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be a</font><font color="#CCCCCC"> double and</font>

1831
01:16:24,110 --> 01:16:26,360
it's going<font color="#E5E5E5"> to have a weight which is</font>

1832
01:16:26,360 --> 01:16:29,420
<font color="#CCCCCC">also going to</font><font color="#E5E5E5"> be a double</font><font color="#CCCCCC"> and it's also</font>

1833
01:16:29,420 --> 01:16:31,940
going to have this time I have to put a

1834
01:16:31,940 --> 01:16:34,610
<font color="#CCCCCC">var it's</font><font color="#E5E5E5"> going to have an owner</font><font color="#CCCCCC"> whoops</font>

1835
01:16:34,610 --> 01:16:37,969
owner<font color="#E5E5E5"> like that and that's going to be a</font>

1836
01:16:37,969 --> 01:16:40,789
string now to say<font color="#E5E5E5"> that I want</font><font color="#CCCCCC"> to inherit</font>

1837
01:16:40,789 --> 01:16:43,880
<font color="#CCCCCC">from animal I just put a colon an animal</font>

1838
01:16:43,880 --> 01:16:47,630
<font color="#E5E5E5">and then I let the name the height and</font>

1839
01:16:47,630 --> 01:16:49,489
the weight the

1840
01:16:49,489 --> 01:16:52,730
<font color="#E5E5E5">initialized over inside of animal and</font>

1841
01:16:52,730 --> 01:16:54,920
then it comes down<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this and let's</font>

1842
01:16:54,920 --> 01:16:57,440
say<font color="#CCCCCC"> that I would</font><font color="#E5E5E5"> like to override get</font>

1843
01:16:57,440 --> 01:17:01,909
information<font color="#CCCCCC"> I just go</font><font color="#E5E5E5"> override fun get</font>

1844
01:17:01,909 --> 01:17:04,130
info<font color="#CCCCCC"> and of course I can put my own</font>

1845
01:17:04,130 --> 01:17:05,869
methods inside of here do whatever I

1846
01:17:05,869 --> 01:17:06,409
want

1847
01:17:06,409 --> 01:17:09,260
this is not going<font color="#CCCCCC"> to return</font><font color="#E5E5E5"> anything</font><font color="#CCCCCC"> and</font>

1848
01:17:09,260 --> 01:17:11,900
let's<font color="#E5E5E5"> just go and copy what this says so</font>

1849
01:17:11,900 --> 01:17:14,599
it's just<font color="#E5E5E5"> coffee that's change it up</font>

1850
01:17:14,599 --> 01:17:17,749
slightly<font color="#E5E5E5"> so name is height tall</font><font color="#CCCCCC"> bla bla</font>

1851
01:17:17,749 --> 01:17:23,809
<font color="#CCCCCC">bla bla bla and is owned by</font><font color="#E5E5E5"> and owner</font>

1852
01:17:23,809 --> 01:17:26,300
<font color="#CCCCCC">okay so there we go</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> just created a</font>

1853
01:17:26,300 --> 01:17:28,820
dog which inherits a from animal<font color="#E5E5E5"> and</font>

1854
01:17:28,820 --> 01:17:30,829
<font color="#E5E5E5">it's come up here and test it to make</font>

1855
01:17:30,829 --> 01:17:33,320
sure<font color="#CCCCCC"> that it operates</font><font color="#E5E5E5"> the way that we</font>

1856
01:17:33,320 --> 01:17:35,480
feel<font color="#CCCCCC"> that it should</font><font color="#E5E5E5"> so I'm going to go</font>

1857
01:17:35,480 --> 01:17:39,590
<font color="#CCCCCC">WOW spot is equal to and here I'm</font><font color="#E5E5E5"> going</font>

1858
01:17:39,590 --> 01:17:43,730
<font color="#CCCCCC">to call dog</font><font color="#E5E5E5"> and spots</font><font color="#CCCCCC"> and probably more</font>

1859
01:17:43,730 --> 01:17:45,619
<font color="#CCCCCC">fizzles</font><font color="#E5E5E5"> going to work in Kotlin just</font>

1860
01:17:45,619 --> 01:17:48,559
like you would expect<font color="#E5E5E5"> it to so it's</font><font color="#CCCCCC"> like</font>

1861
01:17:48,559 --> 01:17:50,539
<font color="#E5E5E5">this so I'm leave that for homework for</font>

1862
01:17:50,539 --> 01:17:55,159
you to test out<font color="#CCCCCC"> 14.5</font><font color="#E5E5E5"> and I'm Paul Smith</font>

1863
01:17:55,159 --> 01:17:57,199
is the owner

1864
01:17:57,199 --> 01:18:01,579
<font color="#E5E5E5">I'm going</font><font color="#CCCCCC"> to go spots and</font><font color="#E5E5E5"> get info is</font>

1865
01:18:01,579 --> 01:18:02,929
going to<font color="#E5E5E5"> print that</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> and we're going</font>

1866
01:18:02,929 --> 01:18:04,789
<font color="#CCCCCC">to run it</font><font color="#E5E5E5"> and it should have worked</font>

1867
01:18:04,789 --> 01:18:07,190
<font color="#E5E5E5">yeah spot is 20 inches tall weighs 14.5</font>

1868
01:18:07,190 --> 01:18:09,110
and is owned<font color="#E5E5E5"> by Paul</font><font color="#CCCCCC"> smih okay so that's</font>

1869
01:18:09,110 --> 01:18:11,749
<font color="#E5E5E5">how inheritance works inside of God well</font>

1870
01:18:11,749 --> 01:18:13,610
now why<font color="#E5E5E5"> don't I give a brief explanation</font>

1871
01:18:13,610 --> 01:18:15,980
<font color="#E5E5E5">of how interfaces work</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so come</font>

1872
01:18:15,980 --> 01:18:18,380
<font color="#E5E5E5">back down here inside here and what I'm</font>

1873
01:18:18,380 --> 01:18:21,380
going<font color="#E5E5E5"> to do is I am going to create an</font>

1874
01:18:21,380 --> 01:18:23,480
interface<font color="#E5E5E5"> so this is going to be an</font>

1875
01:18:23,480 --> 01:18:26,079
interface<font color="#CCCCCC"> that is going to provide for</font>

1876
01:18:26,079 --> 01:18:30,619
<font color="#E5E5E5">the option to make something flyable</font><font color="#CCCCCC"> and</font>

1877
01:18:30,619 --> 01:18:32,570
an<font color="#E5E5E5"> interface of course is just a</font>

1878
01:18:32,570 --> 01:18:34,309
<font color="#E5E5E5">contract that states that all fields</font><font color="#CCCCCC"> and</font>

1879
01:18:34,309 --> 01:18:37,460
<font color="#E5E5E5">methods</font><font color="#CCCCCC"> a class must</font><font color="#E5E5E5"> implement if it</font>

1880
01:18:37,460 --> 01:18:39,650
implements the<font color="#CCCCCC"> interface</font><font color="#E5E5E5"> so I'm going to</font>

1881
01:18:39,650 --> 01:18:43,159
call<font color="#E5E5E5"> this interface fly a bowl and I'm</font>

1882
01:18:43,159 --> 01:18:45,699
<font color="#CCCCCC">going to say that anybody</font><font color="#E5E5E5"> that is</font>

1883
01:18:45,699 --> 01:18:48,590
basically wants<font color="#CCCCCC"> to use the interface</font><font color="#E5E5E5"> is</font>

1884
01:18:48,590 --> 01:18:51,260
<font color="#E5E5E5">going to have to have a field inside of</font>

1885
01:18:51,260 --> 01:18:54,980
it called<font color="#E5E5E5"> flies</font><font color="#CCCCCC"> and it is going</font><font color="#E5E5E5"> to be a</font>

1886
01:18:54,980 --> 01:18:58,969
boolean<font color="#CCCCCC"> and it also is</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to have a</font>

1887
01:18:58,969 --> 01:19:00,960
fly method

1888
01:19:00,960 --> 01:19:04,160
<font color="#CCCCCC">Stud of its that is going to receive a</font>

1889
01:19:04,160 --> 01:19:08,340
distance miles flown or whatever<font color="#E5E5E5"> and</font>

1890
01:19:08,340 --> 01:19:11,940
it's going<font color="#CCCCCC"> to receive a double and it is</font>

1891
01:19:11,940 --> 01:19:14,400
going<font color="#E5E5E5"> to not do anything not return</font>

1892
01:19:14,400 --> 01:19:16,950
anything<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> and let's change</font><font color="#CCCCCC"> and</font>

1893
01:19:16,950 --> 01:19:18,360
let's look<font color="#E5E5E5"> at that exactly the way we</font>

1894
01:19:18,360 --> 01:19:20,310
have right there<font color="#CCCCCC"> after this</font><font color="#E5E5E5"> you know</font>

1895
01:19:20,310 --> 01:19:23,250
what I'm going<font color="#E5E5E5"> to create a bird class</font>

1896
01:19:23,250 --> 01:19:25,260
<font color="#E5E5E5">that's going to implement that so I'm</font>

1897
01:19:25,260 --> 01:19:27,570
<font color="#E5E5E5">going to go bird and you're going</font><font color="#CCCCCC"> to be</font>

1898
01:19:27,570 --> 01:19:30,030
<font color="#CCCCCC">able to call your constructor</font><font color="#E5E5E5"> directly</font>

1899
01:19:30,030 --> 01:19:32,940
<font color="#E5E5E5">from inside of here</font><font color="#CCCCCC"> and do some like Val</font>

1900
01:19:32,940 --> 01:19:36,240
<font color="#CCCCCC">and name and this</font><font color="#E5E5E5"> is going to be a</font>

1901
01:19:36,240 --> 01:19:41,010
string and I'm going<font color="#CCCCCC"> to say right here</font>

1902
01:19:41,010 --> 01:19:46,140
whoops<font color="#E5E5E5"> the override</font><font color="#CCCCCC"> VAR flies and to</font>

1903
01:19:46,140 --> 01:19:47,880
implement<font color="#CCCCCC"> the interface here what we're</font>

1904
01:19:47,880 --> 01:19:50,760
going<font color="#CCCCCC"> to do is follow the constructor</font>

1905
01:19:50,760 --> 01:19:53,880
parameters with a<font color="#E5E5E5"> colon and the</font>

1906
01:19:53,880 --> 01:19:56,190
interface name<font color="#E5E5E5"> oops let's also come in</font>

1907
01:19:56,190 --> 01:19:58,890
here<font color="#CCCCCC"> and make sure pull in and let's</font>

1908
01:19:58,890 --> 01:20:01,410
give<font color="#CCCCCC"> it a default value of true and then</font>

1909
01:20:01,410 --> 01:20:03,600
I'm<font color="#E5E5E5"> going to come in and go fly of all</font>

1910
01:20:03,600 --> 01:20:05,310
fly<font color="#E5E5E5"> oops</font>

1911
01:20:05,310 --> 01:20:07,590
fly a hole it's getting late into this

1912
01:20:07,590 --> 01:20:08,340
tutorial

1913
01:20:08,340 --> 01:20:10,350
nothing up a little bit okay so there's

1914
01:20:10,350 --> 01:20:12,420
flyable<font color="#CCCCCC"> and let's go and put</font><font color="#E5E5E5"> this down</font>

1915
01:20:12,420 --> 01:20:14,910
<font color="#CCCCCC">here so we can see</font><font color="#E5E5E5"> more of this stuff</font>

1916
01:20:14,910 --> 01:20:17,730
<font color="#E5E5E5">all at</font><font color="#CCCCCC"> one time so there you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> it</font>

1917
01:20:17,730 --> 01:20:21,240
all right<font color="#CCCCCC"> so there's flyable and inside</font>

1918
01:20:21,240 --> 01:20:25,290
<font color="#CCCCCC">of it we of</font><font color="#E5E5E5"> course need to override</font><font color="#CCCCCC"> the</font>

1919
01:20:25,290 --> 01:20:27,210
function<font color="#E5E5E5"> fly</font>

1920
01:20:27,210 --> 01:20:30,330
so there's fly<font color="#E5E5E5"> and this is going to be</font>

1921
01:20:30,330 --> 01:20:34,110
distance miles<font color="#E5E5E5"> and a double and of</font>

1922
01:20:34,110 --> 01:20:36,410
course it's<font color="#E5E5E5"> not going to return anything</font>

1923
01:20:36,410 --> 01:20:40,020
<font color="#CCCCCC">and it's</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> here because</font><font color="#CCCCCC"> that's</font>

1924
01:20:40,020 --> 01:20:42,750
<font color="#E5E5E5">confusing me</font><font color="#CCCCCC"> pet hair and then what</font><font color="#E5E5E5"> I'm</font>

1925
01:20:42,750 --> 01:20:45,300
going<font color="#CCCCCC"> to do is I'm going to say if flies</font>

1926
01:20:45,300 --> 01:20:50,960
<font color="#CCCCCC">in that</font><font color="#E5E5E5"> situation I want to print out</font>

1927
01:20:50,960 --> 01:20:54,840
<font color="#E5E5E5">that whatever the name</font><font color="#CCCCCC"> of our</font><font color="#E5E5E5"> bird is is</font>

1928
01:20:54,840 --> 01:20:58,040
going<font color="#E5E5E5"> to fly a certain number of</font>

1929
01:20:58,040 --> 01:21:02,130
distance<font color="#E5E5E5"> miles and then I'll say miles</font>

1930
01:21:02,130 --> 01:21:04,890
<font color="#E5E5E5">after that and there that</font><font color="#CCCCCC"> is and did I</font>

1931
01:21:04,890 --> 01:21:06,930
do this right<font color="#CCCCCC"> I think it did there's</font>

1932
01:21:06,930 --> 01:21:08,550
<font color="#E5E5E5">liable there's that there's this</font>

1933
01:21:08,550 --> 01:21:10,770
everything looks good and<font color="#E5E5E5"> then we'll</font>

1934
01:21:10,770 --> 01:21:13,050
<font color="#E5E5E5">come up inside of here</font><font color="#CCCCCC"> and test out our</font>

1935
01:21:13,050 --> 01:21:14,530
interface

1936
01:21:14,530 --> 01:21:16,360
so there's all this stuff<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we are</font>

1937
01:21:16,360 --> 01:21:18,580
we're in<font color="#E5E5E5"> the main function</font><font color="#CCCCCC"> and I'm going</font>

1938
01:21:18,580 --> 01:21:22,690
<font color="#CCCCCC">to create a bird</font><font color="#E5E5E5"> let's call it Tweety so</font>

1939
01:21:22,690 --> 01:21:26,740
is equal<font color="#E5E5E5"> to bird and the name is Tweety</font>

1940
01:21:26,740 --> 01:21:30,880
and it is<font color="#E5E5E5"> going to be true that Tweety</font>

1941
01:21:30,880 --> 01:21:33,940
is a flying bird<font color="#CCCCCC"> and then we can say</font>

1942
01:21:33,940 --> 01:21:37,480
<font color="#E5E5E5">tweet and call for the fly function to</font>

1943
01:21:37,480 --> 01:21:40,480
work and we'll say<font color="#E5E5E5"> that Tweety flew 10</font>

1944
01:21:40,480 --> 01:21:43,030
miles<font color="#E5E5E5"> let's run that and see</font><font color="#CCCCCC"> if I have</font>

1945
01:21:43,030 --> 01:21:43,990
any errors

1946
01:21:43,990 --> 01:21:45,990
oops have an error what do we got

1947
01:21:45,990 --> 01:21:49,210
unresolved<font color="#E5E5E5"> reference tweet distance</font>

1948
01:21:49,210 --> 01:21:49,750
miles

1949
01:21:49,750 --> 01:21:54,370
<font color="#CCCCCC">ok so 17</font><font color="#E5E5E5"> Oh Tweety spell that let's run</font>

1950
01:21:54,370 --> 01:21:57,520
<font color="#E5E5E5">it again just see that to the anyway</font>

1951
01:21:57,520 --> 01:22:00,100
another<font color="#E5E5E5"> air 62 unresolved reference</font>

1952
01:22:00,100 --> 01:22:03,400
distance miles distance miles just<font color="#CCCCCC"> just</font>

1953
01:22:03,400 --> 01:22:06,700
miles<font color="#E5E5E5"> all this miles let's change this</font>

1954
01:22:06,700 --> 01:22:09,160
the distance miles right<font color="#E5E5E5"> there the</font>

1955
01:22:09,160 --> 01:22:13,030
distance<font color="#CCCCCC"> miles right there Oh so should</font>

1956
01:22:13,030 --> 01:22:15,550
be<font color="#CCCCCC"> okay I'm just</font><font color="#E5E5E5"> going to run it and do</font>

1957
01:22:15,550 --> 01:22:18,490
<font color="#E5E5E5">and you can see Tweety flies</font><font color="#CCCCCC"> 10 miles ok</font>

1958
01:22:18,490 --> 01:22:20,650
<font color="#E5E5E5">so there you go there's interfaces and a</font>

1959
01:22:20,650 --> 01:22:22,060
whole bunch<font color="#CCCCCC"> of other different</font><font color="#E5E5E5"> things</font>

1960
01:22:22,060 --> 01:22:24,220
<font color="#CCCCCC">and to finish off everything I'm going</font>

1961
01:22:24,220 --> 01:22:26,020
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> about null safety</font>

1962
01:22:26,020 --> 01:22:29,170
okay so null safety is built directly

1963
01:22:29,170 --> 01:22:32,800
<font color="#E5E5E5">into Kotlin because there's it's null</font>

1964
01:22:32,800 --> 01:22:34,960
causes lots of issues<font color="#CCCCCC"> so</font><font color="#E5E5E5"> causing that's</font>

1965
01:22:34,960 --> 01:22:36,580
one thing that<font color="#CCCCCC"> cousin tries to do is is</font>

1966
01:22:36,580 --> 01:22:39,640
to solve potential issues<font color="#E5E5E5"> now</font><font color="#CCCCCC"> to by</font>

1967
01:22:39,640 --> 01:22:42,880
<font color="#E5E5E5">default</font><font color="#CCCCCC"> you actually cannot assign</font><font color="#E5E5E5"> null</font>

1968
01:22:42,880 --> 01:22:44,380
and I'm going<font color="#E5E5E5"> to show you this I'm going</font>

1969
01:22:44,380 --> 01:22:49,300
to null value like this and string is

1970
01:22:49,300 --> 01:22:52,840
equal to null<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to see</font>

1971
01:22:52,840 --> 01:22:54,940
that it gives<font color="#CCCCCC"> me an error</font><font color="#E5E5E5"> and what it</font>

1972
01:22:54,940 --> 01:22:56,950
says is<font color="#CCCCCC"> null cannot be a value of a non</font>

1973
01:22:56,950 --> 01:23:00,430
null type string<font color="#CCCCCC"> ok so you can't do</font><font color="#E5E5E5"> that</font>

1974
01:23:00,430 --> 01:23:04,180
<font color="#CCCCCC">however you can allow for a null value</font>

1975
01:23:04,180 --> 01:23:07,450
<font color="#E5E5E5">to be assigned and how you do that is</font>

1976
01:23:07,450 --> 01:23:08,920
you just<font color="#E5E5E5"> put a question mark inside</font>

1977
01:23:08,920 --> 01:23:10,720
<font color="#E5E5E5">there and there</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see that the</font>

1978
01:23:10,720 --> 01:23:13,540
error went away<font color="#CCCCCC"> now another thing is a</font>

1979
01:23:13,540 --> 01:23:17,320
function may return null and in the

1980
01:23:17,320 --> 01:23:18,940
<font color="#E5E5E5">situation which that occurs</font><font color="#CCCCCC"> you're also</font>

1981
01:23:18,940 --> 01:23:20,740
going to<font color="#E5E5E5"> be used our little question</font>

1982
01:23:20,740 --> 01:23:24,910
mark so let's go<font color="#E5E5E5"> fun and my fun for</font>

1983
01:23:24,910 --> 01:23:26,720
function and

1984
01:23:26,720 --> 01:23:29,150
ring<font color="#E5E5E5"> so if there's a chance that this</font>

1985
01:23:29,150 --> 01:23:32,480
could return a null value<font color="#E5E5E5"> you are going</font>

1986
01:23:32,480 --> 01:23:34,730
to put the<font color="#E5E5E5"> little question</font><font color="#CCCCCC"> mark there</font>

1987
01:23:34,730 --> 01:23:37,070
<font color="#E5E5E5">let's go and</font><font color="#CCCCCC"> actually do a real-world</font>

1988
01:23:37,070 --> 01:23:39,200
<font color="#E5E5E5">example here instead of</font><font color="#CCCCCC"> just doing</font>

1989
01:23:39,200 --> 01:23:40,580
<font color="#E5E5E5">something a little</font><font color="#CCCCCC"> bit weird so we're</font>

1990
01:23:40,580 --> 01:23:42,200
going to<font color="#CCCCCC"> have fun and this guy is</font>

1991
01:23:42,200 --> 01:23:44,210
<font color="#CCCCCC">actually going to return all</font><font color="#E5E5E5"> the time so</font>

1992
01:23:44,210 --> 01:23:47,990
we're going to go<font color="#CCCCCC"> turn null and we will</font>

1993
01:23:47,990 --> 01:23:50,180
put string inside of here like this<font color="#CCCCCC"> and</font>

1994
01:23:50,180 --> 01:23:52,310
create<font color="#CCCCCC"> a function and the whole purpose</font>

1995
01:23:52,310 --> 01:23:55,670
of this function is to<font color="#E5E5E5"> return null -</font>

1996
01:23:55,670 --> 01:23:57,860
cause you<font color="#E5E5E5"> know issues and so</font><font color="#CCCCCC"> forth</font><font color="#E5E5E5"> you</font>

1997
01:23:57,860 --> 01:24:00,500
<font color="#CCCCCC">can see right there I did it and it did</font>

1998
01:24:00,500 --> 01:24:03,230
not<font color="#CCCCCC"> give me any errors</font><font color="#E5E5E5"> another thing</font>

1999
01:24:03,230 --> 01:24:05,390
<font color="#E5E5E5">that is neat is that Kotlin is going to</font>

2000
01:24:05,390 --> 01:24:07,430
provide<font color="#CCCCCC"> for the opportunity of</font><font color="#E5E5E5"> a null</font>

2001
01:24:07,430 --> 01:24:10,820
value<font color="#CCCCCC"> if an if statement is</font><font color="#E5E5E5"> going to</font>

2002
01:24:10,820 --> 01:24:13,070
<font color="#CCCCCC">protect it</font><font color="#E5E5E5"> from danger</font><font color="#CCCCCC"> so what we're</font>

2003
01:24:13,070 --> 01:24:15,770
<font color="#E5E5E5">going to do here is I'm going to go var</font>

2004
01:24:15,770 --> 01:24:21,410
and know Val 2 is equal to return null

2005
01:24:21,410 --> 01:24:23,000
so we're going<font color="#E5E5E5"> to call</font><font color="#CCCCCC"> that function</font>

2006
01:24:23,000 --> 01:24:26,630
<font color="#E5E5E5">that sole purpose is to return the null</font>

2007
01:24:26,630 --> 01:24:28,160
value<font color="#CCCCCC"> and then what I'm going to do down</font>

2008
01:24:28,160 --> 01:24:31,730
<font color="#E5E5E5">here is I'm going to use what Kotlin</font>

2009
01:24:31,730 --> 01:24:33,650
refers to as a smart cast so I'm going

2010
01:24:33,650 --> 01:24:38,900
<font color="#E5E5E5">to say if no</font><font color="#CCCCCC"> Val</font><font color="#E5E5E5"> 2 is not equal to null</font>

2011
01:24:38,900 --> 01:24:42,980
<font color="#E5E5E5">in that situation I am going to go in</font>

2012
01:24:42,980 --> 01:24:45,560
<font color="#CCCCCC">here and</font><font color="#E5E5E5"> try to print it out or print</font>

2013
01:24:45,560 --> 01:24:47,360
out length of that<font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to say</font>

2014
01:24:47,360 --> 01:24:52,670
<font color="#E5E5E5">no Val</font><font color="#CCCCCC"> - dot link and there that</font><font color="#E5E5E5"> is now</font>

2015
01:24:52,670 --> 01:24:54,230
if I didn't<font color="#E5E5E5"> have this here this would be</font>

2016
01:24:54,230 --> 01:24:56,090
<font color="#E5E5E5">throwing an error but since I do have</font>

2017
01:24:56,090 --> 01:24:57,470
that if statements there<font color="#E5E5E5"> like I said</font>

2018
01:24:57,470 --> 01:24:59,660
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> called a smart cast and Kotlin</font>

2019
01:24:59,660 --> 01:25:01,670
smart enough to<font color="#E5E5E5"> allow me</font><font color="#CCCCCC"> to do that</font>

2020
01:25:01,670 --> 01:25:04,310
since<font color="#E5E5E5"> I caught the null issue myself</font><font color="#CCCCCC"> you</font>

2021
01:25:04,310 --> 01:25:07,610
could<font color="#E5E5E5"> also use the Force operator to</font>

2022
01:25:07,610 --> 01:25:10,670
force an all assignment so in this way

2023
01:25:10,670 --> 01:25:15,800
we go<font color="#E5E5E5"> in all Val 3 is equal to null Val</font>

2024
01:25:15,800 --> 01:25:19,430
<font color="#CCCCCC">- and then you put - that's the force</font>

2025
01:25:19,430 --> 01:25:22,520
operator -<font color="#CCCCCC"> exclamation marks and lengths</font>

2026
01:25:22,520 --> 01:25:25,610
<font color="#E5E5E5">like that and it's going to provide</font><font color="#CCCCCC"> for</font>

2027
01:25:25,610 --> 01:25:28,940
the option and then the final thing<font color="#E5E5E5"> is</font>

2028
01:25:28,940 --> 01:25:32,450
you can use<font color="#CCCCCC"> the Elvis operator to assign</font>

2029
01:25:32,450 --> 01:25:35,300
a default<font color="#E5E5E5"> value if the value</font><font color="#CCCCCC"> could be</font>

2030
01:25:35,300 --> 01:25:37,460
not so and how that<font color="#E5E5E5"> would</font><font color="#CCCCCC"> work is you</font>

2031
01:25:37,460 --> 01:25:39,540
would go for

2032
01:25:39,540 --> 01:25:44,340
all<font color="#E5E5E5"> for this is a string and in this</font>

2033
01:25:44,340 --> 01:25:45,930
situation<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> going to call the old</font>

2034
01:25:45,930 --> 01:25:48,540
return null which only<font color="#E5E5E5"> exists to return</font>

2035
01:25:48,540 --> 01:25:51,300
<font color="#CCCCCC">null</font><font color="#E5E5E5"> and there is the Elvis operator</font>

2036
01:25:51,300 --> 01:25:52,500
it's going to be a question<font color="#CCCCCC"> mark</font>

2037
01:25:52,500 --> 01:25:55,530
followed by a colon<font color="#CCCCCC"> and there will say</font>

2038
01:25:55,530 --> 01:25:58,920
if<font color="#E5E5E5"> you try to assign a value of null</font>

2039
01:25:58,920 --> 01:26:02,400
<font color="#CCCCCC">tune all Val for instead install or</font>

2040
01:26:02,400 --> 01:26:05,640
assign the value of<font color="#CCCCCC"> no name okay so</font>

2041
01:26:05,640 --> 01:26:06,540
there you<font color="#E5E5E5"> go</font><font color="#CCCCCC"> guys</font>

2042
01:26:06,540 --> 01:26:09,060
did my<font color="#E5E5E5"> best</font><font color="#CCCCCC"> to cover the vast majority</font>

2043
01:26:09,060 --> 01:26:10,320
of what you're going to need to<font color="#E5E5E5"> get</font>

2044
01:26:10,320 --> 01:26:12,660
going<font color="#E5E5E5"> in regards to working with a</font>

2045
01:26:12,660 --> 01:26:15,240
<font color="#E5E5E5">absolutely super awesome language Kotlin</font>

2046
01:26:15,240 --> 01:26:18,060
<font color="#E5E5E5">and if you guys have any</font><font color="#CCCCCC"> questions or</font>

2047
01:26:18,060 --> 01:26:20,750
comments<font color="#E5E5E5"> please leave them</font><font color="#CCCCCC"> down below</font>

2048
01:26:20,750 --> 00:00:00,000
<font color="#E5E5E5">otherwise</font><font color="#CCCCCC"> till next</font><font color="#E5E5E5"> time</font>

